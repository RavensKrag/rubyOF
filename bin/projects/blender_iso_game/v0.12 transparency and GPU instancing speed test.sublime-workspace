{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"men",
				"mesh_entity"
			],
			[
				"defm",
				"default_material"
			],
			[
				"active",
				"active_object"
			],
			[
				"pack",
				"update_packed_entity_positions"
			],
			[
				"mesho",
				"mesh_obj"
			],
			[
				"sini",
				"shininess"
			],
			[
				"Blender",
				"BlenderLight"
			],
			[
				"batch",
				"batch"
			],
			[
				"matr",
				"material"
			],
			[
				"meshob",
				"mesh_objects"
			],
			[
				"nodes",
				"nodes"
			],
			[
				"rot",
				"rotate_vector"
			],
			[
				"Blendhr",
				"BlenderLight"
			],
			[
				"deps",
				"depsgraph"
			],
			[
				"ent",
				"entity_names"
			],
			[
				"datab",
				"datablock"
			],
			[
				"entit",
				"entity_list"
			],
			[
				"encode",
				"encode_transform"
			],
			[
				"generate",
				"generate_mesh"
			],
			[
				"enti",
				"entity_list"
			],
			[
				"Mesh",
				"BlenderMesh"
			],
			[
				"viewpo",
				"viewport_camera"
			],
			[
				"dep",
				"depsgraph"
			],
			[
				"relo",
				"reload_instancing_shaders"
			],
			[
				"FLAT",
				"FLOAT_MAX"
			],
			[
				"magni",
				"magnitude"
			],
			[
				"magnitude",
				"magnitude_normalized"
			],
			[
				"tras",
				"transforms"
			],
			[
				"fs",
				"frag_shader_path"
			],
			[
				"pos",
				"positions"
			],
			[
				"main",
				"max_instances"
			],
			[
				"view",
				"viewport_camera"
			],
			[
				"tims",
				"timestamps"
			],
			[
				"norm",
				"normal_data"
			],
			[
				"shm",
				"shm_dir"
			],
			[
				"fifo",
				"fifo_path"
			],
			[
				"queue",
				"outbound_queue"
			],
			[
				"index",
				"index_buffer"
			],
			[
				"specul",
				"specular_color"
			],
			[
				"setpo",
				"set_point_light"
			],
			[
				"attr",
				"attr_accessor"
			],
			[
				"or",
				"orientation"
			],
			[
				"diffuse",
				"diffuse_color"
			],
			[
				"point",
				"pointLight"
			],
			[
				"mat",
				"material2"
			],
			[
				"first",
				"first_update"
			],
			[
				"ofcam",
				"of_cam"
			],
			[
				"hit",
				"hit_wm_id"
			],
			[
				"parse",
				"parse_blender_data"
			],
			[
				"camera",
				"camera_settings_file"
			],
			[
				"jso",
				"json_obj"
			],
			[
				"Wait",
				"WaitReadable"
			],
			[
				"fr",
				"f_r"
			],
			[
				"midi",
				"midi_history"
			],
			[
				"noteo",
				"note_on"
			],
			[
				"delat",
				"deltatime"
			],
			[
				"setColor",
				"setColorPickerColor"
			],
			[
				"mfrac",
				"mFrameCounter_draw"
			],
			[
				"mplott",
				"mPloter_draw_time"
			],
			[
				"widt",
				"whole_iter_dt"
			],
			[
				"charm",
				"char_mapped_display"
			],
			[
				"CP",
				"CPP_Callbacks"
			],
			[
				"grid",
				"setGridCodepoint"
			],
			[
				"_grid",
				"_textGrid"
			],
			[
				"yi",
				"y_size"
			],
			[
				"x",
				"x_size"
			],
			[
				"profiler",
				"run_profiler"
			],
			[
				"new",
				"new_msg_count"
			],
			[
				"SPIKE",
				"RB_SPIKE_PROFILER"
			],
			[
				"spike",
				"spike_profiler"
			],
			[
				"sc",
				"stack_counter"
			],
			[
				"__",
				"__FILE__"
			],
			[
				"start",
				"start_time"
			],
			[
				"size",
				"sizeof\tDeviot sizeof()"
			],
			[
				"stack",
				"stack_pointer"
			],
			[
				"mesh",
				"meshes"
			],
			[
				"meshifl",
				"meshify_line_again"
			],
			[
				"meshif",
				"meshify_line_setup"
			],
			[
				"end",
				"endl"
			],
			[
				"meshifi",
				"meshify_line_setup"
			],
			[
				"from",
				"from_ruby"
			],
			[
				"charme",
				"char_mesh_dirty"
			],
			[
				"section",
				"section_count"
			],
			[
				"upda",
				"on_update"
			],
			[
				"update",
				"update_scheduler"
			],
			[
				"bars",
				"bar_segments"
			],
			[
				"colo",
				"colors"
			],
			[
				"ofPop",
				"ofPopMatrix"
			],
			[
				"ofPush",
				"ofPushMatrix"
			],
			[
				"define",
				"define_method"
			],
			[
				"prev",
				"previous_time"
			],
			[
				"fi",
				"frame_idx"
			],
			[
				"name",
				"section_name"
			],
			[
				"time",
				"time_used_this_frame"
			],
			[
				"time_",
				"time_used_this_frame"
			],
			[
				"need",
				"need_more_time"
			],
			[
				"tot",
				"total_time_per_frame"
			],
			[
				"updat",
				"update_steps"
			],
			[
				"spr",
				"sprite"
			],
			[
				"conta",
				"contain_vect"
			],
			[
				"fgor",
				"foreground"
			],
			[
				"color",
				"color_array"
			],
			[
				"colr",
				"color_array"
			],
			[
				"flush",
				"flushColors_fg"
			],
			[
				"bg_co",
				"bg_colors"
			],
			[
				"font",
				"fonts"
			],
			[
				"ofenbl",
				"ofEnableBlendMode__wrapper"
			],
			[
				"ofP",
				"ofPopMatrix"
			],
			[
				"bottm",
				"bottom_left"
			],
			[
				"fgc",
				"fg_color"
			],
			[
				"prints",
				"print_string"
			],
			[
				"each",
				"each_with_index"
			],
			[
				"yie",
				"yielder"
			],
			[
				"Enumera",
				"Enumerator"
			],
			[
				"getcolor",
				"getColor_bg"
			],
			[
				"colbg",
				"ColorHelper_bgOnly"
			],
			[
				"getcolo",
				"getColor_bg"
			],
			[
				"helpr",
				"ColorHelper_bgANDfg"
			],
			[
				"Colo",
				"ColorHelperHelper"
			],
			[
				"Ruby",
				"RubyOF"
			],
			[
				"defi",
				"define_method"
			],
			[
				"_colo",
				"_bgColorPixels"
			],
			[
				"_fg",
				"_fgColorPixels"
			],
			[
				"charw",
				"char_width_pxs"
			],
			[
				"origi",
				"uniform__origin"
			],
			[
				"gpu",
				"text_colors_gpu"
			],
			[
				"textc",
				"text_colors_cpu"
			],
			[
				"txc",
				"text_colors_cpu"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/home/ravenskrag/Code/Source/blender-git/build_linux_debug/bin/2.90/scripts/startup/bl_ui/properties_material.py",
			"settings":
			{
				"buffer_size": 8992,
				"line_ending": "Unix"
			}
		},
		{
			"file": "python/__init__.py",
			"settings":
			{
				"buffer_size": 39647,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "---",
			"settings":
			{
				"buffer_size": 3,
				"line_ending": "Unix",
				"name": "---"
			}
		},
		{
			"file": "lib/blender_sync.rb",
			"settings":
			{
				"buffer_size": 17628,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/dependency_graph.rb",
			"settings":
			{
				"buffer_size": 15977,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/shader.rb",
			"settings":
			{
				"buffer_size": 1880,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "bin/data/world_data.yaml",
			"settings":
			{
				"buffer_size": 22394,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/instancing_buffer.rb",
			"settings":
			{
				"buffer_size": 3784,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/render_batch.rb",
			"settings":
			{
				"buffer_size": 6824,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "ext/c_extension/callbacks.cpp",
			"settings":
			{
				"buffer_size": 46076,
				"line_ending": "Unix"
			}
		},
		{
			"file": "ext/c_extension/ofxDynamicMaterial.cpp",
			"settings":
			{
				"buffer_size": 16744,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "---",
			"settings":
			{
				"buffer_size": 3,
				"line_ending": "Unix",
				"name": "---"
			}
		},
		{
			"file": "lib/entities/blender_object.rb",
			"settings":
			{
				"buffer_size": 1942,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/entities/blender_light.rb",
			"settings":
			{
				"buffer_size": 3731,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/entities/blender_mesh.rb",
			"settings":
			{
				"buffer_size": 6916,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/entities/blender_material.rb",
			"settings":
			{
				"buffer_size": 1049,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/entities/viewport_camera.rb",
			"settings":
			{
				"buffer_size": 7149,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "---",
			"settings":
			{
				"buffer_size": 3,
				"line_ending": "Unix",
				"name": "---"
			}
		},
		{
			"file": "lib/live_code.rb",
			"settings":
			{
				"buffer_size": 6321,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/core.rb",
			"settings":
			{
				"buffer_size": 22702,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 34946 files for \"ofGetElapsedTimeMicros\"\n\n/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/profiler.html:\n 3316  <li class=\"color01\" style=\"display:none\">\n 3317  <a href=\"#\" class=\"toggle empty\" ></a>\n 3318: <span>0.00% (7.03%) &lt;Module::RubyOF::Utils&gt;#ofGetElapsedTimeMicros [4 calls, 8 total]</span>\n 3319  </li>\n 3320  <li class=\"color01\" style=\"display:none\">\n ....\n 3414  <li class=\"color01\" style=\"display:none\">\n 3415  <a href=\"#\" class=\"toggle empty\" ></a>\n 3416: <span>0.00% (2.03%) &lt;Module::RubyOF::Utils&gt;#ofGetElapsedTimeMicros [4 calls, 8 total]</span>\n 3417  </li>\n 3418  <li class=\"color01\" style=\"display:none\">\n\n/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/ext/addons_app/testApp/bin/testApp_debug:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/ext/c_extension/app.cpp:\n  355  \t\n  356  \tuint64_t dt, timer_start, timer_end;\n  357: \ttimer_start = ofGetElapsedTimeMicros();\n  358  \t\n  359  \t\n  ...\n  388  \t\n  389  \t\n  390: \ttimer_end = ofGetElapsedTimeMicros();\n  391  \tdt = timer_end - timer_start;\n  392  \t\n  ...\n  401  void rbApp::draw(){\n  402  \tuint64_t dt, timer_start, timer_end;\n  403: \ttimer_start = ofGetElapsedTimeMicros();\n  404  \t\n  405  \t// ========================================\n  ...\n  543  \t\n  544  \t\n  545: \ttimer_end = ofGetElapsedTimeMicros();\n  546  \tdt = timer_end - timer_start;\n  547  \t\n\n/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/ext/c_extension/spike_profiler.h:\n   71  \t\t\t// TODO: put data on the stack\n   72  \t\t\tstack_bp[stack_counter-1] = ProfilerData();\n   73: \t\t\tstack_bp[stack_counter-1].start_time = ofGetElapsedTimeMicros();\n   74  \t\t\t\n   75  \t\t\tpushed = true;\n   ..\n   89  \t\t\tuint64_t start_time = stack_bp[stack_counter-1].start_time;\n   90  \t\t\t\n   91: \t\t\tuint64_t now = ofGetElapsedTimeMicros();\n   92  \t\t\tuint64_t dt = now - start_time;\n   93  \t\t\t\n   ..\n  147  \t\t// TODO: put data on the stack\n  148  \t\tProfilerHelper::stack_bp[ProfilerHelper::stack_counter-1] = ProfilerData();\n  149: \t\tProfilerHelper::stack_bp[ProfilerHelper::stack_counter-1].start_time = ofGetElapsedTimeMicros();\n  150  \t}else{\n  151  \t\tcout << \"(stack too deep - no room to push state)\" << endl;\n  ...\n  161  \tuint64_t start_time = ProfilerHelper::stack_bp[ProfilerHelper::stack_counter-1].start_time;\n  162  \t\n  163: \tuint64_t now = ofGetElapsedTimeMicros();\n  164  \tuint64_t dt = now - start_time;\n  165  \t\n\n/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/lib/blender_sync.rb:\n   76    \n   77    def update\n   78:     # update_t0 = RubyOF::Utils.ofGetElapsedTimeMicros\n   79      \n   80      [MAX_READS, @msg_queue.length].min.times do\n   81        data_string = @msg_queue.pop\n   82        \n   83:       t0 = RubyOF::Utils.ofGetElapsedTimeMicros\n   84        blender_data = JSON.parse(data_string)\n   85        \n   ..\n   89        \n   90        # p list\n   91:       t1 = RubyOF::Utils.ofGetElapsedTimeMicros\n   92        \n   93        dt = t1-t0;\n   ..\n  110      \n  111      \n  112:     # update_t1 = RubyOF::Utils.ofGetElapsedTimeMicros\n  113      # dt = update_t1 - update_t0\n  114      # puts \"TOTAL UPDATE TIME: #{dt}\" if dt > 10\n  ...\n  120    def parse_blender_data(blender_data)\n  121      \n  122:     # t0 = RubyOF::Utils.ofGetElapsedTimeMicros\n  123      \n  124      # data = {\n  ...\n  456      \n  457      \n  458:     # t1 = RubyOF::Utils.ofGetElapsedTimeMicros\n  459      \n  460      # dt = t1-t0;\n\n/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/lib/core.rb:\n  309        # \n  310        \n  311:       # t0 = RubyOF::Utils.ofGetElapsedTimeMicros\n  312        # File.readlines(@world_save_file)\n  313:       # t1 = RubyOF::Utils.ofGetElapsedTimeMicros\n  314        # dt = t1-t0\n  315        # puts \"file load time: #{dt / 1000} ms\"\n  ...\n  340      @update_scheduler ||= Scheduler.new(self, :on_update, msec(16-4))\n  341      \n  342:     # puts \">>>>>>>> update #{RubyOF::Utils.ofGetElapsedTimeMicros}\"\n  343:     @start_time = RubyOF::Utils.ofGetElapsedTimeMicros\n  344      \n  345      # puts \"update thread: #{Thread.current.object_id}\" \n  ...\n  404    \n  405    def draw\n  406:     # puts \">>>>>>>> draw #{RubyOF::Utils.ofGetElapsedTimeMicros}\"\n  407      \n  408      # puts \"draw thread:   #{Thread.current.object_id}\" \n  409      \n  410      # draw_start = Time.now\n  411:     draw_start = RubyOF::Utils.ofGetElapsedTimeMicros\n  412      \n  413        on_draw()\n  414      \n  415      # draw_end = Time.now\n  416:     draw_end = RubyOF::Utils.ofGetElapsedTimeMicros\n  417      dt = draw_end - draw_start\n  418      puts \"draw duration: #{dt}\" if Scheduler::DEBUG\n  ...\n  434      \n  435      if @start_time\n  436:       end_time = RubyOF::Utils.ofGetElapsedTimeMicros\n  437        @whole_iter_dt = end_time - @start_time\n  438      end\n  ...\n  847  \n  848  def run_c_profiler\n  849:   start = RubyOF::Utils.ofGetElapsedTimeMicros\n  850    pid = Process.pid\n  851    thr = Thread.new do\n  852:     now = RubyOF::Utils.ofGetElapsedTimeMicros\n  853      \n  854      # min_delay = msec(3+16*60)\n  ...\n  856      # rand_delay = ((max_delay - min_delay)*rand + min_delay).to_i\n  857      # while now - start < rand_delay\n  858:     #   now = RubyOF::Utils.ofGetElapsedTimeMicros\n  859      #   sleep(1)\n  860      # end\n  ...\n  912          # end\n  913        \n  914:         # $spike_profiler_stack << RubyOF::Utils.ofGetElapsedTimeMicros\n  915          RubyOF::CPP_Callbacks.SpikeProfiler_begin(method)\n  916        end\n  ...\n  920      # puts \">> #{$spike_profiler_i}\"\n  921      \n  922:     # $spike_profiler_stack << RubyOF::Utils.ofGetElapsedTimeMicros\n  923      $spike_profiler_i += 1\n  924      \n  ...\n  933          # # puts \"return   #{tp.defined_class}##{tp.callee_id}\"\n  934          # start_time = $spike_profiler_stack.pop\n  935:         # now = RubyOF::Utils.ofGetElapsedTimeMicros\n  936          # # puts start_time.inspect\n  937          \n\n/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/lib/instancing_buffer.rb:\n   29    # https://www.youtube.com/watch?v=rXqKu9uC0f4\n   30    def pack_positions_with_indicies(positions_with_indicies)\n   31:     t0 = RubyOF::Utils.ofGetElapsedTimeMicros\n   32      \n   33      positions_with_indicies.each do |pos, i|\n   ..\n   72      # )\n   73      \n   74:     t1 = RubyOF::Utils.ofGetElapsedTimeMicros\n   75      \n   76      dt = t1-t0\n   ..\n   81      \n   82      \n   83:     t0 = RubyOF::Utils.ofGetElapsedTimeMicros\n   84      \n   85      # _pixels->getColor(x,y);\n   ..\n   87      @texture.load_data(@pixels)\n   88      \n   89:     t1 = RubyOF::Utils.ofGetElapsedTimeMicros\n   90      \n   91      dt = t1-t0\n   ..\n   96    \n   97    def pack_all_transforms(nodes)\n   98:     # t0 = RubyOF::Utils.ofGetElapsedTimeMicros\n   99      \n  100      RubyOF::CPP_Callbacks.pack_transforms(\n  ...\n  102      )\n  103      \n  104:     # t1 = RubyOF::Utils.ofGetElapsedTimeMicros\n  105      # dt = t1-t0\n  106      # puts \"time - pack instance positions: #{dt.to_f / 1000} ms\"\n  ...\n  108      \n  109      \n  110:     # t0 = RubyOF::Utils.ofGetElapsedTimeMicros\n  111      \n  112      @texture.load_data(@pixels)\n  113      \n  114:     # t1 = RubyOF::Utils.ofGetElapsedTimeMicros\n  115      # dt = t1-t0\n  116      # puts \"time - instance pixels to texture: #{dt.to_f / 1000} ms\"\n\n/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/lib/render_batch.rb:\n  226    # get all the nodes marked 'dirty' and update their positions in the instance data texture. only need to do this when @state == 'instanced_set'\n  227    def update_packed_entity_positions\n  228:     t0 = RubyOF::Utils.ofGetElapsedTimeMicros\n  229      nodes = @entity_list.collect{|entity| entity.node}\n  230      \n  231:     t1 = RubyOF::Utils.ofGetElapsedTimeMicros\n  232      dt = t1-t0\n  233      # puts \"time - gather mesh entities: #{dt.to_f / 1000} ms\"\n\n/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/lib/scheduler.rb:\n  104          # puts \"running update #{section_name}\"\n  105          \n  106:         timer_start = RubyOF::Utils.ofGetElapsedTimeMicros\n  107          \n  108            @f2.resume()\n  109          \n  110:         timer_end = RubyOF::Utils.ofGetElapsedTimeMicros\n  111          dt = timer_end - timer_start # TODO: account for timer looping\n  112          \n\n/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/lib/entities/blender_mesh.rb:\n   23      \n   24      \n   25:     t0 = RubyOF::Utils.ofGetElapsedTimeMicros\n   26      \n   27      # @normals.each_cons(3) do |vert|\n   ..\n   43                                                 @tris.flatten)\n   44      \n   45:     t1 = RubyOF::Utils.ofGetElapsedTimeMicros\n   46      \n   47      dt = t1-t0;\n\n/home/ravenskrag/Desktop/gem_structure/bin/projects/boilerplate/lib/window.rb:\n  106  \t\t\t\"dt: #{ofGetLastFrameTime.round(5)}\",\n  107  \t\t\t\"fps: #{ofGetFrameRate.round(5)}\",\n  108: \t\t\t\"time (uSec): #{RubyOF::Utils.ofGetElapsedTimeMicros}\",\n  109  \t\t\t\"time (mSec): #{RubyOF::Utils.ofGetElapsedTimeMillis}\"\n  110  \t\t].each_with_index do |string, i|\n\n/home/ravenskrag/Desktop/gem_structure/bin/projects/database/lib/window.rb:\n  178  \t\t\t\"dt: #{ofGetLastFrameTime.round(5)}\",\n  179  \t\t\t\"fps: #{ofGetFrameRate.round(5)}\",\n  180: \t\t\t\"time (uSec): #{RubyOF::Utils.ofGetElapsedTimeMicros}\",\n  181  \t\t\t\"time (mSec): #{RubyOF::Utils.ofGetElapsedTimeMillis}\"\n  182  \t\t].each_with_index do |string, i|\n\n/home/ravenskrag/Desktop/gem_structure/bin/projects/event_ordering/ext/addons_app/testApp/bin/testApp_debug:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/bin/projects/event_ordering/ext/c_extension/app.cpp:\n  171  \t// get the current time in microseconds\n  172  \t// (time the app has been running)\n  173: \tuint64_t now = ofGetElapsedTimeMicros();\n  174  \t\n  175  \t// update the time display based on the current time\n\n/home/ravenskrag/Desktop/gem_structure/bin/projects/example/lib/window.rb:\n  513  \t\t\t\"dt: #{ofGetLastFrameTime.round(5)}\",\n  514  \t\t\t\"fps: #{ofGetFrameRate.round(5)}\",\n  515: \t\t\t\"time (uSec): #{RubyOF::Utils.ofGetElapsedTimeMicros}\",\n  516  \t\t\t\"time (mSec): #{RubyOF::Utils.ofGetElapsedTimeMillis}\"\n  517  \t\t].each_with_index do |string, i|\n\n/home/ravenskrag/Desktop/gem_structure/bin/projects/grapevine_midi/callgrind.out.13568:\n 423628  +5 20694\n 423629  \n 423630: fn=(224292) ofGetElapsedTimeMicros()\n 423631  348 13524\n 423632  +1 2254\n\n/home/ravenskrag/Desktop/gem_structure/bin/projects/grapevine_midi/ext/addons_app/testApp/bin/testApp_debug:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/bin/projects/grapevine_midi/ext/c_extension/app.cpp:\n  355  \t\n  356  \tuint64_t dt, timer_start, timer_end;\n  357: \ttimer_start = ofGetElapsedTimeMicros();\n  358  \t\n  359  \t\n  ...\n  388  \t\n  389  \t\n  390: \ttimer_end = ofGetElapsedTimeMicros();\n  391  \tdt = timer_end - timer_start;\n  392  \t\n  ...\n  401  void rbApp::draw(){\n  402  \tuint64_t dt, timer_start, timer_end;\n  403: \ttimer_start = ofGetElapsedTimeMicros();\n  404  \t\n  405  \t// ========================================\n  ...\n  427  \t\n  428  \t\n  429: \ttimer_end = ofGetElapsedTimeMicros();\n  430  \tdt = timer_end - timer_start;\n  431  \t\n\n/home/ravenskrag/Desktop/gem_structure/bin/projects/grapevine_midi/ext/c_extension/spike_profiler.h:\n   71  \t\t\t// TODO: put data on the stack\n   72  \t\t\tstack_bp[stack_counter-1] = ProfilerData();\n   73: \t\t\tstack_bp[stack_counter-1].start_time = ofGetElapsedTimeMicros();\n   74  \t\t\t\n   75  \t\t\tpushed = true;\n   ..\n   89  \t\t\tuint64_t start_time = stack_bp[stack_counter-1].start_time;\n   90  \t\t\t\n   91: \t\t\tuint64_t now = ofGetElapsedTimeMicros();\n   92  \t\t\tuint64_t dt = now - start_time;\n   93  \t\t\t\n   ..\n  147  \t\t// TODO: put data on the stack\n  148  \t\tProfilerHelper::stack_bp[ProfilerHelper::stack_counter-1] = ProfilerData();\n  149: \t\tProfilerHelper::stack_bp[ProfilerHelper::stack_counter-1].start_time = ofGetElapsedTimeMicros();\n  150  \t}else{\n  151  \t\tcout << \"(stack too deep - no room to push state)\" << endl;\n  ...\n  161  \tuint64_t start_time = ProfilerHelper::stack_bp[ProfilerHelper::stack_counter-1].start_time;\n  162  \t\n  163: \tuint64_t now = ofGetElapsedTimeMicros();\n  164  \tuint64_t dt = now - start_time;\n  165  \t\n\n/home/ravenskrag/Desktop/gem_structure/bin/projects/grapevine_midi/lib/core.rb:\n 1101    # use a structure where Fiber does not need to be regenerated on reload\n 1102    def update\n 1103:     # puts \">>>>>>>> update #{RubyOF::Utils.ofGetElapsedTimeMicros}\"\n 1104:     @start_time = RubyOF::Utils.ofGetElapsedTimeMicros\n 1105      \n 1106      # puts \"update thread: #{Thread.current.object_id}\" \n ....\n 1492    \n 1493    def draw\n 1494:     # puts \">>>>>>>> draw #{RubyOF::Utils.ofGetElapsedTimeMicros}\"\n 1495      \n 1496      # puts \"draw thread:   #{Thread.current.object_id}\" \n 1497      \n 1498      # draw_start = Time.now\n 1499:     draw_start = RubyOF::Utils.ofGetElapsedTimeMicros\n 1500      \n 1501        on_draw()\n 1502      \n 1503      # draw_end = Time.now\n 1504:     draw_end = RubyOF::Utils.ofGetElapsedTimeMicros\n 1505      dt = draw_end - draw_start\n 1506      puts \"draw duration: #{dt}\" if Scheduler::DEBUG\n ....\n 1523      \n 1524      if @start_time\n 1525:       end_time = RubyOF::Utils.ofGetElapsedTimeMicros\n 1526        @whole_iter_dt = end_time - @start_time\n 1527      end\n ....\n 1867  \n 1868  def run_c_profiler\n 1869:   start = RubyOF::Utils.ofGetElapsedTimeMicros\n 1870    pid = Process.pid\n 1871    thr = Thread.new do\n 1872:     now = RubyOF::Utils.ofGetElapsedTimeMicros\n 1873      \n 1874      # min_delay = msec(3+16*60)\n ....\n 1876      # rand_delay = ((max_delay - min_delay)*rand + min_delay).to_i\n 1877      # while now - start < rand_delay\n 1878:     #   now = RubyOF::Utils.ofGetElapsedTimeMicros\n 1879      #   sleep(1)\n 1880      # end\n ....\n 1932          # end\n 1933        \n 1934:         # $spike_profiler_stack << RubyOF::Utils.ofGetElapsedTimeMicros\n 1935          RubyOF::CPP_Callbacks.SpikeProfiler_begin(method)\n 1936        end\n ....\n 1940      # puts \">> #{$spike_profiler_i}\"\n 1941      \n 1942:     # $spike_profiler_stack << RubyOF::Utils.ofGetElapsedTimeMicros\n 1943      $spike_profiler_i += 1\n 1944      \n ....\n 1953          # # puts \"return   #{tp.defined_class}##{tp.callee_id}\"\n 1954          # start_time = $spike_profiler_stack.pop\n 1955:         # now = RubyOF::Utils.ofGetElapsedTimeMicros\n 1956          # # puts start_time.inspect\n 1957          \n\n/home/ravenskrag/Desktop/gem_structure/bin/projects/grapevine_midi/lib/scheduler.rb:\n  104          # puts \"running update #{section_name}\"\n  105          \n  106:         timer_start = RubyOF::Utils.ofGetElapsedTimeMicros\n  107          \n  108            @f2.resume()\n  109          \n  110:         timer_end = RubyOF::Utils.ofGetElapsedTimeMicros\n  111          dt = timer_end - timer_start # TODO: account for timer looping\n  112          \n\n/home/ravenskrag/Desktop/gem_structure/bin/projects/hunspell/lib/window.rb:\n  202  \t\t\t\"dt: #{ofGetLastFrameTime.round(5)}\",\n  203  \t\t\t\"fps: #{ofGetFrameRate.round(5)}\",\n  204: \t\t\t\"time (uSec): #{RubyOF::Utils.ofGetElapsedTimeMicros}\",\n  205  \t\t\t\"time (mSec): #{RubyOF::Utils.ofGetElapsedTimeMillis}\"\n  206  \t\t].each_with_index do |string, i|\n\n/home/ravenskrag/Desktop/gem_structure/bin/projects/livecode2/ext/addons_app/testApp/bin/testApp_debug:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/bin/projects/livecode2/ext/c_extension/app.cpp:\n  175  \t// get the current time in microseconds\n  176  \t// (time the app has been running)\n  177: \tuint64_t now = ofGetElapsedTimeMicros();\n  178  \t\n  179  \t// update the time display based on the current time\n\n/home/ravenskrag/Desktop/gem_structure/bin/projects/livecode2/lib/window.rb:\n  355        \"dt: #{ofGetLastFrameTime.round(5)}\",\n  356        \"fps: #{ofGetFrameRate.round(5)}\",\n  357:       \"time (uSec): #{RubyOF::Utils.ofGetElapsedTimeMicros}\",\n  358        \"time (mSec): #{RubyOF::Utils.ofGetElapsedTimeMillis}\"\n  359      ].each_with_index do |string, i|\n\n/home/ravenskrag/Desktop/gem_structure/bin/projects/livecoding/lib/window.rb:\n  106  \t\t\t\"dt: #{ofGetLastFrameTime.round(5)}\",\n  107  \t\t\t\"fps: #{ofGetFrameRate.round(5)}\",\n  108: \t\t\t\"time (uSec): #{RubyOF::Utils.ofGetElapsedTimeMicros}\",\n  109  \t\t\t\"time (mSec): #{RubyOF::Utils.ofGetElapsedTimeMillis}\"\n  110  \t\t].each_with_index do |string, i|\n\n/home/ravenskrag/Desktop/gem_structure/bin/projects/round_tripping/ext/callbacks/callbacks.cpp:\n   85  \t\n   86  \t// rb_cUtils\n   87: \t// \t.define_module_function(\"ofGetElapsedTimeMicros\",   &ofGetElapsedTimeMicros)\n   88  \t// \t.define_module_function(\"ofGetElapsedTimeMillis\",   &ofGetElapsedTimeMillis)\n   89  \t// \t.define_module_function(\"ofGetElapsedTimef\",        &ofGetElapsedTimef)\n\n/home/ravenskrag/Desktop/gem_structure/bin/projects/round_tripping/lib/window.rb:\n  119  \t\t\t\"dt: #{ofGetLastFrameTime.round(5)}\",\n  120  \t\t\t\"fps: #{ofGetFrameRate.round(5)}\",\n  121: \t\t\t\"time (uSec): #{RubyOF::Utils.ofGetElapsedTimeMicros}\",\n  122  \t\t\t\"time (mSec): #{RubyOF::Utils.ofGetElapsedTimeMillis}\"\n  123  \t\t].each_with_index do |string, i|\n\n/home/ravenskrag/Desktop/gem_structure/bin/projects/sketch/lib/window.rb:\n   65  \t\n   66  \tdef us\n   67: \t\tRubyOF::Utils.ofGetElapsedTimeMicros\n   68  \tend\n   69  end\n   ..\n  234  \t\t\t\"dt: #{ofGetLastFrameTime.round(5)}\",\n  235  \t\t\t\"fps: #{ofGetFrameRate.round(5)}\",\n  236: \t\t\t\"time (uSec): #{RubyOF::Utils.ofGetElapsedTimeMicros}\",\n  237  \t\t\t\"time (mSec): #{RubyOF::Utils.ofGetElapsedTimeMillis}\"\n  238  \t\t].each_with_index do |string, i|\n\n/home/ravenskrag/Desktop/gem_structure/bin/projects/youtube/ext/addons_app/testApp/bin/testApp_debug:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/bin/projects/youtube/ext/c_extension/app.cpp:\n  175  \t// get the current time in microseconds\n  176  \t// (time the app has been running)\n  177: \tuint64_t now = ofGetElapsedTimeMicros();\n  178  \t\n  179  \t// update the time display based on the current time\n\n/home/ravenskrag/Desktop/gem_structure/bin/projects/youtube/lib/window.rb:\n  375  \t\t\t\"dt: #{ofGetLastFrameTime.round(5)}\",\n  376  \t\t\t\"fps: #{ofGetFrameRate.round(5)}\",\n  377: \t\t\t\"time (uSec): #{RubyOF::Utils.ofGetElapsedTimeMicros}\",\n  378  \t\t\t\"time (mSec): #{RubyOF::Utils.ofGetElapsedTimeMillis}\"\n  379  \t\t].each_with_index do |string, i|\n\n/home/ravenskrag/Desktop/gem_structure/ext/oF_apps/testApp/bin/testApp_debug:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/CHANGELOG.md:\n 2270  ---------------------------------------------------------------\n 2271  \n 2272: / ofGetElapsedTimef() no longer wraps after ~71 minutes, which was a bug introduced with 0072. ofGetElapsedTimeMicros() previously also wrapped after ~71 minutes, and this has been fixed as well.\n 2273  / fixed broken pause and other fixes in ofVideoPlayer on OSX\n 2274  / fixes to AndroidVideoGrabber\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxImGui/example-demo/bin/example-demo:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxNetwork/src/ofxTCPManager.cpp:\n  369  \tif (m_hSocket == INVALID_SOCKET) return(SOCKET_ERROR);\n  370  \n  371: \tauto timestamp = ofGetElapsedTimeMicros();\n  372  \tauto timeleftSecs = m_dwTimeoutSend;\n  373  \tauto timeleftMicros = 0;\n  ...\n  390  \t\tbytesleft -=ret;\n  391  \t\tif (m_dwTimeoutSend\t!= NO_TIMEOUT){\n  392: \t\t\tauto now = ofGetElapsedTimeMicros();\n  393  \t\t\tauto diff = now - timestamp;\n  394  \t\t\tif (diff > m_dwTimeoutSend * 1000000){\n  ...\n  452  \tif (m_hSocket == INVALID_SOCKET) return(SOCKET_ERROR);\n  453  \n  454: \tauto timestamp = ofGetElapsedTimeMicros();\n  455  \tauto timeleftSecs = m_dwTimeoutReceive;\n  456  \tauto timeleftMicros = 0;\n  ...\n  474  \n  475  \t\tif (m_dwTimeoutReceive\t!= NO_TIMEOUT){\n  476: \t\t\tauto now = ofGetElapsedTimeMicros();\n  477  \t\t\tauto diff = now - timestamp;\n  478  \t\t\tif(diff > m_dwTimeoutReceive){\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxNetwork/src/ofxUDPManager.cpp:\n  306  \tif (m_hSocket == INVALID_SOCKET) return(SOCKET_ERROR);\n  307  \n  308: \tauto timestamp = ofGetElapsedTimeMicros();\n  309  \tauto timeleftSecs = m_dwTimeoutSend;\n  310  \tauto timeleftMicros = 0;\n  ...\n  327  \t\tbytesleft -=ret;\n  328  \t\tif (m_dwTimeoutSend\t!= NO_TIMEOUT){\n  329: \t\t\tauto now = ofGetElapsedTimeMicros();\n  330  \t\t\tauto diff = now - timestamp;\n  331  \t\t\tif (diff > m_dwTimeoutSend * 1000000){\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/apps/projectGenerator/commandLine/bin/projectGenerator:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/gl/areaLightExample/bin/areaLightExample:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/gl/singleLightExample/bin/singleLightExample:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/gl/vboMeshDrawInstancedExample/bin/vboMeshDrawInstancedExample:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/utils/ofUtils.cpp:\n  346  \n  347  //--------------------------------------\n  348: uint64_t ofGetElapsedTimeMicros(){\n  349  \treturn std::chrono::duration_cast<std::chrono::microseconds>(of::priv::getClock().getElapsedTime()).count();\n  350  }\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/utils/ofUtils.h:\n   14  ///\n   15  /// This method resets the times returned by ofGetElapsedTimef(),\n   16: /// ofGetElapsedTimeMillis() and ofGetElapsedTimeMicros() to zero.\n   17  ///\n   18  /// \\note This is called on the first frame during app startup.\n   ..\n   45  ///\n   46  /// \\returns the elapsed time in microseconds (1000000 microseconds = 1 second).\n   47: uint64_t ofGetElapsedTimeMicros();\n   48  \n   49  /// \\brief Get the number of frames rendered since the program started.\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/projectGenerator-linux64/resources/app/app/projectGenerator:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/rubyOF.cpp:\n  190  \t\n  191  \trb_cUtils\n  192: \t\t.define_module_function(\"ofGetElapsedTimeMicros\",   &ofGetElapsedTimeMicros)\n  193  \t\t.define_module_function(\"ofGetElapsedTimeMillis\",   &ofGetElapsedTimeMillis)\n  194  \t\t.define_module_function(\"ofGetElapsedTimef\",        &ofGetElapsedTimef)\n\n/home/ravenskrag/Desktop/gem_structure/vendor/OpenFrameworks/of_v0.10.0_linux64gcc6_release.tar.gz:\n    File too large, skipping\n\n/home/ravenskrag/Desktop/gem_structure/vendor/OpenFrameworks/of_v0.11.0_linux64gcc6_release.tar.gz:\n    File too large, skipping\n\n121 matches across 45 files\n",
			"settings":
			{
				"buffer_size": 22543,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/build/window_guard.rb",
			"settings":
			{
				"buffer_size": 1008,
				"line_ending": "Unix"
			}
		},
		{
			"file": "bin/data/blender_data.json",
			"settings":
			{
				"buffer_size": 2226,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/window.rb",
			"settings":
			{
				"buffer_size": 4123,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/GraphicsAdvanced.cpp",
			"settings":
			{
				"buffer_size": 25972,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/Graphics.cpp",
			"settings":
			{
				"buffer_size": 8045,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/graphics.rb",
			"settings":
			{
				"buffer_size": 1911,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/Color.cpp",
			"settings":
			{
				"buffer_size": 7756,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/rubyOF.cpp",
			"settings":
			{
				"buffer_size": 7087,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/glm_bindings.cpp",
			"settings":
			{
				"buffer_size": 4914,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/utils/ofUtils.h",
			"settings":
			{
				"buffer_size": 41124,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/utils/ofUtils.cpp",
			"settings":
			{
				"buffer_size": 35993,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "--",
			"settings":
			{
				"buffer_size": 2,
				"line_ending": "Unix",
				"name": "--"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/lib/rubyOF.rb",
			"settings":
			{
				"buffer_size": 1432,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/fbo.rb",
			"settings":
			{
				"buffer_size": 1050,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/mesh.rb",
			"settings":
			{
				"buffer_size": 1172,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "TODO: implement YAML serialization for ofColor / ofFloatColor",
			"settings":
			{
				"buffer_size": 61,
				"line_ending": "Unix",
				"name": "TODO: implement YAML serialization for ofColor / o"
			}
		},
		{
			"contents": "black mesh problem goes away if I select a new material, so it's not a problem with the normals or the lighting\nit has something to do with the materials\nbut the data is save the same way every time, so it seems like something to do with loading the data / interpreting the data, rather than a problem with saving to disk",
			"settings":
			{
				"buffer_size": 321,
				"line_ending": "Unix",
				"name": "black mesh problem goes away if I select a new mat"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/color.rb",
			"settings":
			{
				"buffer_size": 5190,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/node.rb",
			"settings":
			{
				"buffer_size": 895,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/glm_vec4.rb",
			"settings":
			{
				"buffer_size": 1461,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/glm_vec3.rb",
			"settings":
			{
				"buffer_size": 1329,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/glm_vec2.rb",
			"settings":
			{
				"buffer_size": 1257,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/glm_quat.rb",
			"settings":
			{
				"buffer_size": 2018,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/profiler.callgrind",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 750.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"glsl",
				"Set Syntax: GLSL"
			],
			[
				"sort",
				"SortBy: Alphabetically"
			],
			[
				"sor",
				"SortBy: Alphabetically"
			],
			[
				"pyth",
				"Set Syntax: Python"
			],
			[
				"wra",
				"Word Wrap: Toggle"
			],
			[
				"lower",
				"Convert Case: Lower Case"
			],
			[
				"c++",
				"Set Syntax: C++"
			],
			[
				"upp",
				"Convert Case: Upper Case"
			],
			[
				"upper",
				"Convert Case: Upper Case"
			],
			[
				"uniq",
				"Permute Lines: Unique"
			],
			[
				"lowe",
				"Convert Case: Lower Case"
			],
			[
				"wrap",
				"Word Wrap: Toggle"
			],
			[
				"ruby",
				"Set Syntax: Ruby"
			],
			[
				"jso",
				"Set Syntax: JSON"
			],
			[
				"python",
				"Set Syntax: Python"
			],
			[
				"low",
				"Convert Case: Lower Case"
			],
			[
				"upper ",
				"Convert Case: Upper Case"
			],
			[
				"disabl",
				"Package Control: Disable Package"
			],
			[
				"enable",
				"Package Control: Enable Package"
			],
			[
				"expor",
				"Export to HTML: Show Export Menu"
			],
			[
				"enable pack",
				"Package Control: Enable Package"
			],
			[
				"disab",
				"Package Control: Disable Package"
			],
			[
				"pagke li",
				"Package Control: List Packages"
			],
			[
				"packag list",
				"Package Control: List Packages"
			],
			[
				"package list",
				"Package Control: List Packages"
			],
			[
				"syntax glsl",
				"Set Syntax: GLSL"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"rub",
				"Set Syntax: Ruby"
			],
			[
				"synt rub",
				"Set Syntax: Ruby"
			],
			[
				"auto",
				"Toggle AutoSave: current file only"
			],
			[
				"install pa",
				"Package Control: Install Package"
			],
			[
				"gig",
				"Git GUI Clients: Gitg"
			],
			[
				"make",
				"Set Syntax: Makefile"
			],
			[
				"yaml",
				"Set Syntax: YAML"
			],
			[
				"krake",
				"Git GUI Clients: GitKraken"
			],
			[
				"commit",
				"Git: Commit"
			],
			[
				"gitg",
				"Git GUI Clients: Gitg"
			],
			[
				"g",
				"Git GUI Clients: Gitg"
			],
			[
				"view as",
				"SublimeHighlight: view as HTML"
			],
			[
				"convert to html",
				"SublimeHighlight: convert to HTML"
			],
			[
				"convert",
				"SublimeHighlight: convert to RTF"
			],
			[
				"package insta",
				"Package Control: Install Package"
			],
			[
				"packge remove",
				"Package Control: Remove Package"
			],
			[
				"list ",
				"Package Control: List Packages"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"enable ",
				"Package Control: Enable Package"
			],
			[
				"disa",
				"Package Control: Disable Package"
			],
			[
				"add repo",
				"Package Control: Add Repository"
			],
			[
				"packgae",
				"Package Control: List Packages"
			],
			[
				"package",
				"Package Control: Disable Package"
			],
			[
				"html",
				"Set Syntax: HTML"
			],
			[
				"gitgui",
				"Git GUI Clients: Gitg"
			],
			[
				"makefil",
				"Set Syntax: Makefile"
			],
			[
				"ging",
				"Git GUI Clients: Gitg"
			],
			[
				"yam",
				"Set Syntax: YAML"
			],
			[
				"pacage",
				"Package Control: Enable Package"
			],
			[
				"amke",
				"Set Syntax: Makefile"
			],
			[
				"makefile",
				"Set Syntax: Makefile"
			],
			[
				"objec",
				"Set Syntax: Objective-C"
			],
			[
				"lua",
				"Set Syntax: Lua"
			],
			[
				"makef",
				"Set Syntax: Makefile"
			],
			[
				"packag",
				"Package Control: Install Package"
			],
			[
				"irb",
				"SublimeREPL: Ruby IRB (deprecated)"
			],
			[
				"ruby ",
				"SublimeREPL: Ruby"
			],
			[
				"r oc",
				"SublimeREPL: Octave"
			],
			[
				"repl o",
				"SublimeREPL: Octave"
			],
			[
				"octav",
				"SublimeREPL: Octave"
			],
			[
				"repl ruby",
				"SublimeREPL: Ruby"
			],
			[
				"repl ru",
				"SublimeREPL: Ruby"
			],
			[
				"repl",
				"SublimeREPL: Octave"
			],
			[
				"repl rub",
				"SublimeREPL: Ruby"
			],
			[
				"repl j",
				"SublimeREPL: Clojure"
			],
			[
				"mal",
				"Set Syntax: MATLAB"
			],
			[
				"matl",
				"Set Syntax: MATLAB"
			],
			[
				"keyb",
				"Preferences: Key Bindings - User"
			],
			[
				"mat",
				"Set Syntax: MATLAB"
			],
			[
				"package en",
				"Package Control: Upgrade Package"
			],
			[
				"package dis",
				"Package Control: Disable Package"
			],
			[
				"matlab",
				"Set Syntax: MATLAB"
			],
			[
				"repl oca",
				"SublimeREPL: Octave"
			],
			[
				"repl octa",
				"SublimeREPL: Octave"
			],
			[
				"install p",
				"Package Control: Install Package"
			],
			[
				"package in",
				"Package Control: Install Package"
			],
			[
				"text",
				"Set Syntax: Plain Text"
			],
			[
				"mark",
				"Set Syntax: Markdown"
			],
			[
				"todo",
				"Show TODOs: Project and open files"
			],
			[
				"pla",
				"Set Syntax: Plain Text"
			],
			[
				"pack",
				"Package Control: Disable Package"
			],
			[
				"tod",
				"Show TODOs: Project and open files"
			],
			[
				"to",
				"Show TODOs: Project and open files"
			],
			[
				"",
				"About"
			],
			[
				"pac",
				"Package Control: List Packages"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"log",
				"Git: Log Current File"
			],
			[
				"st",
				"Git: Status"
			],
			[
				"stat",
				"Git: Status"
			],
			[
				"pre",
				"Markdown Preview: preview in Browser"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"pr",
				"Markdown Preview: preview in Browser"
			],
			[
				"previe",
				"Markdown Preview: preview in Browser"
			],
			[
				"snipp",
				"Snippet: if … end"
			],
			[
				"snip",
				"Snippet: YAML.load(file)"
			],
			[
				"prefer",
				"Preferences: Settings - User"
			],
			[
				"key",
				"Preferences: Key Bindings - User"
			],
			[
				"vie",
				"Markdown Preview: preview in Browser"
			],
			[
				"pa",
				"Package Control: List Packages"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"reve",
				"File: Revert"
			],
			[
				"markdown",
				"Markdown Preview: preview in Sublime Text"
			],
			[
				"view",
				"Markdown Preview: preview in Browser"
			],
			[
				"prev",
				"Markdown Preview: preview in Browser"
			],
			[
				"smark",
				"Set Syntax: Markdown"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"brow",
				"Preferences: Browse Packages"
			],
			[
				"bro",
				"Preferences: Browse Packages"
			],
			[
				"git pu",
				"Git: Push"
			],
			[
				"fet",
				"Git: Fetch"
			],
			[
				"com",
				"Git: Commit"
			],
			[
				"add",
				"Git: Add Current File"
			],
			[
				"syntax te",
				"Set Syntax: Textile"
			],
			[
				"lo",
				"Git: Log All"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"oto",
				"Show TODOs: Open files only"
			],
			[
				"show",
				"Show TODOs: Project and open files"
			],
			[
				"list",
				"Package Control: List Packages"
			],
			[
				"pcaka",
				"Package Control: Install Package"
			],
			[
				"pcak",
				"Package Control: Discover Packages"
			]
		],
		"width": 1062.0
	},
	"console":
	{
		"height": 259.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
	],
	"file_history":
	[
		"/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/window.rb",
		"/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/pixels.rb",
		"/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/shader.rb",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/Gemfile",
		"/home/ravenskrag/Desktop/gem_structure/Gemfile",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/3d/ofNode.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/3d/ofNode.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/Fbo.cpp",
		"/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/color.rb",
		"/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/fbo.rb",
		"/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/texture.rb",
		"/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/mesh.rb",
		"/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/resource_manager.rb",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/blender_iso_game.sublime-project",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/graphics/blendingExample/src/ofApp.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/gl/alphaMaskingShaderExample/src/ofApp.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofGLProgrammableRenderer.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/graphics/ofGraphics.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/graphics/graphicsExample/README.md",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/math/noise1dOctaveExample/src/ofApp.cpp",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/.bundle/config",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/ext/c_extension/ofxInstancingMaterial.h",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/ext/c_extension/ofxInstancingMaterial.cpp",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/ext/c_extension/shaders/phong.frag",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/ext/c_extension/shaders/phong_instanced.vert",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/types/ofColor.cpp",
		"/home/ravenskrag/Code/Source/blender-git/build_linux_debug/bin/2.90/scripts/addons/archipack/presets/archipack_floor/herringbone_50x10.py",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/ext/c_extension/app.cpp",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/python/properties/render_engine_properties.py",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/python/properties/material_properties.py",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/python/ui/RubyOF_properties.py",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/blender_iso_game.sublime-workspace",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxMidi/src/ofxMidiIn.h",
		"/home/ravenskrag/Code/Source/blender-git/build_linux_debug/bin/2.90/scripts/addons/space_view3d_stored_views/core.py",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxOpenCv/libs/opencv/include/opencv2/ts/cuda_perf.hpp",
		"/home/ravenskrag/Desktop/gem_structure/vendor/apothecary/glm/include/glm/gtx/string_cast.inl",
		"/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/glm_quat.rb",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/bin/data/blender_data.json",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/youtube/lib/serialization/chipmunk/vec2.rb",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/lib/helpers.rb",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/lib/dependency_graph.rb",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofTexture.cpp",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/lib/blender_light.rb",
		"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/GraphicsAdvanced.cpp",
		"/home/ravenskrag/Desktop/gem_structure/lib/rubyOF.rb",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/gl/computeShaderTextureExample/bin/data/computeShader.glsl",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/gl/computeShaderTextureExample/src/ofApp.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/gl/computeShaderTextureExample/src/ofApp.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/gl/computeShaderTextureExample/computeShaderTextureExample.qbs",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofBufferObject.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/gl/multiTextureShaderExample/src/ofApp.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/gl/vboMeshDrawInstancedExample/bin/data/shaders/instanced.frag",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/gl/vboMeshDrawInstancedExample/bin/data/shaders/instanced.vert",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/gl/vboMeshDrawInstancedExample/src/ofApp.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/gl/vboMeshDrawInstancedExample/src/ofApp.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/gl/vboMeshDrawInstancedExample/vboMeshDrawInstancedExample.qbs",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/lib/blender_object.rb",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofVbo.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofVbo.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofVboMesh.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofVboMesh.cpp",
		"/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/glm_vec3.rb",
		"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/rubyOF.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/GraphicsAdvanced.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofGLProgrammableRenderer.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/graphics/ofPixels.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/graphics/ofPixels.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofTexture.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofMaterial.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofMaterial.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofShader.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofShader.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/shaders/phong.vert",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/shaders/phong.frag",
		"/home/ravenskrag/Desktop/New Folder (2)/writing/003 research papers/2020.10.31 using blender with external renderer/notes__defaultShader_noMaterialMeansNoLights.cpp",
		"/home/ravenskrag/Desktop/New Folder (2)/writing/003 research papers/2020.10.31 using blender with external renderer/notes__ofMaterial_bindingShaderAndSettingLightUniforms.cpp",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/grapevine_midi/bin/data/char_display_bg.vert",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/grapevine_midi/bin/data/char_display_bg.frag",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/grapevine_midi/bin/data/default.vert",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/grapevine_midi/bin/data/default_tex2DNoColor.frag",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/ext/c_extension/callbacks.cpp",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/grapevine_midi/lib/core.rb",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/gl/vboMeshDrawInstancedExample/src/main.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/rubyOF.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/Color.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/Color.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/types/ofColor.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/graphics/ofGraphicsConstants.h",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/bin/data/char_display_bg.frag",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofGLRenderer.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/3d/ofMesh.inl",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofLight.cpp",
		"/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/glm_vec2.rb",
		"/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/glm_vec4.rb",
		"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/image.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/image.h",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/ext/c_extension/phong_instanced.vert",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/gl/alphaMaskingShaderExample/bin/data/shaders_gles/alphamask.frag",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/bin/data/material_editor.frag",
		"/home/ravenskrag/Desktop/New Folder (2)/writing/003 research papers/2020.05.10 p3 a modern curses-like graphics interface/notes__ofTrueTypeFont_defaultShaderBinding.cpp",
		"/home/ravenskrag/Desktop/gem_structure/build/window_guard.rb",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/bin/data/world_data.yaml",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/lib/window.rb",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/python/__init__.py",
		"/home/ravenskrag/Code/Source/blender-git/build_linux_debug/bin/2.90/scripts/startup/bl_ui/properties_data_light.py",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/livecode2/lib/controller_state_machine.rb",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/gl/areaLightExample/config.make",
		"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/glm_bindings.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/Graphics.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/gl/singleLightExample/src/ofApp.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/gl/singleLightExample/src/ofApp.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxPoco/libs/poco/include/Poco/LocalDateTime.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxAssimpModelLoader/libs/assimp/include/assimp/material.inl",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofGLRenderer.h",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/lib/scheduler.rb",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/graphics/of3dGraphics.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/3d/of3dPrimitives.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/3d/of3dPrimitives.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/graphics/of3dGraphics.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/3d/ofMesh.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofLight.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/app/ofAppEGLWindow.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/3d/of3dUtils.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/gl/multiLightExample/src/ofApp.cpp",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/bin/data/viewport_camera.yaml",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/ext/addons_app/testApp/src/ofApp.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/boost/include/boost/container/allocator_traits.hpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/3d/normalsExample/src/ofApp.cpp"
	],
	"find":
	{
		"height": 48.0
	},
	"find_in_files":
	{
		"height": 264.0,
		"where_history":
		[
			"",
			"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/",
			"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/**",
			"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/lib/*",
			"",
			"/home/ravenskrag/Desktop/gem_structure/**/*",
			"/home/ravenskrag/Desktop/gem_structure/*",
			"/home/ravenskrag/Desktop/gem_structure/",
			"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF",
			"/home/ravenskrag/Desktop/gem_structure/",
			"/home/ravenskrag/Desktop/gem_structure/ext/",
			"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF",
			"/home/ravenskrag/Desktop/gem_structure/",
			"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF",
			"",
			"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF,/home/ravenskrag/Desktop/gem_structure/bin/projects/grapevine_midi",
			"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF",
			"",
			"*.rb",
			"",
			"/home/ravenskrag/Desktop/gem_structure/,*.cpp",
			"/home/ravenskrag/Desktop/gem_structure/",
			"/home/ravenskrag/Desktop/gem_structure/,*.rb",
			"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/",
			"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons",
			"",
			"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF",
			"/home/ravenskrag/Desktop/gem_structure,.*cpp",
			"/home/ravenskrag/Desktop/gem_structure,*.rb",
			"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks",
			"/home/ravenskrag/Desktop/gem_structure/bin/,*.rb",
			"/home/ravenskrag/Desktop/gem_structure/bin/**/*.rb",
			"/home/ravenskrag/Desktop/gem_structure/bin",
			"/home/ravenskrag/Desktop/gem_structure/run",
			"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"puts e",
			"getelapsed",
			"ofGetElapsedTimeMicros",
			"micro",
			"mil",
			"ofmillis",
			"text",
			"enable",
			"ini",
			"@lights",
			"\"Light\"",
			"Light",
			"light",
			"interrupt",
			"material",
			"timestamps",
			"lights",
			"on_reload",
			"yaml",
			"light",
			"attempt_reload",
			"on_reload",
			"ensure",
			"on_crash",
			"runtime_error_detected",
			"on_reload",
			"@crash_detected",
			"on_reload",
			"p ",
			"p data",
			"puts",
			"update_t0",
			"parse data",
			"runtime_error_detected",
			"attempt_reload",
			"on_reload",
			"reload",
			"error handler",
			"@crash_detected",
			"crash detected",
			"ensure",
			"on_crash",
			"crash",
			"on crash",
			"core: on crash",
			"core: on",
			"crash_detected",
			"@crash_detected",
			"on_reload",
			"=> exception caught",
			"execption",
			"light",
			"export_unique_datablocks",
			"obj_export",
			"__pack_light",
			"light.name",
			".name",
			"'LIGHT'",
			"__pack_light",
			"light",
			"viewport_camera",
			"__pack_viewport_camera",
			"self.to_ruby.write",
			"@state",
			"public",
			"update_scheduler",
			"@input_handler",
			"@midi_msg_memory",
			"@draw_durations",
			"profilerstate",
			"draw_durations",
			"@colors",
			"on_reload",
			"load_world_state",
			"@sync.",
			"-",
			"&7",
			"color",
			"@mesh_objects",
			"load_world_state",
			"blendermesh",
			"@depsgraph",
			"batch",
			"reload_shaders",
			"do ",
			"reloaded",
			"@livecoding_timestamp",
			"reloading alpha",
			"shader",
			"reloading alpha",
			"data",
			"@mesh_objects",
			"position",
			"color",
			"init_with",
			"require 'yaml'",
			"quat",
			"yaml",
			"@light_material",
			"yaml",
			"depsgraph",
			"'material",
			"material",
			"@viewport_camera =",
			"viewport_camera",
			"shade",
			"forceShaderRecompilation",
			"ofmaterial",
			"light_material =",
			"ofEnableBlendMode__wrapper",
			"floatvector",
			"@default",
			"triple",
			"1.0",
			",",
			"f",
			"F",
			"f",
			"///",
			"///< ",
			" ///<",
			"///",
			"ofxinstanc",
			"mat_diffuse",
			"enablealpha",
			"glBlendFunc",
			"color",
			"enablealphablending"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"",
			"o",
			" "
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 19,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/home/ravenskrag/Code/Source/blender-git/build_linux_debug/bin/2.90/scripts/startup/bl_ui/properties_material.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8992,
						"regions":
						{
						},
						"selection":
						[
							[
								6282,
								6282
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 7100.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "python/__init__.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 39647,
						"regions":
						{
						},
						"selection":
						[
							[
								21508,
								21508
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										21508,
										21509
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/single_quote.png",
										"region.greenish"
									]
								},
								"open":
								{
									"1":
									[
										21497,
										21498
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 17922.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 2,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3,
						"regions":
						{
						},
						"selection":
						[
							[
								3,
								3
							]
						],
						"settings":
						{
							"auto_name": "---",
							"bracket_highlighter.busy": false,
							"rainbowth.lispy": false,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "lib/blender_sync.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17628,
						"regions":
						{
						},
						"selection":
						[
							[
								14316,
								14316
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
									"1":
									[
										14350,
										14353
									]
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 13458.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "lib/dependency_graph.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15977,
						"regions":
						{
						},
						"selection":
						[
							[
								2295,
								2295
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
									"1":
									[
										2045,
										2048
									]
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1523.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/shader.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1880,
						"regions":
						{
						},
						"selection":
						[
							[
								1309,
								1309
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1308,
										1309
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										1222,
										1223
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 837.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "bin/data/world_data.yaml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 22394,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/YAML/YAML.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 15.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "lib/instancing_buffer.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3784,
						"regions":
						{
						},
						"selection":
						[
							[
								1491,
								1491
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										2255,
										2258
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/dot.png",
										"region.yellowish brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										1488,
										1490
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "lib/render_batch.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6824,
						"regions":
						{
						},
						"selection":
						[
							[
								2151,
								2151
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										3160,
										3163
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/dot.png",
										"region.yellowish brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										2017,
										2021
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1554.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "ext/c_extension/callbacks.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 46076,
						"regions":
						{
						},
						"selection":
						[
							[
								14925,
								14925
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										15509,
										15510
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										14639,
										14640
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 19871.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "ext/c_extension/ofxDynamicMaterial.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16744,
						"regions":
						{
						},
						"selection":
						[
							[
								15220,
								15220
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										15221,
										15222
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										15220,
										15221
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 12931.0,
						"zoom_level": 1.0
					},
					"stack_index": 41,
					"type": "text"
				},
				{
					"buffer": 11,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3,
						"regions":
						{
						},
						"selection":
						[
							[
								3,
								3
							]
						],
						"settings":
						{
							"auto_name": "---",
							"bracket_highlighter.busy": false,
							"rainbowth.lispy": false,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 42,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "lib/entities/blender_object.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1942,
						"regions":
						{
						},
						"selection":
						[
							[
								665,
								665
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										821,
										824
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/dot.png",
										"region.yellowish brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										509,
										512
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 186.0,
						"zoom_level": 1.0
					},
					"stack_index": 22,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "lib/entities/blender_light.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3731,
						"regions":
						{
						},
						"selection":
						[
							[
								2141,
								2141
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										2702,
										2705
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/dot.png",
										"region.yellowish brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										2077,
										2081
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2139.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "lib/entities/blender_mesh.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6916,
						"regions":
						{
						},
						"selection":
						[
							[
								3493,
								3493
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										3492,
										3493
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/double_quote.png",
										"region.greenish"
									]
								},
								"open":
								{
									"1":
									[
										3465,
										3466
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3255.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "lib/entities/blender_material.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1049,
						"regions":
						{
						},
						"selection":
						[
							[
								332,
								332
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										574,
										575
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										276,
										277
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "lib/entities/viewport_camera.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7149,
						"regions":
						{
						},
						"selection":
						[
							[
								4828,
								4828
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
									"1":
									[
										7145,
										7148
									]
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6338.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"type": "text"
				},
				{
					"buffer": 17,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3,
						"regions":
						{
						},
						"selection":
						[
							[
								3,
								3
							]
						],
						"settings":
						{
							"auto_name": "---",
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 44,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "lib/live_code.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6321,
						"regions":
						{
						},
						"selection":
						[
							[
								2294,
								2294
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										2430,
										2433
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/dot.png",
										"region.yellowish brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										2106,
										2111
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1302.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "lib/core.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 22702,
						"regions":
						{
						},
						"selection":
						[
							[
								496,
								496
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 20,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 22543,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										288,
										310
									],
									[
										557,
										579
									],
									[
										964,
										986
									],
									[
										1052,
										1074
									],
									[
										1225,
										1247
									],
									[
										1356,
										1378
									],
									[
										1677,
										1699
									],
									[
										1851,
										1873
									],
									[
										2141,
										2163
									],
									[
										2389,
										2411
									],
									[
										2624,
										2646
									],
									[
										2802,
										2824
									],
									[
										2965,
										2987
									],
									[
										3096,
										3118
									],
									[
										3311,
										3333
									],
									[
										3430,
										3452
									],
									[
										3637,
										3659
									],
									[
										3742,
										3764
									],
									[
										3991,
										4013
									],
									[
										4055,
										4077
									],
									[
										4237,
										4259
									],
									[
										4423,
										4445
									],
									[
										4562,
										4584
									],
									[
										4764,
										4786
									],
									[
										4926,
										4948
									],
									[
										5036,
										5058
									],
									[
										5269,
										5291
									],
									[
										5430,
										5452
									],
									[
										5649,
										5671
									],
									[
										5888,
										5910
									],
									[
										6218,
										6240
									],
									[
										6368,
										6390
									],
									[
										6485,
										6507
									],
									[
										6644,
										6666
									],
									[
										6789,
										6811
									],
									[
										6937,
										6959
									],
									[
										7119,
										7141
									],
									[
										7237,
										7259
									],
									[
										7678,
										7700
									],
									[
										7805,
										7827
									],
									[
										8122,
										8144
									],
									[
										8248,
										8270
									],
									[
										8519,
										8541
									],
									[
										8716,
										8738
									],
									[
										8987,
										9009
									],
									[
										9330,
										9352
									],
									[
										9793,
										9815
									],
									[
										10098,
										10120
									],
									[
										10369,
										10391
									],
									[
										10722,
										10744
									],
									[
										10810,
										10832
									],
									[
										10983,
										11005
									],
									[
										11114,
										11136
									],
									[
										11433,
										11455
									],
									[
										11607,
										11629
									],
									[
										11897,
										11919
									],
									[
										12145,
										12167
									],
									[
										12453,
										12475
									],
									[
										12517,
										12539
									],
									[
										12699,
										12721
									],
									[
										12885,
										12907
									],
									[
										13024,
										13046
									],
									[
										13226,
										13248
									],
									[
										13388,
										13410
									],
									[
										13498,
										13520
									],
									[
										13731,
										13753
									],
									[
										13892,
										13914
									],
									[
										14111,
										14133
									],
									[
										14350,
										14372
									],
									[
										14632,
										14654
									],
									[
										14758,
										14780
									],
									[
										15085,
										15107
									],
									[
										15538,
										15560
									],
									[
										15854,
										15876
									],
									[
										16204,
										16226
									],
									[
										16501,
										16523
									],
									[
										16529,
										16551
									],
									[
										16942,
										16964
									],
									[
										17197,
										17219
									],
									[
										17382,
										17404
									],
									[
										17831,
										17853
									],
									[
										18136,
										18158
									],
									[
										18615,
										18637
									],
									[
										19137,
										19159
									],
									[
										19339,
										19361
									],
									[
										19555,
										19577
									],
									[
										19745,
										19767
									],
									[
										20047,
										20069
									],
									[
										20249,
										20271
									],
									[
										21056,
										21078
									],
									[
										21428,
										21450
									],
									[
										21665,
										21687
									],
									[
										22035,
										22057
									],
									[
										22063,
										22085
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								21299,
								21299
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
									"1":
									[
										20361,
										20362
									]
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 1,
							"rainbowth.lispy": false,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 18507.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "/home/ravenskrag/Desktop/gem_structure/build/window_guard.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1008,
						"regions":
						{
						},
						"selection":
						[
							[
								600,
								600
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1004,
										1007
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/dot.png",
										"region.yellowish brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										199,
										204
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "bin/data/blender_data.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2226,
						"regions":
						{
						},
						"selection":
						[
							[
								2226,
								2226
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/sublime-languages/Better JSON/JSON.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3816.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "lib/window.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4123,
						"regions":
						{
						},
						"selection":
						[
							[
								179,
								179
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 32,
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/GraphicsAdvanced.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 25972,
						"regions":
						{
						},
						"selection":
						[
							[
								22730,
								22730
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 25207.0,
						"zoom_level": 1.0
					},
					"stack_index": 38,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/Graphics.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8045,
						"regions":
						{
						},
						"selection":
						[
							[
								302,
								302
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										344,
										345
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										108,
										109
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 36,
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/graphics.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1911,
						"regions":
						{
						},
						"selection":
						[
							[
								237,
								237
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										253,
										256
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/dot.png",
										"region.yellowish brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										178,
										183
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 39,
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/Color.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7756,
						"regions":
						{
						},
						"selection":
						[
							[
								5336,
								5336
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
									"1":
									[
										7752,
										7753
									]
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5952.0,
						"zoom_level": 1.0
					},
					"stack_index": 35,
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/rubyOF.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7087,
						"regions":
						{
						},
						"selection":
						[
							[
								3539,
								3539
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										3542,
										3543
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										3523,
										3524
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2794.0,
						"zoom_level": 1.0
					},
					"stack_index": 34,
					"type": "text"
				},
				{
					"buffer": 29,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/glm_bindings.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4914,
						"regions":
						{
						},
						"selection":
						[
							[
								1539,
								1539
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										4911,
										4912
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										656,
										657
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 837.0,
						"zoom_level": 1.0
					},
					"stack_index": 33,
					"type": "text"
				},
				{
					"buffer": 30,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/utils/ofUtils.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 41124,
						"regions":
						{
						},
						"selection":
						[
							[
								1472,
								1472
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/sublime-languages/Better C++/CCpp.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1023.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 31,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/utils/ofUtils.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 35993,
						"regions":
						{
						},
						"selection":
						[
							[
								9830,
								9830
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/sublime-languages/Better C++/CCpp.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 12121.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 32,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2,
						"regions":
						{
						},
						"selection":
						[
							[
								2,
								2
							]
						],
						"settings":
						{
							"auto_name": "--",
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 40,
					"type": "text"
				},
				{
					"buffer": 33,
					"file": "/home/ravenskrag/Desktop/gem_structure/lib/rubyOF.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1432,
						"regions":
						{
						},
						"selection":
						[
							[
								850,
								850
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1099,
										1100
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/square_bracket.png",
										"region.bluish"
									]
								},
								"open":
								{
									"1":
									[
										799,
										800
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1037.0,
						"zoom_level": 1.0
					},
					"stack_index": 37,
					"type": "text"
				},
				{
					"buffer": 34,
					"file": "/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/fbo.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1050,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1046,
										1049
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/dot.png",
										"region.yellowish brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										0,
										6
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 29,
					"type": "text"
				},
				{
					"buffer": 35,
					"file": "/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/mesh.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1172,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1168,
										1171
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/dot.png",
										"region.yellowish brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										0,
										6
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 30,
					"type": "text"
				},
				{
					"buffer": 36,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 61,
						"regions":
						{
						},
						"selection":
						[
							[
								61,
								61
							]
						],
						"settings":
						{
							"auto_name": "TODO: implement YAML serialization for ofColor / o",
							"bracket_highlighter.busy": false,
							"rainbowth.lispy": false,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 31,
					"type": "text"
				},
				{
					"buffer": 37,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 321,
						"regions":
						{
						},
						"selection":
						[
							[
								321,
								321
							]
						],
						"settings":
						{
							"auto_name": "black mesh problem goes away if I select a new mat",
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"type": "text"
				},
				{
					"buffer": 38,
					"file": "/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/color.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5190,
						"regions":
						{
						},
						"selection":
						[
							[
								3318,
								3318
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										3376,
										3379
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/dot.png",
										"region.yellowish brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										3321,
										3324
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3813.0,
						"zoom_level": 1.0
					},
					"stack_index": 23,
					"type": "text"
				},
				{
					"buffer": 39,
					"file": "/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/node.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 895,
						"regions":
						{
						},
						"selection":
						[
							[
								749,
								749
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										748,
										749
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										747,
										748
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 28,
					"type": "text"
				},
				{
					"buffer": 40,
					"file": "/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/glm_vec4.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1461,
						"regions":
						{
						},
						"selection":
						[
							[
								1420,
								1420
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1447,
										1450
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/dot.png",
										"region.yellowish brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										1367,
										1370
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1209.0,
						"zoom_level": 1.0
					},
					"stack_index": 27,
					"type": "text"
				},
				{
					"buffer": 41,
					"file": "/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/glm_vec3.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1329,
						"regions":
						{
						},
						"selection":
						[
							[
								1290,
								1290
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1315,
										1318
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/dot.png",
										"region.yellowish brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										1240,
										1243
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1023.0,
						"zoom_level": 1.0
					},
					"stack_index": 26,
					"type": "text"
				},
				{
					"buffer": 42,
					"file": "/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/glm_vec2.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1257,
						"regions":
						{
						},
						"selection":
						[
							[
								1213,
								1213
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1213,
										1214
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/single_quote.png",
										"region.greenish"
									]
								},
								"open":
								{
									"1":
									[
										1210,
										1211
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 814.0,
						"zoom_level": 1.0
					},
					"stack_index": 25,
					"type": "text"
				},
				{
					"buffer": 43,
					"file": "/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/glm_quat.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2018,
						"regions":
						{
						},
						"selection":
						[
							[
								1670,
								1670
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										2008,
										2011
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/dot.png",
										"region.yellowish brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										12,
										17
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1953.0,
						"zoom_level": 1.0
					},
					"stack_index": 24,
					"type": "text"
				},
				{
					"buffer": 44,
					"file": "/home/ravenskrag/Desktop/gem_structure/profiler.callgrind",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 43,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 48.0
	},
	"input":
	{
		"height": 67.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.deviot":
	{
		"height": 236.0
	},
	"output.exec":
	{
		"height": 323.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 96.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "qbs debug",
	"project": "blender_iso_game.sublime-project",
	"replace":
	{
		"height": 88.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"window gu",
				"gem_structure/build/window_guard.rb"
			],
			[
				"blender data ",
				"gem_structure/bin/projects/blender_iso_game/bin/data/blender_data.json"
			],
			[
				"live",
				"gem_structure/bin/projects/blender_iso_game/lib/live_code.rb"
			],
			[
				"iso / gemfile",
				"gem_structure/bin/projects/blender_iso_game/Gemfile"
			],
			[
				"gem",
				"gem_structure/Gemfile"
			],
			[
				"fbo",
				"gem_structure/ext/rubyOF/Fbo.cpp"
			],
			[
				"ofnode",
				"gem_structure/ext/openFrameworks/libs/openFrameworks/3d/ofNode.cpp"
			],
			[
				"color.rb",
				"gem_structure/lib/rubyOF/color.rb"
			],
			[
				"ofxdyna",
				"gem_structure/bin/projects/blender_iso_game/ext/c_extension/ofxDynamicMaterial.cpp"
			],
			[
				"ofcolor",
				"gem_structure/ext/openFrameworks/libs/openFrameworks/types/ofColor.cpp"
			],
			[
				"ruby.cpp",
				"gem_structure/ext/rubyOF/rubyOF.cpp"
			],
			[
				"graphics.cpp",
				"gem_structure/ext/rubyOF/Graphics.cpp"
			],
			[
				"viewport camer",
				"gem_structure/bin/projects/blender_iso_game/lib/entities/viewport_camera.rb"
			],
			[
				"graphics ad",
				"gem_structure/ext/rubyOF/GraphicsAdvanced.cpp"
			],
			[
				"properties material",
				"scripts/startup/bl_ui/properties_material.py"
			],
			[
				"iso game / .yaml",
				"gem_structure/bin/projects/blender_iso_game/bin/data/world_data.yaml"
			],
			[
				"light.rb",
				"gem_structure/bin/projects/blender_iso_game/lib/entities/blender_light.rb"
			],
			[
				"ofxmidiin.h",
				"gem_structure/ext/openFrameworks/addons/ofxMidi/src/ofxMidiIn.h"
			],
			[
				"iso game core rb",
				"gem_structure/bin/projects/blender_iso_game/lib/core.rb"
			],
			[
				"core",
				"scripts/addons/space_view3d_stored_views/core.py"
			],
			[
				"callbac cpp",
				"gem_structure/bin/projects/blender_iso_game/ext/c_extension/callbacks.cpp"
			],
			[
				"instb b",
				"gem_structure/bin/projects/blender_iso_game/lib/instancing_buffer.rb"
			],
			[
				"dep gra",
				"gem_structure/bin/projects/blender_iso_game/lib/dependency_graph.rb"
			],
			[
				"blendr sync",
				"gem_structure/bin/projects/blender_iso_game/lib/blender_sync.rb"
			],
			[
				"iso game python ini",
				"gem_structure/bin/projects/blender_iso_game/python/__init__.py"
			],
			[
				"phong frag",
				"gem_structure/bin/projects/blender_iso_game/ext/c_extension/shaders/phong.frag"
			],
			[
				"ofx insta",
				"gem_structure/bin/projects/blender_iso_game/ext/c_extension/ofxInstancingMaterial.cpp"
			],
			[
				"iso game core",
				"gem_structure/bin/projects/blender_iso_game/lib/core.rb"
			],
			[
				"ofpixels",
				"gem_structure/ext/openFrameworks/libs/openFrameworks/graphics/ofPixels.cpp"
			],
			[
				"color",
				"gem_structure/lib/rubyOF/color.rb"
			],
			[
				"string cast",
				"gem_structure/vendor/apothecary/glm/include/glm/gtx/string_cast.inl"
			],
			[
				"quaternion",
				"gem_structure/vendor/apothecary/glm/include/glm/gtc/quaternion.hpp"
			],
			[
				"quat.h",
				"gem_structure/vendor/apothecary/glm/include/glm/detail/type_quat.hpp"
			],
			[
				"quat.",
				"gem_structure/ext/openFrameworks/libs/glm/include/glm/detail/type_quat.inl"
			],
			[
				"glm bind",
				"gem_structure/ext/rubyOF/glm_bindings.cpp"
			],
			[
				"rubyofcpp",
				"gem_structure/ext/rubyOF/rubyOF.cpp"
			],
			[
				"glm quat",
				"gem_structure/lib/rubyOF/glm_quat.rb"
			],
			[
				"dep",
				"gem_structure/bin/projects/blender_iso_game/lib/dependency_graph.rb"
			],
			[
				"blender data",
				"gem_structure/bin/projects/blender_iso_game/bin/data/blender_data.json"
			],
			[
				"blenderdata",
				"gem_structure/bin/projects/blender_iso_game/bin/data/blender_data.json"
			],
			[
				"window",
				"gem_structure/bin/projects/blender_iso_game/lib/window.rb"
			],
			[
				"depgr",
				"gem_structure/bin/projects/blender_iso_game/lib/dependency_graph.rb"
			],
			[
				"graphics.c",
				"gem_structure/ext/rubyOF/Graphics.cpp"
			],
			[
				"world da",
				"gem_structure/bin/projects/blender_iso_game/bin/data/world_data.yaml"
			],
			[
				"livecode",
				"gem_structure/bin/projects/blender_iso_game/lib/live_code.rb"
			],
			[
				"graphi",
				"gem_structure/ext/rubyOF/GraphicsAdvanced.cpp"
			],
			[
				"rubyof.rb",
				"gem_structure/lib/rubyOF.rb"
			],
			[
				"graphicsadv",
				"gem_structure/ext/rubyOF/GraphicsAdvanced.cpp"
			],
			[
				"ofshade",
				"gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofShader.cpp"
			],
			[
				"glpro",
				"gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofGLProgrammableRenderer.cpp"
			],
			[
				"ofxinsta",
				"gem_structure/bin/projects/blender_iso_game/ext/c_extension/ofxInstancingMaterial.cpp"
			],
			[
				"callback",
				"gem_structure/bin/projects/blender_iso_game/ext/c_extension/callbacks.cpp"
			],
			[
				"oftexture",
				"gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofTexture.cpp"
			],
			[
				"midi core",
				"gem_structure/bin/projects/grapevine_midi/lib/core.rb"
			],
			[
				"vec3rb",
				"gem_structure/lib/rubyOF/glm_vec3.rb"
			],
			[
				"color.cpp",
				"gem_structure/ext/rubyOF/Color.cpp"
			],
			[
				"compute example",
				"gem_structure/ext/openFrameworks/examples/gl/computeShaderTextureExample/computeShaderTextureExample.qbs"
			],
			[
				"fbuffer",
				"gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofBufferObject.cpp"
			],
			[
				"glmvec3",
				"gem_structure/lib/rubyOF/glm_vec3.rb"
			],
			[
				"texture.h",
				"gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofTexture.h"
			],
			[
				"ofbuferob",
				"gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofBufferObject.cpp"
			],
			[
				"ofbasemateril",
				"gem_structure/ext/openFrameworks/addons/ofxAssimpModelLoader/libs/assimp/include/assimp/material.inl"
			],
			[
				"callbac",
				"gem_structure/bin/projects/blender_iso_game/ext/c_extension/callbacks.cpp"
			],
			[
				"ofmat",
				"gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofMaterial.cpp"
			],
			[
				"ofmesh",
				"gem_structure/ext/openFrameworks/libs/openFrameworks/3d/ofMesh.inl"
			],
			[
				"ruby.rb",
				"gem_structure/lib/rubyOF.rb"
			],
			[
				"ofvbomesh",
				"gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofVboMesh.cpp"
			],
			[
				"graphs",
				"gem_structure/ext/rubyOF/GraphicsAdvanced.cpp"
			],
			[
				"ofshader",
				"gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofShader.cpp"
			],
			[
				"oflight",
				"gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofLight.cpp"
			],
			[
				"glrenderer",
				"gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofGLRenderer.cpp"
			],
			[
				"ofmateria",
				"gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofMaterial.cpp"
			],
			[
				"vbomeshdrawinst",
				"gem_structure/ext/openFrameworks/examples/gl/vboMeshDrawInstancedExample/vboMeshDrawInstancedExample.qbs"
			],
			[
				"scedul",
				"gem_structure/bin/projects/blender_iso_game/lib/scheduler.rb"
			],
			[
				"ofglrender",
				"gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofGLRenderer.cpp"
			],
			[
				"gl renderer",
				"gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofGLProgrammableRenderer.cpp"
			],
			[
				"blender window",
				"gem_structure/bin/projects/blender_iso_game/lib/window.rb"
			],
			[
				"ofmateral",
				"gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofMaterial.cpp"
			],
			[
				"blender ofapp",
				"gem_structure/bin/projects/blender_iso_game/ext/addons_app/testApp/src/ofApp.cpp"
			],
			[
				"blender gemfile",
				"gem_structure/bin/projects/blender_iso_game/Gemfile"
			],
			[
				"gem ",
				"gem_structure/Gemfile"
			],
			[
				"ofmaterial",
				"gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofMaterial.cpp"
			],
			[
				"rubyof.cpp",
				"gem_structure/ext/rubyOF/rubyOF.cpp"
			],
			[
				"rubyof",
				"gem_structure/lib/rubyOF.rb"
			],
			[
				"programmable",
				"ext/openFrameworks/libs/openFrameworks/gl/ofGLProgrammableRenderer.cpp"
			],
			[
				"windowg",
				"build/window_guard.rb"
			],
			[
				"camera ya",
				"bin/projects/blender_iso_game/bin/data/viewport_camera.yaml"
			],
			[
				"glmbi",
				"ext/rubyOF/glm_bindings.cpp"
			],
			[
				"graph adv",
				"ext/rubyOF/GraphicsAdvanced.cpp"
			],
			[
				"graphc",
				"ext/rubyOF/Graphics.cpp"
			],
			[
				"init p",
				"bin/projects/blender_iso_game/python/__init__.py"
			],
			[
				"matrix trans",
				"vendor/apothecary/glm/include/glm/ext/matrix_transform.hpp"
			],
			[
				"glm matrix oper",
				"vendor/apothecary/glm/include/glm/gtx/matrix_operation.hpp"
			],
			[
				"matrix flo 4x4",
				"vendor/apothecary/glm/include/glm/ext/matrix_float4x4.hpp"
			],
			[
				"glm mat4 type",
				"vendor/apothecary/glm/include/glm/detail/type_mat4x4.hpp"
			],
			[
				"vec3",
				"lib/rubyOF/glm_vec3.rb"
			],
			[
				"glmbin",
				"ext/rubyOF/glm_bindings.cpp"
			],
			[
				"type mat4x4",
				"vendor/apothecary/glm/include/glm/detail/type_mat4x4.hpp"
			],
			[
				"mat double 4x4",
				"vendor/apothecary/glm/include/glm/ext/matrix_double4x4.hpp"
			],
			[
				"glm mat4x4 ",
				"vendor/apothecary/glm/include/glm/mat4x4.hpp"
			],
			[
				"ofgraphi",
				"ext/openFrameworks/libs/openFrameworks/graphics/ofGraphics.h"
			],
			[
				"renderer",
				"ext/openFrameworks/libs/openFrameworks/gl/ofGLProgrammableRenderer.cpp"
			],
			[
				"ofapprunner",
				"ext/openFrameworks/libs/openFrameworks/app/ofAppRunner.cpp"
			],
			[
				"ofcamera",
				"ext/openFrameworks/libs/openFrameworks/3d/ofCamera.cpp"
			],
			[
				"glprogramm",
				"ext/openFrameworks/libs/openFrameworks/gl/ofGLProgrammableRenderer.cpp"
			],
			[
				"glfwwindow",
				"ext/openFrameworks/libs/openFrameworks/app/ofAppGLFWWindow.cpp"
			],
			[
				"quaternio",
				"vendor/apothecary/glm/include/glm/gtc/quaternion.hpp"
			],
			[
				"ofxinfinit",
				"ext/openFrameworks/addons/ofxInfiniteCanvas/src/ofxInfiniteCanvas.cpp"
			],
			[
				"monkey ",
				"lib/rubyOF/monkey_patches/chipmunk/vec2.rb"
			],
			[
				"windo geom",
				"bin/projects/blender_iso_game/bin/data/window_geometry.yaml"
			],
			[
				"rake",
				"Rakefile"
			],
			[
				"glm mat4",
				"vendor/apothecary/glm/include/glm/mat4x4.hpp"
			],
			[
				"common",
				"common.rb"
			],
			[
				"rake helper",
				"rake/helper_functions.rb"
			],
			[
				"camera yaml",
				"bin/projects/blender_iso_game/bin/data/viewport_camera.yaml"
			],
			[
				".yaml",
				"bin/projects/blender_iso_game/bin/data/viewport_camera.yaml"
			],
			[
				"helper",
				"bin/projects/blender_iso_game/lib/helpers.rb"
			],
			[
				"help",
				"rake/helper_functions.rb"
			],
			[
				"graphics advance",
				"ext/rubyOF/GraphicsAdvanced.cpp"
			],
			[
				"rice data_type",
				"vendor/bundle/ruby/2.7.0/gems/rice-2.2.0/rice/Data_Type.cpp"
			],
			[
				"window geom",
				"bin/projects/blender_iso_game/bin/data/window_geometry.yaml"
			],
			[
				"imguiini",
				"bin/projects/blender_iso_game/imgui.ini"
			],
			[
				"versio",
				"lib/rubyOF/version.rb"
			],
			[
				"vec4",
				"lib/rubyOF/glm_vec4.rb"
			],
			[
				"launch",
				"ext/rubyOF/launcher.cpp"
			],
			[
				"vec3.rb",
				"lib/rubyOF/glm_vec3.rb"
			],
			[
				"ofmesh.h",
				"ext/openFrameworks/libs/openFrameworks/3d/ofMesh.h"
			],
			[
				"mesh",
				"ext/rubyOF/Mesh.cpp"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 1000.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Experiments/oF_Test/oF_Test.sublime-project"
			],
			[
				"th",
				"/home/ravenskrag/Documents/Sublime/ThoughtTrace.sublime-project"
			],
			[
				"ete",
				"/home/ravenskrag/Documents/Projects/Eternity.sublime-project"
			],
			[
				"e",
				"/home/ravenskrag/Documents/Projects/Eternity.sublime-project"
			],
			[
				"et",
				"/home/ravenskrag/Documents/Projects/Eternity.sublime-project"
			],
			[
				"gamn",
				"/home/ravenskrag/Documents/Projects/GameDesignNotes.sublime-project"
			],
			[
				"oni",
				"/home/ravenskrag/Documents/Projects/Oni.sublime-project"
			],
			[
				"on",
				"/home/ravenskrag/Documents/Projects/Oni.sublime-project"
			],
			[
				"321",
				"/home/ravenskrag/Documents/Projects/CS321_Project.sublime-project"
			],
			[
				"go",
				"/home/ravenskrag/Documents/Projects/Gosu.sublime-project"
			],
			[
				"42",
				"/home/ravenskrag/Documents/Projects/CS425_OgreProject.sublime-project"
			]
		],
		"width": 760.0
	},
	"select_symbol":
	{
		"height": 488.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"wrap",
				"wrap"
			],
			[
				"keyboard",
				"keyboard_cb"
			],
			[
				"key",
				"keys"
			],
			[
				"setupopeng",
				"ofSetupOpenGL"
			],
			[
				"ofsetupop",
				"ofSetupOpenGL"
			]
		],
		"width": 492.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": false,
	"side_bar_visible": true,
	"side_bar_width": 421.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
