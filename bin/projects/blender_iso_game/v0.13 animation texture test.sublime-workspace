{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"mater",
				"materials"
			],
			[
				"material",
				"material_map"
			],
			[
				"exist",
				"existing_data"
			],
			[
				"exi",
				"existing_data"
			],
			[
				"pos",
				"position"
			],
			[
				"men",
				"mesh_entity"
			],
			[
				"defm",
				"default_material"
			],
			[
				"active",
				"active_object"
			],
			[
				"pack",
				"update_packed_entity_positions"
			],
			[
				"mesho",
				"mesh_obj"
			],
			[
				"sini",
				"shininess"
			],
			[
				"Blender",
				"BlenderLight"
			],
			[
				"batch",
				"batch"
			],
			[
				"matr",
				"material"
			],
			[
				"meshob",
				"mesh_objects"
			],
			[
				"nodes",
				"nodes"
			],
			[
				"rot",
				"rotate_vector"
			],
			[
				"Blendhr",
				"BlenderLight"
			],
			[
				"deps",
				"depsgraph"
			],
			[
				"ent",
				"entity_names"
			],
			[
				"datab",
				"datablock"
			],
			[
				"entit",
				"entity_list"
			],
			[
				"encode",
				"encode_transform"
			],
			[
				"generate",
				"generate_mesh"
			],
			[
				"enti",
				"entity_list"
			],
			[
				"Mesh",
				"BlenderMesh"
			],
			[
				"viewpo",
				"viewport_camera"
			],
			[
				"dep",
				"depsgraph"
			],
			[
				"relo",
				"reload_instancing_shaders"
			],
			[
				"FLAT",
				"FLOAT_MAX"
			],
			[
				"magni",
				"magnitude"
			],
			[
				"magnitude",
				"magnitude_normalized"
			],
			[
				"tras",
				"transforms"
			],
			[
				"fs",
				"frag_shader_path"
			],
			[
				"main",
				"max_instances"
			],
			[
				"view",
				"viewport_camera"
			],
			[
				"tims",
				"timestamps"
			],
			[
				"norm",
				"normal_data"
			],
			[
				"shm",
				"shm_dir"
			],
			[
				"fifo",
				"fifo_path"
			],
			[
				"queue",
				"outbound_queue"
			],
			[
				"index",
				"index_buffer"
			],
			[
				"specul",
				"specular_color"
			],
			[
				"setpo",
				"set_point_light"
			],
			[
				"attr",
				"attr_accessor"
			],
			[
				"or",
				"orientation"
			],
			[
				"diffuse",
				"diffuse_color"
			],
			[
				"point",
				"pointLight"
			],
			[
				"mat",
				"material2"
			],
			[
				"first",
				"first_update"
			],
			[
				"ofcam",
				"of_cam"
			],
			[
				"hit",
				"hit_wm_id"
			],
			[
				"parse",
				"parse_blender_data"
			],
			[
				"camera",
				"camera_settings_file"
			],
			[
				"jso",
				"json_obj"
			],
			[
				"Wait",
				"WaitReadable"
			],
			[
				"fr",
				"f_r"
			],
			[
				"midi",
				"midi_history"
			],
			[
				"noteo",
				"note_on"
			],
			[
				"delat",
				"deltatime"
			],
			[
				"setColor",
				"setColorPickerColor"
			],
			[
				"mfrac",
				"mFrameCounter_draw"
			],
			[
				"mplott",
				"mPloter_draw_time"
			],
			[
				"widt",
				"whole_iter_dt"
			],
			[
				"charm",
				"char_mapped_display"
			],
			[
				"CP",
				"CPP_Callbacks"
			],
			[
				"grid",
				"setGridCodepoint"
			],
			[
				"_grid",
				"_textGrid"
			],
			[
				"yi",
				"y_size"
			],
			[
				"x",
				"x_size"
			],
			[
				"profiler",
				"run_profiler"
			],
			[
				"new",
				"new_msg_count"
			],
			[
				"SPIKE",
				"RB_SPIKE_PROFILER"
			],
			[
				"spike",
				"spike_profiler"
			],
			[
				"sc",
				"stack_counter"
			],
			[
				"__",
				"__FILE__"
			],
			[
				"start",
				"start_time"
			],
			[
				"size",
				"sizeof\tDeviot sizeof()"
			],
			[
				"stack",
				"stack_pointer"
			],
			[
				"mesh",
				"meshes"
			],
			[
				"meshifl",
				"meshify_line_again"
			],
			[
				"meshif",
				"meshify_line_setup"
			],
			[
				"end",
				"endl"
			],
			[
				"meshifi",
				"meshify_line_setup"
			],
			[
				"from",
				"from_ruby"
			],
			[
				"charme",
				"char_mesh_dirty"
			],
			[
				"section",
				"section_count"
			],
			[
				"upda",
				"on_update"
			],
			[
				"update",
				"update_scheduler"
			],
			[
				"bars",
				"bar_segments"
			],
			[
				"colo",
				"colors"
			],
			[
				"ofPop",
				"ofPopMatrix"
			],
			[
				"ofPush",
				"ofPushMatrix"
			],
			[
				"define",
				"define_method"
			],
			[
				"prev",
				"previous_time"
			],
			[
				"fi",
				"frame_idx"
			],
			[
				"name",
				"section_name"
			],
			[
				"time",
				"time_used_this_frame"
			],
			[
				"time_",
				"time_used_this_frame"
			],
			[
				"need",
				"need_more_time"
			],
			[
				"tot",
				"total_time_per_frame"
			],
			[
				"updat",
				"update_steps"
			],
			[
				"spr",
				"sprite"
			],
			[
				"conta",
				"contain_vect"
			],
			[
				"fgor",
				"foreground"
			],
			[
				"color",
				"color_array"
			],
			[
				"colr",
				"color_array"
			],
			[
				"flush",
				"flushColors_fg"
			],
			[
				"bg_co",
				"bg_colors"
			],
			[
				"font",
				"fonts"
			],
			[
				"ofenbl",
				"ofEnableBlendMode__wrapper"
			],
			[
				"ofP",
				"ofPopMatrix"
			],
			[
				"bottm",
				"bottom_left"
			],
			[
				"fgc",
				"fg_color"
			],
			[
				"prints",
				"print_string"
			],
			[
				"each",
				"each_with_index"
			],
			[
				"yie",
				"yielder"
			],
			[
				"Enumera",
				"Enumerator"
			],
			[
				"getcolor",
				"getColor_bg"
			],
			[
				"colbg",
				"ColorHelper_bgOnly"
			],
			[
				"getcolo",
				"getColor_bg"
			],
			[
				"helpr",
				"ColorHelper_bgANDfg"
			],
			[
				"Colo",
				"ColorHelperHelper"
			],
			[
				"Ruby",
				"RubyOF"
			],
			[
				"defi",
				"define_method"
			],
			[
				"_colo",
				"_bgColorPixels"
			],
			[
				"_fg",
				"_fgColorPixels"
			],
			[
				"charw",
				"char_width_pxs"
			]
		]
	},
	"buffers":
	[
		{
			"file": "python/__init__.py",
			"settings":
			{
				"buffer_size": 41415,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"BAAAAAAAAAAAAAAAAAAAAAAAAADJoQAAYmxfaW5mbyA9IHsKICAgICJuYW1lIjogIlJ1YnlPRiByZW5kZXJlciBlbmdpbmUiLAogICAgImF1dGhvciI6ICJKYXNvbiBLbyIsCiAgICAidmVyc2lvbiI6ICgwLCAwLCAyKSwKICAgICJibGVuZGVyIjogKDIsIDkwLCAxKSwKICAgICJsb2NhdGlvbiI6ICJSZW5kZXIiLAogICAgImRlc2NyaXB0aW9uIjogIkludGVncmF0aW9uIHdpdGggZXh0ZXJuYWwgcmVhbC10aW1lIFJ1YnlPRiByZW5kZXJlciBmb3IgZ2FtZXMsIGV0YyIsCiAgICAiY2F0ZWdvcnkiOiAiUmVuZGVyIiwKfQoKaW1wb3J0IGpzb24KaW1wb3J0IGJhc2U2NAppbXBvcnQgc3RydWN0CgppbXBvcnQgb3MKaW1wb3J0IGZjbnRsCmltcG9ydCBwb3NpeAoKaW1wb3J0IG9zLnBhdGgKCmltcG9ydCBicHkKaW1wb3J0IGJnbAoKaW1wb3J0IGJweV9leHRyYXMKaW1wb3J0IGJweV9leHRyYXMudmlldzNkX3V0aWxzCgpmcm9tIGJweS5wcm9wcyBpbXBvcnQgKFN0cmluZ1Byb3BlcnR5LAogICAgICAgICAgICAgICAgICAgICAgIEJvb2xQcm9wZXJ0eSwKICAgICAgICAgICAgICAgICAgICAgICBJbnRQcm9wZXJ0eSwKICAgICAgICAgICAgICAgICAgICAgICBGbG9hdFByb3BlcnR5LAogICAgICAgICAgICAgICAgICAgICAgIEVudW1Qcm9wZXJ0eSwKICAgICAgICAgICAgICAgICAgICAgICBGbG9hdFZlY3RvclByb3BlcnR5KQoKaW1wb3J0IHRpbWUKCgoKCgoKCmltcG9ydCBxdWV1ZQppbXBvcnQgdGhyZWFkaW5nCgoKaW1wb3J0IGhhc2hsaWIKCmltcG9ydCBtYXRoCgoKCmRlZiBmb2NhbGxlbmd0aF90b19mb3YoZm9jYWxfbGVuZ3RoLCBzZW5zb3IpOgogICAgcmV0dXJuIDIuMCAqIG1hdGguYXRhbigoc2Vuc29yIC8gMi4wKSAvIGZvY2FsX2xlbmd0aCkKCmRlZiBCS0VfY2FtZXJhX3NlbnNvcl9zaXplKHNlbnNvcl9maXQsIHNlbnNvcl94LCBzZW5zb3JfeSk6CiAgICBpZiAoc2Vuc29yX2ZpdCA9PSBDQU1FUkFfU0VOU09SX0ZJVF9WRVJUKToKICAgICAgICByZXR1cm4gc2Vuc29yX3k7CiAgICAKICAgIHJldHVybiBzZW5zb3JfeDsKICAgIApjbGFzcyBJUENfSGVscGVyKCk6CiAgICBkZWYgX19pbml0X18oc2VsZiwgZmlmb19wYXRoKToKICAgICAgICBzZWxmLmZpZm9fcGF0aCA9IGZpZm9fcGF0aAogICAgCiAgICBkZWYgd3JpdGUoc2VsZiwgbWVzc2FnZSk6CiAgICAgICAgaWYgbm90IG9zLnBhdGguZXhpc3RzKHNlbGYuZmlmb19wYXRoKToKICAgICAgICAgICAgcmV0dXJuCiAgICAgICAgCiAgICAgICAgcHJpbnQoIi0tLS0tIikKICAgICAgICBwcmludCgiPT4gRklGTyBvcGVuIikKICAgICAgICBwaXBlID0gb3BlbihzZWxmLmZpZm9fcGF0aCwgJ3cnKQogICAgICAgIAogICAgICAgIAogICAgICAgIHN0YXJ0X3RpbWUgPSB0aW1lLnRpbWUoKQogICAgICAgIHRyeToKICAgICAgICAgICAgIyB0ZXh0ID0gdGV4dC5lbmNvZGUoJ3V0Zi04JykKICAgICAgICAgICAgCiAgICAgICAgICAgIHBpcGUud3JpdGUobWVzc2FnZSArICJcbiIpCiAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgcHJpbnQoIj0+IG1zZyBsZW46IiwgbGVuKG1lc3NhZ2UpKQogICAgICAgIGV4Y2VwdCBJT0Vycm9yIGFzIGU6CiAgICAgICAgICAgIHByaW50KCJicm9rZW4gcGlwZSBlcnJvciAoc3VwcHJlc3NlZCBleGNlcHRpb24pIikKICAgICAgICAKICAgICAgICBzdG9wX3RpbWUgPSB0aW1lLnRpbWUoKQogICAgICAgIGR0ID0gKHN0b3BfdGltZSAtIHN0YXJ0X3RpbWUpICogMTAwMAogICAgICAgIHByaW50KCI9PiBmaWZvIGRhdGEgdHJhbnNmZXI6ICIsIGR0LCAiIG1zZWMiICkKICAgICAgICAKICAgICAgICBwaXBlLmNsb3NlKCkKICAgICAgICBwcmludCgiPT4gRklGTyBjbG9zZWQiKQogICAgICAgIHByaW50KCItLS0tLSIpCiAgICAKICAgIAogICAgIyBkZWYgX19kZWxfXyhzZWxmKToKICAgICMgICAgIHBhc3MKICAgICAgICAKICAgICAgICAjIHNlbGYuZmlmby5jbG9zZSgpCiAgICAgICAgIyBwcmludCgiRklGTyBjbG9zZWQiKQogICAgCgoKY2xhc3MgUnVieU9GKGJweS50eXBlcy5SZW5kZXJFbmdpbmUpOgogICAgIyBUaGVzZSB0aHJlZSBtZW1iZXJzIGFyZSB1c2VkIGJ5IGJsZW5kZXIgdG8gc2V0IHVwIHRoZQogICAgIyBSZW5kZXJFbmdpbmU7IGRlZmluZSBpdHMgaW50ZXJuYWwgbmFtZSwgdmlzaWJsZSBuYW1lIGFuZCBjYXBhYmlsaXRpZXMuCiAgICBibF9pZG5hbWUgPSAiUlVCWU9GIgogICAgYmxfbGFiZWwgPSAiUnVieU9GIgogICAgYmxfdXNlX3ByZXZpZXcgPSBUcnVlCgogICAgIyBJbml0IGlzIGNhbGxlZCB3aGVuZXZlciBhIG5ldyByZW5kZXIgZW5naW5lIGluc3RhbmNlIGlzIGNyZWF0ZWQuIE11bHRpcGxlCiAgICAjIGluc3RhbmNlcyBtYXkgZXhpc3QgYXQgdGhlIHNhbWUgdGltZSwgZm9yIGV4YW1wbGUgZm9yIGEgdmlld3BvcnQgYW5kIGZpbmFsCiAgICAjIHJlbmRlci4KICAgIGRlZiBfX2luaXRfXyhzZWxmKToKICAgICAgICBzZWxmLmZpcnN0X3RpbWUgPSBUcnVlCiAgICAgICAgCiAgICAgICAgc2VsZi50b19ydWJ5ID0gSVBDX0hlbHBlcigiL2hvbWUvcmF2ZW5za3JhZy9EZXNrdG9wL2dlbV9zdHJ1Y3R1cmUvYmluL3Byb2plY3RzL2JsZW5kZXJfaXNvX2dhbWUvYmluL3J1bi9ibGVuZGVyX2NvbW0iKQogICAgICAgIAogICAgICAgIAogICAgICAgICMgZGF0YSA9IHsKICAgICAgICAjICAgICAiaW50ZXJydXB0IjogIlJFU0VUIgogICAgICAgICMgfQogICAgICAgICMgb3V0cHV0X3N0cmluZyA9IGpzb24uZHVtcHMoZGF0YSkKICAgICAgICAjIHNlbGYudG9fcnVieS53cml0ZShvdXRwdXRfc3RyaW5nKQogICAgICAgIAogICAgICAgICMgIyBkYXRhIHRvIHNlbmQgdG8gcnVieSwgYXMgd2VsbCBhcyBOb25lIHRvIHRlbGwgdGhlIGlvIHRocmVhZCB0byBzdG9wCiAgICAgICAgIyBzZWxmLm91dGJvdW5kX3F1ZXVlID0gcXVldWUuUXVldWUoKQogICAgICAgIAogICAgICAgICMgIyBzZWxmLmlvX3RocmVhZCA9IHRocmVhZGluZy5UaHJlYWQodGFyZ2V0PXdvcmtlcigpLCBhcmdzPShpLCkpCiAgICAgICAgIyBzZWxmLmlvX3RocmVhZCA9IHRocmVhZGluZy5UaHJlYWQodGFyZ2V0PXNlbGYuX2lvX3dvcmtlcikKICAgICAgICAjIHNlbGYuaW9fdGhyZWFkLnN0YXJ0KCkKICAgICAgICAKICAgICAgICBzZWxmLnNobV9kaXIgPSAnL2Rldi9zaG0vQmxlbmRlcl9SdWJ5T0YvJwogICAgICAgIGlmIG5vdCBvcy5wYXRoLmV4aXN0cyhzZWxmLnNobV9kaXIpOgogICAgICAgICAgICBvcy5ta2RpcihzZWxmLnNobV9kaXIpCiAgICAKCiAgICAjIFdoZW4gdGhlIHJlbmRlciBlbmdpbmUgaW5zdGFuY2UgaXMgZGVzdHJveSwgdGhpcyBpcyBjYWxsZWQuIENsZWFuIHVwIGFueQogICAgIyByZW5kZXIgZW5naW5lIGRhdGEgaGVyZSwgZm9yIGV4YW1wbGUgc3RvcHBpbmcgcnVubmluZyByZW5kZXIgdGhyZWFkcy4KICAgIGRlZiBfX2RlbF9fKHNlbGYpOgogICAgICAgIHBhc3MKICAgICAgICAjIG9zLnJtZGlyKHNlbGYuc2htX2RpcikKICAgICAgICAjIF4gY2FuJ3QgcmVtb3ZlIHRoaXMgb24gZXhpdCwgYXMgdGhlcmUgbWF5IHN0aWxsIGJlIGZpbGVzIGluc2lkZSB0aGF0IFJ1YnlPRiBuZWVkcy4gTm90IHN1cmUgd2hvIHNob3VsZCBkZWxldGUgdGhpcyBkaXIgb3Igd2hlbiwgYnV0IGl0J3Mgbm90IGFzIHN0cmFpZ2h0Zm9yd2FyZCBhcyBJIHRob3VnaHQuCiAgICAgICAgIyBBbHNvLCBJIGRvbid0IHRoaW5rIHRoaXMgZnVuY3Rpb24gY2FuIGRlbGV0ZSBhIGRpcmVjdG9yeSB0aGF0IHN0aWxsIGhhcyBmaWxlcyBpbnNpZGUuCiAgICAgICAgCiAgICAgICAgCiAgICAgICAgIyBzZWxmLm91dGJvdW5kX3F1ZXVlLnB1dChOb25lKSAjIHNpZ25hbCB0aGUgdGhyZWFkIHRvIHN0b3AKICAgICAgICAjIHNlbGYuaW9fdGhyZWFkLmpvaW4oKSAjIHdhaXQgZm9yIHRocmVhZCB0byBmaW5pc2gKICAgIAogICAgCiAgICAjIFRoaXMgaXMgdGhlIG1ldGhvZCBjYWxsZWQgYnkgQmxlbmRlciBmb3IgYm90aCBmaW5hbCByZW5kZXJzIChGMTIpIGFuZAogICAgIyBzbWFsbCBwcmV2aWV3IGZvciBtYXRlcmlhbHMsIHdvcmxkIGFuZCBsaWdodHMuCiAgICBkZWYgcmVuZGVyKHNlbGYsIGRlcHNncmFwaCk6CiAgICAgICAgc2NlbmUgPSBkZXBzZ3JhcGguc2NlbmUKICAgICAgICBzY2FsZSA9IHNjZW5lLnJlbmRlci5yZXNvbHV0aW9uX3BlcmNlbnRhZ2UgLyAxMDAuMAogICAgICAgIHNlbGYuc2l6ZV94ID0gaW50KHNjZW5lLnJlbmRlci5yZXNvbHV0aW9uX3ggKiBzY2FsZSkKICAgICAgICBzZWxmLnNpemVfeSA9IGludChzY2VuZS5yZW5kZXIucmVzb2x1dGlvbl95ICogc2NhbGUpCgogICAgICAgICMgRmlsbCB0aGUgcmVuZGVyIHJlc3VsdCB3aXRoIGEgZmxhdCBjb2xvci4gVGhlIGZyYW1lYnVmZmVyIGlzCiAgICAgICAgIyBkZWZpbmVkIGFzIGEgbGlzdCBvZiBwaXhlbHMsIGVhY2ggcGl4ZWwgaXRzZWxmIGJlaW5nIGEgbGlzdCBvZgogICAgICAgICMgUixHLEIsQSB2YWx1ZXMuCiAgICAgICAgaWYgc2VsZi5pc19wcmV2aWV3OgogICAgICAgICAgICBjb2xvciA9IFswLjEsIDAuMiwgMC4xLCAxLjBdCiAgICAgICAgZWxzZToKICAgICAgICAgICAgY29sb3IgPSBbMC4yLCAwLjEsIDAuMSwgMS4wXQogICAgICAgIAogICAgICAgIHBpeGVsX2NvdW50ID0gc2VsZi5zaXplX3ggKiBzZWxmLnNpemVfeQogICAgICAgIHJlY3QgPSBbY29sb3JdICogcGl4ZWxfY291bnQKICAgICAgICAKICAgICAgICAjIEhlcmUgd2Ugd3JpdGUgdGhlIHBpeGVsIHZhbHVlcyB0byB0aGUgUmVuZGVyUmVzdWx0CiAgICAgICAgcmVzdWx0ID0gc2VsZi5iZWdpbl9yZXN1bHQoMCwgMCwgc2VsZi5zaXplX3gsIHNlbGYuc2l6ZV95KQogICAgICAgIGxheWVyID0gcmVzdWx0LmxheWVyc1swXS5wYXNzZXNbIkNvbWJpbmVkIl0KICAgICAgICBsYXllci5yZWN0ID0gcmVjdAogICAgICAgIHNlbGYuZW5kX3Jlc3VsdChyZXN1bHQpCiAgICAKICAgICMgRm9yIHZpZXdwb3J0IHJlbmRlcnMsIHRoaXMgbWV0aG9kIGlzIGNhbGxlZCB3aGVuZXZlciBCbGVuZGVyIHJlZHJhd3MKICAgICMgdGhlIDNEIHZpZXdwb3J0LiBUaGUgcmVuZGVyZXIgaXMgZXhwZWN0ZWQgdG8gcXVpY2tseSBkcmF3IHRoZSByZW5kZXIKICAgICMgd2l0aCBPcGVuR0wsIGFuZCBub3QgcGVyZm9ybSBvdGhlciBleHBlbnNpdmUgd29yay4KICAgICMgQmxlbmRlciB3aWxsIGRyYXcgb3ZlcmxheXMgZm9yIHNlbGVjdGlvbiBhbmQgZWRpdGluZyBvbiB0b3Agb2YgdGhlCiAgICAjIHJlbmRlcmVkIGltYWdlIGF1dG9tYXRpY2FsbHkuCiAgICAjIAogICAgIyBOT1RFOiBpZiB0aGlzIGZ1bmN0aW9uIGlzIHRvbyBzbG93IGl0IGNhdXNlcyB2aWV3cG9ydCBmbGlja2VyCiAgICBkZWYgdmlld19kcmF3KHNlbGYsIGNvbnRleHQsIGRlcHNncmFwaCk6CiAgICAgICAgIwogICAgICAgICMgVXBkYXRlIHRoZSB2aWV3cG9ydCBjYW1lcmEKICAgICAgICAjCiAgICAgICAgcmVnaW9uID0gY29udGV4dC5yZWdpb24KICAgICAgICBydjNkID0gY29udGV4dC5yZWdpb25fZGF0YSAjIFJlZ2lvblZpZXczRChicHlfc3RydWN0KQogICAgICAgIGNvb3JkID0gKHJlZ2lvbi53aWR0aC8yLjAsIHJlZ2lvbi5oZWlnaHQvMi4wKQogICAgICAgIAogICAgICAgIHYzZHUgPSBicHlfZXh0cmFzLnZpZXczZF91dGlscwogICAgICAgIGNhbWVyYV9kaXJlY3Rpb24gPSB2M2R1LnJlZ2lvbl8yZF90b192ZWN0b3JfM2QocmVnaW9uLCBydjNkLCBjb29yZCkKICAgICAgICBjYW1lcmFfb3JpZ2luICAgID0gdjNkdS5yZWdpb25fMmRfdG9fb3JpZ2luXzNkKHJlZ2lvbiwgcnYzZCwgY29vcmQpCiAgICAgICAgCiAgICAgICAgc3BhY2UgPSBjb250ZXh0LnNwYWNlX2RhdGEgIyBTcGFjZVZpZXczRChTcGFjZSkKICAgICAgICAKICAgICAgICAjIHByaW50KGNhbWVyYV9kaXJlY3Rpb24pCiAgICAgICAgIyAjIF4gbm90ZTogY2FtZXJhIG9iamVjdHMgaGF2ZSBib3RoIGxlbnMgKG1tKSBhbmQgYW5nbGUgKGZvdiBkZWdyZWVzKQogICAgICAgIAogICAgICAgIGRhdGEgPSBzZWxmLl9fcGFja192aWV3cG9ydF9jYW1lcmEoCiAgICAgICAgICAgIHJvdGF0aW9uICAgICAgICAgPSBydjNkLnZpZXdfcm90YXRpb24sCiAgICAgICAgICAgIHBvc2l0aW9uICAgICAgICAgPSBjYW1lcmFfb3JpZ2luLAogICAgICAgICAgICBsZW5zICAgICAgICAgICAgID0gc3BhY2UubGVucywKICAgICAgICAgICAgcGVyc3BlY3RpdmVfZm92ICA9IHNlbGYuX192aWV3cG9ydF9mb3YocnYzZCksCiAgICAgICAgICAgIG9ydGhvX3NjYWxlICAgICAgPSBzZWxmLl9fb3J0aG9fc2NhbGUoY29udGV4dC5zY2VuZSwgc3BhY2UsIHJ2M2QpLAogICAgICAgICAgICAjIG9ydGhvX3NjYWxlICAgICAgPSBjb250ZXh0LnNjZW5lLm15X2N1c3RvbV9wcm9wcy5vcnRob19zY2FsZSwKICAgICAgICAgICAgbmVhcl9jbGlwICAgICAgICA9IHNwYWNlLmNsaXBfc3RhcnQsCiAgICAgICAgICAgIGZhcl9jbGlwICAgICAgICAgPSBzcGFjZS5jbGlwX2VuZCwKICAgICAgICAgICAgdmlld19wZXJzcGVjdGl2ZSA9IHJ2M2Qudmlld19wZXJzcGVjdGl2ZQogICAgICAgICkKICAgICAgICAKICAgICAgICBpZiBjb250ZXh0LnNjZW5lLm15X2N1c3RvbV9wcm9wcy5iX3dpbmRvd0xpbms6CiAgICAgICAgICAgIGRhdGFbJ3ZpZXdwb3J0X3JlZ2lvbiddID0gewogICAgICAgICAgICAgICAgJ3dpZHRoJzogIHJlZ2lvbi53aWR0aCwKICAgICAgICAgICAgICAgICdoZWlnaHQnOiByZWdpb24uaGVpZ2h0LAogICAgICAgICAgICAgICAgJ3BpZCc6IG9zLmdldHBpZCgpCiAgICAgICAgICAgIH0KICAgICAgICAKICAgICAgICBvdXRwdXRfc3RyaW5nID0ganNvbi5kdW1wcyhkYXRhKQogICAgICAgIHNlbGYudG9fcnVieS53cml0ZShvdXRwdXRfc3RyaW5nKQogICAgICAgIAogICAgICAgIAogICAgICAgICMKICAgICAgICAjIFJlbmRlciB0aGUgdmlld3BvcnQKICAgICAgICAjCiAgICAgICAgcmVnaW9uID0gY29udGV4dC5yZWdpb24KICAgICAgICBzY2VuZSA9IGRlcHNncmFwaC5zY2VuZQogICAgICAgIAogICAgICAgICMgR2V0IHZpZXdwb3J0IGRpbWVuc2lvbnMKICAgICAgICBkaW1lbnNpb25zID0gcmVnaW9uLndpZHRoLCByZWdpb24uaGVpZ2h0CiAgICAgICAgCiAgICAgICAgIyBCaW5kIHNoYWRlciB0aGF0IGNvbnZlcnRzIGZyb20gc2NlbmUgbGluZWFyIHRvIGRpc3BsYXkgc3BhY2UsCiAgICAgICAgYmdsLmdsRW5hYmxlKGJnbC5HTF9CTEVORCkKICAgICAgICBiZ2wuZ2xCbGVuZEZ1bmMoYmdsLkdMX09ORSwgYmdsLkdMX09ORV9NSU5VU19TUkNfQUxQSEEpCiAgICAgICAgc2VsZi5iaW5kX2Rpc3BsYXlfc3BhY2Vfc2hhZGVyKHNjZW5lKQogICAgICAgIAogICAgICAgIAogICAgICAgIGEgPSBjb250ZXh0LnNjZW5lLm15X2N1c3RvbV9wcm9wcy5hbHBoYQogICAgICAgIGJnbC5nbENsZWFyQ29sb3IoMCphLDAqYSwwKmEsYSkKICAgICAgICBiZ2wuZ2xDbGVhcihiZ2wuR0xfQ09MT1JfQlVGRkVSX0JJVHxiZ2wuR0xfREVQVEhfQlVGRkVSX0JJVCkKICAgICAgICAKICAgICAgICAKICAgICAgICBzZWxmLnVuYmluZF9kaXNwbGF5X3NwYWNlX3NoYWRlcigpCiAgICAgICAgYmdsLmdsRGlzYWJsZShiZ2wuR0xfQkxFTkQpCiAgICAKICAgICMgRm9yIHZpZXdwb3J0IHJlbmRlcnMsIHRoaXMgbWV0aG9kIGdldHMgY2FsbGVkIG9uY2UgYXQgdGhlIHN0YXJ0IGFuZAogICAgIyB3aGVuZXZlciB0aGUgc2NlbmUgb3IgM0Qgdmlld3BvcnQgY2hhbmdlcy4gVGhpcyBtZXRob2QgaXMgd2hlcmUgZGF0YQogICAgIyBzaG91bGQgYmUgcmVhZCBmcm9tIEJsZW5kZXIgaW4gdGhlIHNhbWUgdGhyZWFkLiBUeXBpY2FsbHkgYSByZW5kZXIKICAgICMgdGhyZWFkIHdpbGwgYmUgc3RhcnRlZCB0byBkbyB0aGUgd29yayB3aGlsZSBrZWVwaW5nIEJsZW5kZXIgcmVzcG9uc2l2ZS4KICAgIGRlZiB2aWV3X3VwZGF0ZShzZWxmLCBjb250ZXh0LCBkZXBzZ3JhcGgpOgogICAgICAgIHJlZ2lvbiA9IGNvbnRleHQucmVnaW9uCiAgICAgICAgdmlldzNkID0gY29udGV4dC5zcGFjZV9kYXRhCiAgICAgICAgc2NlbmUgPSBkZXBzZ3JhcGguc2NlbmUKICAgICAgICAKICAgICAgICBwcmludCgidmlldyB1cGRhdGUgLS0tIikKICAgICAgICAKICAgICAgICB0b3RhbF90MCA9IHRpbWUudGltZSgpCiAgICAgICAgCiAgICAgICAgb2JqX2V4cG9ydCA9IFtdCiAgICAgICAgZGF0YWJsb2NrX2V4cG9ydCA9IFtdCiAgICAgICAgbWF0ZXJpYWxfZXhwb3J0ID0gW10KICAgICAgICAKICAgICAgICBhY3RpdmVfb2JqZWN0ID0gY29udGV4dC5hY3RpdmVfb2JqZWN0CiAgICAgICAgCiAgICAgICAgaWYgc2VsZi5maXJzdF90aW1lOgogICAgICAgICAgICAjIEZpcnN0IHRpbWUgaW5pdGlhbGl6YXRpb24KICAgICAgICAgICAgc2VsZi5maXJzdF90aW1lID0gRmFsc2UKICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICAjIExvb3Agb3ZlciBhbGwgZGF0YWJsb2NrcyB1c2VkIGluIHRoZSBzY2VuZS4KICAgICAgICAgICAgIyBmb3IgZGF0YWJsb2NrIGluIGRlcHNncmFwaC5pZHM6CiAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgIyBsb29wIG92ZXIgYWxsIG9iamVjdHMKICAgICAgICAgICAgZm9yIG9iaiBpbiBicHkuZGF0YS5vYmplY3RzOgogICAgICAgICAgICAgICAgb2JqX2RhdGEgPSB7CiAgICAgICAgICAgICAgICAgICAgJ25hbWUnOiBvYmoubmFtZV9mdWxsLAogICAgICAgICAgICAgICAgICAgICd0eXBlJzogb2JqLnR5cGUsCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIG9ial9kYXRhWyd0cmFuc2Zvcm0nXSA9IHNlbGYucGFja190cmFuc2Zvcm0ob2JqKQogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICBpZiBpc2luc3RhbmNlKG9iai5kYXRhLCBicHkudHlwZXMuTGlnaHQpOgogICAgICAgICAgICAgICAgICAgIG9ial9kYXRhWydkYXRhJ10gPSBzZWxmLl9fcGFja19saWdodChvYmouZGF0YSkKICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgb2JqX2RhdGFbJ2RhdGEnXSA9IG9iai5kYXRhLm5hbWUKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgb2JqX2V4cG9ydC5hcHBlbmQob2JqX2RhdGEpCiAgICAgICAgICAgIAogICAgICAgICAgICAjIGxvb3Agb3ZlciBhbGwgbWF0ZXJpYWxzCiAgICAgICAgICAgIGZvciBtYXQgaW4gYnB5LmRhdGEubWF0ZXJpYWxzOgogICAgICAgICAgICAgICAgaWYgbWF0LnVzZXJzID4gMDoKICAgICAgICAgICAgICAgICAgICBtYXRlcmlhbF9leHBvcnQuYXBwZW5kKHNlbGYuX19wYWNrX21hdGVyaWFsKG1hdCkpCiAgICAgICAgICAgIAogICAgICAgICAgICBkYXRhYmxvY2tfbGlzdCA9IFsgb2JqLmRhdGEgZm9yIG9iaiBpbiBicHkuZGF0YS5vYmplY3RzIF0KICAgICAgICAgICAgZGF0YWJsb2NrX2V4cG9ydCA9IHNlbGYuZXhwb3J0X3VuaXF1ZV9kYXRhYmxvY2tzKGRhdGFibG9ja19saXN0KQogICAgICAgICAgICAKICAgICAgICAgICAgIyBUT0RPOiB3YW50IHRvIHNlcGFyYXRlIG91dCBsaWdodHMgZnJvbSBtZXNoZXMgKG9iamVjdHMpCiAgICAgICAgICAgICMgVE9ETzogd2FudCB0byBzZW5kIGxpbmtlZCBtZXNoIGRhdGEgb25seSBvbmNlIChleHBlbnNpdmUpIGJ1dCBzZW5kIGxpbmtlZCBsaWdodCBkYXRhIGV2ZXJ5IHRpbWUgKG5vIGNvc3Qgc2F2aW5ncyBmb3IgbWUgdG8gaGF2ZSBsaW5rZWQgbGlnaHRzIGluIEdQVSByZW5kZXIpCiAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICBlbGlmIGFjdGl2ZV9vYmplY3QgIT0gTm9uZSBhbmQgYWN0aXZlX29iamVjdC5tb2RlID09ICdFRElUJzoKICAgICAgICAgICAgIyBlZGl0aW5nIG9uZSBvYmplY3Q6IG9ubHkgc2VuZCBlZGl0cyB0byB0aGF0IHNpbmdsZSBtZXNoCiAgICAgICAgICAgIAogICAgICAgICAgICBicHkub3BzLm9iamVjdC5lZGl0bW9kZV90b2dnbGUoKQogICAgICAgICAgICBicHkub3BzLm9iamVjdC5lZGl0bW9kZV90b2dnbGUoKQogICAgICAgICAgICAjIGJweS5vcHMub2JqZWN0Lm1vZGVfc2V0KG1vZGU9ICdPQkpFQ1QnKQogICAgICAgICAgICAKICAgICAgICAgICAgcHJpbnQoIm1lc2ggZWRpdCBkZXRlY3RlZCIpCiAgICAgICAgICAgIHByaW50KGFjdGl2ZV9vYmplY3QpCiAgICAgICAgICAgIAogICAgICAgICAgICBvYmpfZGF0YSA9IHsKICAgICAgICAgICAgICAgICAgICAnbmFtZSc6IGFjdGl2ZV9vYmplY3QubmFtZV9mdWxsLAogICAgICAgICAgICAgICAgICAgICd0eXBlJzogYWN0aXZlX29iamVjdC50eXBlLAogICAgICAgICAgICAgICAgICAgICdkYXRhJzogYWN0aXZlX29iamVjdC5kYXRhLm5hbWUKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgCiAgICAgICAgICAgIG9ial9leHBvcnQgPSBbIG9ial9kYXRhIF0KICAgICAgICAgICAgCiAgICAgICAgICAgIGRhdGFibG9ja19leHBvcnQgPSBbCiAgICAgICAgICAgICAgICBzZWxmLnBhY2tfbWVzaF9kYXRhKGFjdGl2ZV9vYmplY3QuZGF0YSkKICAgICAgICAgICAgXQogICAgICAgICAgICAKICAgICAgICAgICAgIyBzZW5kIG1hdGVyaWFsIGRhdGEgaWYgYW55IG1hdGVyaWFsIHdhcyBjaGFuZ2VkCiAgICAgICAgICAgICMgKG1heWJlIGl0IHdhcyB0aGlzIG1hdGVyaWFsPyBubyB3YXkgdG8gYmUgc3VyZSwgc28ganVzdCBzZW5kIGl0KQogICAgICAgICAgICBpZihkZXBzZ3JhcGguaWRfdHlwZV91cGRhdGVkKCdNQVRFUklBTCcpKToKICAgICAgICAgICAgICAgIGlmKGxlbihhY3RpdmVfb2JqZWN0Lm1hdGVyaWFsX3Nsb3RzKSA+IDApOgogICAgICAgICAgICAgICAgICAgIG1hdCA9IGFjdGl2ZV9vYmplY3QubWF0ZXJpYWxfc2xvdHNbMF0ubWF0ZXJpYWwKICAgICAgICAgICAgICAgICAgICBtYXRlcmlhbF9leHBvcnQgPSBbCiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuX19wYWNrX21hdGVyaWFsKG1hdCkKICAgICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgIAogICAgICAgICAgICBicHkub3BzLm9iamVjdC5lZGl0bW9kZV90b2dnbGUoKQogICAgICAgICAgICBicHkub3BzLm9iamVjdC5lZGl0bW9kZV90b2dnbGUoKQogICAgICAgICAgICAjIGJweS5vcHMub2JqZWN0Lm1vZGVfc2V0KG1vZGU9ICdFRElUJykKICAgICAgICAgICAgCiAgICAgICAgZWxzZToKICAgICAgICAgICAgIyBJdCBpcyBwb3NzaWJsZSBtdWx0aXBsZSB0aGluZ3MgaGF2ZSBiZWVuIHVwZGF0ZWQuCiAgICAgICAgICAgICMgQ291bGQgYnkgYSBtaXh0dXJlIG9mIG9iamVjdHMgYW5kL29yIG1hdGVyaWFscy4KICAgICAgICAgICAgIyBPbmx5IHNlbmQgdGhlIGRhdGEgdGhhdCBoYXMgY2hhbmdlZC4KICAgICAgICAgICAgCiAgICAgICAgICAgIGRhdGFibG9ja19saXN0ID0gW10gIyBkYXRhYmxvY2tzIHRoYXQgbmVlZCB0byBiZSBwYWNrZWQgdXAKICAgICAgICAgICAgCiAgICAgICAgICAgIHByaW50KCJ0aGVyZSBhcmUiLCBsZW4oZGVwc2dyYXBoLnVwZGF0ZXMpLCAidXBkYXRlcyB0byBwcm9jZXNzIikKICAgICAgICAgICAgCiAgICAgICAgICAgICMgTG9vcCBvdmVyIGFsbCBvYmplY3QgaW5zdGFuY2VzIGluIHRoZSBzY2VuZS4KICAgICAgICAgICAgdXBkYXRlZF9vYmplY3RzICAgPSBbXQogICAgICAgICAgICB1cGRhdGVkX21hdGVyaWFscyA9IFtdCiAgICAgICAgICAgIAogICAgICAgICAgICBmb3IgdXBkYXRlIGluIGRlcHNncmFwaC51cGRhdGVzOgogICAgICAgICAgICAgICAgb2JqID0gdXBkYXRlLmlkCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIGlmIGlzaW5zdGFuY2Uob2JqLCBicHkudHlwZXMuT2JqZWN0KToKICAgICAgICAgICAgICAgICAgICBvYmpfZGF0YSA9IHsKICAgICAgICAgICAgICAgICAgICAgICAgJ25hbWUnOiBvYmoubmFtZV9mdWxsLAogICAgICAgICAgICAgICAgICAgICAgICAndHlwZSc6IG9iai50eXBlLAogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICBpZiB1cGRhdGUuaXNfdXBkYXRlZF90cmFuc2Zvcm06CiAgICAgICAgICAgICAgICAgICAgICAgIG9ial9kYXRhWyd0cmFuc2Zvcm0nXSA9IHNlbGYucGFja190cmFuc2Zvcm0ob2JqKQogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIGlmIGlzaW5zdGFuY2Uob2JqLmRhdGEsIGJweS50eXBlcy5MaWdodCk6CiAgICAgICAgICAgICAgICAgICAgICAgIG9ial9kYXRhWydkYXRhJ10gPSBzZWxmLl9fcGFja19saWdodChvYmouZGF0YSkKICAgICAgICAgICAgICAgICAgICBlbGlmIHVwZGF0ZS5pc191cGRhdGVkX2dlb21ldHJ5OgogICAgICAgICAgICAgICAgICAgICAgICBvYmpfZGF0YVsnZGF0YSddID0gb2JqLmRhdGEubmFtZQogICAgICAgICAgICAgICAgICAgICAgICBkYXRhYmxvY2tfbGlzdC5hcHBlbmQob2JqLmRhdGEpCiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIG9ial9leHBvcnQuYXBwZW5kKG9ial9kYXRhKQogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAjIG9ubHkgc2VuZCBkYXRhIGZvciB1cGRhdGVkIG1hdGVyaWFscwogICAgICAgICAgICAgICAgaWYgaXNpbnN0YW5jZShvYmosIGJweS50eXBlcy5NYXRlcmlhbCk6CiAgICAgICAgICAgICAgICAgICAgbWF0ID0gb2JqCiAgICAgICAgICAgICAgICAgICAgbWF0ZXJpYWxfZXhwb3J0LmFwcGVuZChzZWxmLl9fcGFja19tYXRlcmlhbChtYXQpKQogICAgICAgICAgICAKICAgICAgICAgICAgIyBOT1RFOiBBbiBvYmplY3QgZG9lcyBub3QgZ2V0IG1hcmtlZCBhcyB1cGRhdGVkIHdoZW4gYSBuZXcgbWF0ZXJpYWwgc2xvdCBpcyBhZGRlZCAvIGNoYW5nZXMgYXJlIG1hZGUgdG8gaXRzIG1hdGVyaWFsLiBUaHVzLCB3ZSBzZW5kIGEgbWFwcGluZyBvZiB7bWVzaCBvYmplY3QgbmFtZSA9PiBtYXRlcmlhbCBuYW1lfSBmb3IgYWxsIG1lc2hlcywgZXZlcnkgZnJhbWUuIFJ1YnlPRiB3aWxsIGZpZ3VyZSBvdXQgd2hlbiB0byBhY3R1YWxseSByZWJpbmQgdGhlIG1hdGVyaWFscy4KICAgICAgICAgICAgCiAgICAgICAgICAgIGRhdGFibG9ja19leHBvcnQgPSBzZWxmLmV4cG9ydF91bmlxdWVfZGF0YWJsb2NrcyhkYXRhYmxvY2tfbGlzdCkKICAgICAgICAjIC0tLS0tLS0tLS0KICAgICAgICAKICAgICAgICAKICAgICAgICAjIGZ1bGwgbGlzdCBvZiBhbGwgb2JqZWN0cywgYnkgbmFtZSAoaGVscHMgUnVieSBkZWxldGUgb2xkIG9iamVjdHMpCiAgICAgICAgb2JqZWN0X2xpc3QgPSBbIGluc3RhbmNlLm9iamVjdC5uYW1lX2Z1bGwgZm9yIGluc3RhbmNlIAogICAgICAgICAgICAgICAgICAgICAgICBpbiBkZXBzZ3JhcGgub2JqZWN0X2luc3RhbmNlcyBdCiAgICAgICAgCiAgICAgICAgCiAgICAgICAgCiAgICAgICAgIyBpbmZvcm1hdGlvbiBhYm91dCBtYXRlcmlhbCBsaW5rYWdlcwogICAgICAgICMgKHNlbmQgYWxsIGluZm8gZXZlcnkgZnJhbWUpCiAgICAgICAgIyAoUnVieU9GIHdpbGwgZmlndXJlIG91dCB3aGV0aGVyIHRvIHJlYmluZCBvciBub3QpCiAgICAgICAgbWF0ZXJpYWxfbWFwID0ge30KICAgICAgICBmb3Igb2JqIGluIGJweS5kYXRhLm9iamVjdHM6CiAgICAgICAgICAgIGlmIGlzaW5zdGFuY2Uob2JqLmRhdGEsIGJweS50eXBlcy5NZXNoKToKICAgICAgICAgICAgICAgICMgcHJpbnQoImZvdW5kIG1lc2giKQogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICBtYXRlcmlhbF9uYW1lID0gJycKICAgICAgICAgICAgICAgICMgXiBkZWZhdWx0IG1hdGVyaWFsIG5hbWUKICAgICAgICAgICAgICAgICMgICB0ZWxscyBSdWJ5T0YgdG8gYmluZCBkZWZhdWx0IG1hdGVyaWFsCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICMgaWYgdGhlcmUgaXMgYSBtYXRlcmlhbCBib3VuZCwgdXNlIHRoYXQgaW5zdGVhZCBvZiB0aGUgZGVmYXVsdAogICAgICAgICAgICAgICAgaWYobGVuKG9iai5tYXRlcmlhbF9zbG90cykgPiAwKToKICAgICAgICAgICAgICAgICAgICBtYXQgPSBvYmoubWF0ZXJpYWxfc2xvdHNbMF0ubWF0ZXJpYWwKICAgICAgICAgICAgICAgICAgICBtYXRlcmlhbF9uYW1lID0gbWF0Lm5hbWUKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgIyBtYXAgeyBtZXNoIG9iamVjdCA9PiBtYXRlcmlhbCB9CiAgICAgICAgICAgICAgICBtYXRlcmlhbF9tYXBbb2JqLm5hbWVfZnVsbF0gPSBtYXRlcmlhbF9uYW1lCiAgICAgICAgCiAgICAgICAgCiAgICAgICAgdG90YWxfdDEgPSB0aW1lLnRpbWUoKQogICAgICAgIGR0ID0gKHRvdGFsX3QxIC0gdG90YWxfdDApICogMTAwMAogICAgICAgIHByaW50KCJUT1RBTCBUSU1FOiAiLCBkdCwgIiBtc2VjIiApCiAgICAgICAgCiAgICAgICAgCiAgICAgICAgZGF0YSA9IHsKICAgICAgICAgICAgJ3RpbWVzdGFtcHMnIDogewogICAgICAgICAgICAgICAgJ3N0YXJ0X3RpbWUnOiB0b3RhbF90MCwKICAgICAgICAgICAgICAgICdlbmRfdGltZSc6ICAgdG90YWxfdDEKICAgICAgICAgICAgfSwKICAgICAgICAgICAgCiAgICAgICAgICAgICdhbGxfZW50aXR5X25hbWVzJyA6IG9iamVjdF9saXN0LAogICAgICAgICAgICAKICAgICAgICAgICAgJ29iamVjdHMnIDogb2JqX2V4cG9ydCwKICAgICAgICAgICAgJ2RhdGFibG9ja3MnIDogZGF0YWJsb2NrX2V4cG9ydCwKICAgICAgICAgICAgCiAgICAgICAgICAgICdtYXRlcmlhbHMnIDogbWF0ZXJpYWxfZXhwb3J0LAogICAgICAgICAgICAnbWF0ZXJpYWxfbWFwJyA6IG1hdGVyaWFsX21hcAogICAgICAgIH0KICAgICAgICAKICAgICAgICBvdXRwdXRfc3RyaW5nID0ganNvbi5kdW1wcyhkYXRhKQogICAgICAgIHNlbGYudG9fcnVieS53cml0ZShvdXRwdXRfc3RyaW5nKQogICAgICAgIAogICAgICAgIAogICAgICAgIAogICAgICAgIAogICAgICAgICMgVE9ETzogc2VyaWFsaXplIGFuZCBzZW5kIG1hdGVyaWFscyB0aGF0IGhhdmUgY2hhbmdlZAogICAgICAgICMgVE9ETzogc2VuZCBpbmZvcm1hdGlvbiBvbiB3aGljaCBvYmplY3RzIGFyZSB1c2luZyB3aGljaCBtYXRlcmlhbHMKICAgICAgICAKICAgICAgICAjIG5vdGU6IGluIGJsZW5kZXIsIG9uZSBvYmplY3QgY2FuIGhhdmUgbWFueSBtYXRlcmlhbCBzbG90cwogICAgCiAgICAjIC0tLS0gcHJpdmF0ZSBoZWxwZXIgbWV0aG9kcyAtLS0tCiAgICAKICAgIAogICAgZGVmIGV4cG9ydF91bmlxdWVfZGF0YWJsb2NrcyhzZWxmLCBkYXRhYmxvY2tfbGlzdCk6CiAgICAgICAgZGF0YWJsb2NrX2V4cG9ydCA9IFtdCiAgICAgICAgCiAgICAgICAgdW5pcXVlX2RhdGFibG9ja3MgPSBsaXN0KHNldChkYXRhYmxvY2tfbGlzdCkpCiAgICAgICAgZm9yIGRhdGFibG9jayBpbiB1bmlxdWVfZGF0YWJsb2NrczoKICAgICAgICAgICAgaWYgaXNpbnN0YW5jZShkYXRhYmxvY2ssIGJweS50eXBlcy5NZXNoKToKICAgICAgICAgICAgICAgIGRhdGFibG9ja19leHBvcnQuYXBwZW5kKCBzZWxmLnBhY2tfbWVzaF9kYXRhKGRhdGFibG9jaykgKQogICAgICAgICAgICAjIGVsaWYgaXNpbnN0YW5jZShkYXRhYmxvY2ssIGJweS50eXBlcy5MaWdodCk6CiAgICAgICAgICAgICAgICAjIGRhdGFibG9ja19leHBvcnQuYXBwZW5kKCBzZWxmLl9fcGFja19saWdodChkYXRhYmxvY2spICkKICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgCiAgICAgICAgcmV0dXJuIGRhdGFibG9ja19leHBvcnQKICAgICAgICAKICAgIAogICAgZGVmIHBhY2tfdHJhbnNmb3JtKHNlbGYsIG9iaik6CiAgICAgICAgIyAKICAgICAgICAjIHNldCB0cmFuc2Zvcm0gcHJvcGVydGllcwogICAgICAgICMgCiAgICAgICAgCiAgICAgICAgcG9zICAgPSBvYmoubG9jYXRpb24KICAgICAgICByb3QgICA9IG9iai5yb3RhdGlvbl9xdWF0ZXJuaW9uCiAgICAgICAgc2NhbGUgPSBvYmouc2NhbGUKICAgICAgICAKICAgICAgICB0cmFuc2Zvcm0gPSB7CiAgICAgICAgICAgICdwb3NpdGlvbic6WwogICAgICAgICAgICAgICAgIlZlYzMiLAogICAgICAgICAgICAgICAgcG9zLngsCiAgICAgICAgICAgICAgICBwb3MueSwKICAgICAgICAgICAgICAgIHBvcy56CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICdyb3RhdGlvbic6WwogICAgICAgICAgICAgICAgIlF1YXQiLAogICAgICAgICAgICAgICAgcm90LncsCiAgICAgICAgICAgICAgICByb3QueCwKICAgICAgICAgICAgICAgIHJvdC55LAogICAgICAgICAgICAgICAgcm90LnoKICAgICAgICAgICAgXSwKICAgICAgICAgICAgJ3NjYWxlJzpbCiAgICAgICAgICAgICAgICAiVmVjMyIsCiAgICAgICAgICAgICAgICBzY2FsZS54LAogICAgICAgICAgICAgICAgc2NhbGUueSwKICAgICAgICAgICAgICAgIHNjYWxlLnoKICAgICAgICAgICAgXQogICAgICAgIH0KICAgICAgICAKICAgICAgICByZXR1cm4gdHJhbnNmb3JtCiAgICAgICAgCiAgICAKICAgIGRlZiBwYWNrX21lc2hfZGF0YShzZWxmLCBtZXNoKToKICAgICAgICBtZXNoLmNhbGNfbG9vcF90cmlhbmdsZXMoKQogICAgICAgICMgXiBuZWVkIHRvIGNhbGwgdGhpcyB0byBwb3B1bGF0ZSB0aGUgbWVzaC5sb29wX3RyaWFuZ2xlcygpIGNhY2hlCiAgICAgICAgCiAgICAgICAgbWVzaC5jYWxjX25vcm1hbHNfc3BsaXQoKQogICAgICAgICMgbm9ybWFsX2RhdGEgPSBbIFt2YWwgZm9yIHZhbCBpbiB0cmkubm9ybWFsXSBmb3IgdHJpIGluIG1lc2gubG9vcF90cmlhbmdsZXMgXQogICAgICAgICMgXiBub3JtYWxzIHN0b3JlZCBvbiB0aGUgdHJpIC8gZmFjZQogICAgICAgIAogICAgICAgIAogICAgICAgICMgCiAgICAgICAgIyB2ZXJ0IHBvc2l0aW9ucwogICAgICAgICMgCiAgICAgICAgCiAgICAgICAgc3RhcnRfdGltZSA9IHRpbWUudGltZSgpCiAgICAgICAgCiAgICAgICAgIyBudW1iZXIgb2YgYWN0dWFsIHZlcnRzIGxpa2VseSB0byBiZSBsZXNzIHRoYW4gbWF4aW11bQogICAgICAgICMgc28ganVzdCBtZWFzdXJlIHRoZSBsaXN0CiAgICAgICAgbnVtX3ZlcnRzID0gbGVuKG1lc2gudmVydGljZXMpKjMgIyBUT0RPOiByZW5hbWUgdGhpcyB2YXJpYWJsZQogICAgICAgIHZlcnRfZGF0YSA9IFtOb25lXSAqIG51bV92ZXJ0cwogICAgICAgIAogICAgICAgIAogICAgICAgIGZvciBpIGluIHJhbmdlKGxlbihtZXNoLnZlcnRpY2VzKSk6CiAgICAgICAgICAgIHZlcnQgPSBtZXNoLnZlcnRpY2VzW2ldCiAgICAgICAgICAgIAogICAgICAgICAgICB2ZXJ0X2RhdGFbaSozKzBdID0gdmVydC5jb1swXQogICAgICAgICAgICB2ZXJ0X2RhdGFbaSozKzFdID0gdmVydC5jb1sxXQogICAgICAgICAgICB2ZXJ0X2RhdGFbaSozKzJdID0gdmVydC5jb1syXQogICAgICAgIAogICAgICAgIAogICAgICAgIHN0b3BfdGltZSA9IHRpbWUudGltZSgpCiAgICAgICAgZHQgPSAoc3RvcF90aW1lIC0gc3RhcnRfdGltZSkgKiAxMDAwCiAgICAgICAgcHJpbnQoInZlcnRleCBleHBvcnQ6ICIsIGR0LCAiIG1zZWMiICkKICAgICAgICAKICAgICAgICAKICAgICAgICAjIAogICAgICAgICMgaW5kZXggYnVmZmVyCiAgICAgICAgIyAKICAgICAgICAKICAgICAgICBzdGFydF90aW1lID0gdGltZS50aW1lKCkKICAgICAgICAKICAgICAgICAKICAgICAgICBpbmRleF9idWZmZXIgPSBbIFt2ZXJ0IGZvciB2ZXJ0IGluIHRyaS52ZXJ0aWNlc10gZm9yIHRyaSBpbiBtZXNoLmxvb3BfdHJpYW5nbGVzIF0KICAgICAgICAKICAgICAgICBzdG9wX3RpbWUgPSB0aW1lLnRpbWUoKQogICAgICAgIGR0ID0gKHN0b3BfdGltZSAtIHN0YXJ0X3RpbWUpICogMTAwMAogICAgICAgIHByaW50KCJpbmRleCBleHBvcnQ6ICIsIGR0LCAiIG1zZWMiICkKICAgICAgICAKICAgICAgICAKICAgICAgICAjIAogICAgICAgICMgbm9ybWFsIHZlY3RvcnMKICAgICAgICAjIAogICAgICAgIAogICAgICAgIHN0YXJ0X3RpbWUgPSB0aW1lLnRpbWUoKQogICAgICAgIAogICAgICAgIG51bV90cmlzID0gbGVuKG1lc2gubG9vcF90cmlhbmdsZXMpCiAgICAgICAgCiAgICAgICAgbnVtX25vcm1hbHMgPSAobnVtX3RyaXMgKiAzICogMykKICAgICAgICBub3JtYWxfZGF0YSA9IFtOb25lXSAqIG51bV9ub3JtYWxzCiAgICAgICAgCiAgICAgICAgIyBpdGVyMyA9IHJhbmdlKDMpCiAgICAgICAgCiAgICAgICAgZm9yIGkgaW4gcmFuZ2UobnVtX3RyaXMpOgogICAgICAgICAgICB0cmkgPSBtZXNoLmxvb3BfdHJpYW5nbGVzW2ldCiAgICAgICAgICAgIGZvciBqIGluIHJhbmdlKDMpOgogICAgICAgICAgICAgICAgbm9ybWFsID0gdHJpLnNwbGl0X25vcm1hbHNbal0KICAgICAgICAgICAgICAgIGZvciBrIGluIHJhbmdlKDMpOgogICAgICAgICAgICAgICAgICAgIGlkeCA9IDkqaSszKmorawogICAgICAgICAgICAgICAgICAgICMgcHJpbnQoaWR4KQogICAgICAgICAgICAgICAgICAgICMgcHJpbnQoaSwgJyAnLCBqLCAnICcsIGspCiAgICAgICAgICAgICAgICAgICAgbm9ybWFsX2RhdGFbaWR4XSA9IG5vcm1hbFtrXQogICAgICAgIAogICAgICAgIAogICAgICAgIAogICAgICAgIHN0b3BfdGltZSA9IHRpbWUudGltZSgpCiAgICAgICAgZHQgPSAoc3RvcF90aW1lIC0gc3RhcnRfdGltZSkgKiAxMDAwCiAgICAgICAgcHJpbnQoIm5vcm1hbCBleHBvcnQ6ICIsIGR0LCAiIG1zZWMiICkKICAgICAgICAKICAgICAgICAKICAgICAgICAjIAogICAgICAgICMgcGFjayBCYXNlNjQgbm9ybWFsIHZlY3RvciBkYXRhCiAgICAgICAgIyAKICAgICAgICAKICAgICAgICBzdGFydF90aW1lID0gdGltZS50aW1lKCkKICAgICAgICAKICAgICAgICAjIGFycmF5IC0+IGJpbmFyeSBibG9iCiAgICAgICAgYmluYXJ5X2RhdGEgPSBzdHJ1Y3QucGFjaygnJWRmJyAlIG51bV9ub3JtYWxzLCAqbm9ybWFsX2RhdGEpCiAgICAgICAgCiAgICAgICAgIyBub3JtYWwgYmluYXJ5IC0+IGJhc2UgNjQgZW5jb2RlZCBiaW5hcnkgLT4gYXNjaWkKICAgICAgICBiaW5hcnlfc3RyaW5nID0gYmFzZTY0LmI2NGVuY29kZShiaW5hcnlfZGF0YSkuZGVjb2RlKCdhc2NpaScpCiAgICAgICAgCiAgICAgICAgCiAgICAgICAgc2hhID0gaGFzaGxpYi5zaGExKGJpbmFyeV9kYXRhKS5oZXhkaWdlc3QoKQogICAgICAgIHRtcF9ub3JtYWxfZmlsZV9wYXRoID0gb3MucGF0aC5qb2luKHNlbGYuc2htX2RpciwgIiVzLnR4dCIgJSBzaGEpCiAgICAgICAgCiAgICAgICAgCiAgICAgICAgIyB0bXBfbm9ybWFsX2ZpbGVfcGF0aCA9IG9zLnBhdGguam9pbihzZWxmLnNobV9kaXIsICJub3JtYWxzLnR4dCIpCiAgICAgICAgCiAgICAgICAgaWYgbm90IG9zLnBhdGguZXhpc3RzKHRtcF9ub3JtYWxfZmlsZV9wYXRoKToKICAgICAgICAgICAgd2l0aCBvcGVuKHRtcF9ub3JtYWxfZmlsZV9wYXRoLCAndycpIGFzIGY6CiAgICAgICAgICAgICAgICBmLndyaXRlKGJpbmFyeV9zdHJpbmcpCiAgICAgICAgICAgIAogICAgICAgIHN0b3BfdGltZSA9IHRpbWUudGltZSgpCiAgICAgICAgZHQgPSAoc3RvcF90aW1lIC0gc3RhcnRfdGltZSkgKiAxMDAwCiAgICAgICAgcHJpbnQoInNobSBmaWxlIGlvIChub3JtYWxzKTogIiwgZHQsICIgbXNlYyIgKQogICAgICAgIAogICAgICAgIAogICAgICAgICMgCiAgICAgICAgIyBwYWNrIEJhc2U2NCB2ZXJ0ZXggZGF0YQogICAgICAgICMgCiAgICAgICAgCiAgICAgICAgc3RhcnRfdGltZSA9IHRpbWUudGltZSgpCiAgICAgICAgCiAgICAgICAgIyBhcnJheSAtPiBiaW5hcnkgYmxvYgogICAgICAgIGJpbmFyeV9kYXRhID0gc3RydWN0LnBhY2soJyVkZicgJSBudW1fdmVydHMsICp2ZXJ0X2RhdGEpCiAgICAgICAgCiAgICAgICAgIyBub3JtYWwgYmluYXJ5IC0+IGJhc2UgNjQgZW5jb2RlZCBiaW5hcnkgLT4gYXNjaWkKICAgICAgICBiaW5hcnlfc3RyaW5nID0gYmFzZTY0LmI2NGVuY29kZShiaW5hcnlfZGF0YSkuZGVjb2RlKCdhc2NpaScpCiAgICAgICAgCiAgICAgICAgCiAgICAgICAgc2hhID0gaGFzaGxpYi5zaGExKGJpbmFyeV9kYXRhKS5oZXhkaWdlc3QoKQogICAgICAgIHRtcF92ZXJ0X2ZpbGVfcGF0aCA9IG9zLnBhdGguam9pbihzZWxmLnNobV9kaXIsICIlcy50eHQiICUgc2hhKQogICAgICAgIAogICAgICAgIAogICAgICAgICMgdG1wX3ZlcnRfZmlsZV9wYXRoID0gb3MucGF0aC5qb2luKHNlbGYuc2htX2RpciwgInZlcnRzLnR4dCIpCiAgICAgICAgCiAgICAgICAgaWYgbm90IG9zLnBhdGguZXhpc3RzKHRtcF92ZXJ0X2ZpbGVfcGF0aCk6CiAgICAgICAgICAgIHdpdGggb3Blbih0bXBfdmVydF9maWxlX3BhdGgsICd3JykgYXMgZjoKICAgICAgICAgICAgICAgIGYud3JpdGUoYmluYXJ5X3N0cmluZykKICAgICAgICAgICAgCiAgICAgICAgc3RvcF90aW1lID0gdGltZS50aW1lKCkKICAgICAgICBkdCA9IChzdG9wX3RpbWUgLSBzdGFydF90aW1lKSAqIDEwMDAKICAgICAgICBwcmludCgic2htIGZpbGUgaW8gKHZlcnRzKTogIiwgZHQsICIgbXNlYyIgKQogICAgICAgIAogICAgICAgIAogICAgICAgICMgCiAgICAgICAgIyBQYWNrIGZpbmFsIG1lc2ggZGF0YWJsb2NrIGRhdGEgZm9yIEZJRk8gdHJhbnNtaXNzaW9uCiAgICAgICAgIyAKICAgICAgICAKICAgICAgICBkYXRhID0gewogICAgICAgICAgICAndHlwZSc6ICdicHkudHlwZXMuTWVzaCcsCiAgICAgICAgICAgICdtZXNoX25hbWUnOiBtZXNoLm5hbWUsICMgbmFtZSBvZiB0aGUgZGF0YSwgbm90IHRoZSBvYmplY3QKICAgICAgICAgICAgJ3ZlcnRzJzogWwogICAgICAgICAgICAgICAgJ2Zsb2F0JywgbnVtX3ZlcnRzLCB0bXBfdmVydF9maWxlX3BhdGgKICAgICAgICAgICAgXSwKICAgICAgICAgICAgJ25vcm1hbHMnOiBbCiAgICAgICAgICAgICAgICAnZmxvYXQnLCBudW1fbm9ybWFscywgdG1wX25vcm1hbF9maWxlX3BhdGgKICAgICAgICAgICAgXSwKICAgICAgICAgICAgJ3RyaXMnIDogaW5kZXhfYnVmZmVyCiAgICAgICAgfQogICAgICAgIAogICAgICAgIHJldHVybiBkYXRhCiAgICAKICAgICAgICAKICAgICMgIHN1Yi5wcm9wKGxpZ2h0LCAic2l6ZSIsIHRleHQ9IlNpemUgWCIpCiAgICAjIHN1Yi5wcm9wKGxpZ2h0LCAic2l6ZV95IiwgdGV4dD0iWSIpCiAgICAKICAgICMgY29sLnByb3AobGlnaHQsICJzcG90X3NpemUiLCB0ZXh0PSJTaXplIikKICAgICMgXiBhbmdsZSBvZiBzcG90bGlnaHQKICAgIAogICAgCiAgICAKICAgICMgY29sLnByb3AobGlnaHQsICJjb2xvciIpCiAgICAjIGNvbC5wcm9wKGxpZ2h0LCAiZW5lcmd5IikKICAgIAogICAgIyBibGVuZGVyIEVFVkVFIHByb3BlcnRpZXM6CiAgICAgICAgIyBjb2xvcgogICAgICAgICMgcG93ZXIgKHdhdHMpCiAgICAgICAgIyBzcGVjdWxhcgogICAgICAgICMgcmFkaXVzCiAgICAgICAgIyBzaGFkb3cKICAgICMgT3BlbkZyYW1ld29ya3MgcHJvcGVydGllczoKICAgICAgICAjIHNldEFtYmllbnRDb2xvcigpCiAgICAgICAgIyBzZXREaWZmdXNlQ29sb3IoKQogICAgICAgICMgc2V0U3BlY3VsYXJDb2xvcigpCiAgICAgICAgIyBzZXRBdHRlbnVhdGlvbigpCiAgICAgICAgICAgICMgMyBhcmdzOiBjb25zdCwgbGluZWFyLCBxdWFkcmF0aWMKICAgICAgICAjIHNldHVwKCkgCiAgICAgICAgIyBzZXRBcmVhTGlnaHQoKQogICAgICAgICMgc2V0RGlyZWN0aW9uYWwoKQogICAgICAgICMgc2V0UG9pbnRMaWdodCgpCiAgICAgICAgIyBzZXRTcG90bGlnaHQoKSAjIDIgYXJncyB0byBzZXQgdGhlIGZvbGxvd2luZzoKICAgICAgICAgICAgIyBzZXRTcG90bGlnaHRDdXRPZmYoKQogICAgICAgICAgICAgICAgIyAwIHRvIDkwIGRlZ3MsIGRlZmF1bHQgNDUKICAgICAgICAgICAgIyBzZXRTcG90Q29uY2VudHJhdGlvbigpCiAgICAgICAgICAgICAgICAjIDAgdG8gMTI4IGV4cG9uZW50LCBkZWZhdWx0IDE2CiAgICAKICAgIAogICAgCiAgICAKICAgIAogICAgCiAgICAKICAgIEBzdGF0aWNtZXRob2QKICAgIGRlZiBfX3BhY2tfbGlnaHQobGlnaHQpOgogICAgICAgIGRhdGEgPSB7CiAgICAgICAgICAgICdsaWdodF9uYW1lJzogbGlnaHQubmFtZSwKICAgICAgICAgICAgJ3R5cGUnOiAnYnB5LnR5cGVzLkxpZ2h0JywgCiAgICAgICAgICAgICdjb2xvcic6IFsKICAgICAgICAgICAgICAgICdyZ2InLAogICAgICAgICAgICAgICAgbGlnaHQuY29sb3JbMF0sCiAgICAgICAgICAgICAgICBsaWdodC5jb2xvclsxXSwKICAgICAgICAgICAgICAgIGxpZ2h0LmNvbG9yWzJdCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICdsaWdodF90eXBlJzogbGlnaHQudHlwZSwKICAgICAgICAgICAgJ2FtYmllbnRfY29sb3InOiBbCiAgICAgICAgICAgICAgICAncmdiJywKICAgICAgICAgICAgXSwKICAgICAgICAgICAgJ2RpZmZ1c2VfY29sb3InOiBbCiAgICAgICAgICAgICAgICAncmdiJwogICAgICAgICAgICBdLAogICAgICAgICAgICAnYXR0ZW51YXRpb24nOlsKICAgICAgICAgICAgICAgICdyZ2InCiAgICAgICAgICAgIF0KICAgICAgICB9CiAgICAgICAgCiAgICAgICAgaWYgbGlnaHQudHlwZSA9PSAnQVJFQSc6CiAgICAgICAgICAgIGRhdGEudXBkYXRlKHsKICAgICAgICAgICAgICAgICdzaXplX3gnOiBbJ2Zsb2F0JywgbGlnaHQuc2l6ZV0sCiAgICAgICAgICAgICAgICAnc2l6ZV95JzogWydmbG9hdCcsIGxpZ2h0LnNpemVfeV0KICAgICAgICAgICAgfSkKICAgICAgICBlbGlmIGxpZ2h0LnR5cGUgPT0gJ1NQT1QnOgogICAgICAgICAgICBkYXRhLnVwZGF0ZSh7CiAgICAgICAgICAgICAgICAnc2l6ZSc6IFsncmFkaWFucycsIGxpZ2h0LnNwb3Rfc2l6ZV0KICAgICAgICAgICAgfSkKICAgICAgICAKICAgICAgICByZXR1cm4gZGF0YQogICAgCiAgICAKICAgIEBzdGF0aWNtZXRob2QKICAgIGRlZiBfX3BhY2tfbWF0ZXJpYWwobWF0ZXJpYWwpOgogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICd0eXBlJzogJ2JweS50eXBlcy5NYXRlcmlhbCcsCiAgICAgICAgICAgICduYW1lJzogbWF0ZXJpYWwubmFtZSwKICAgICAgICAgICAgJ2NvbG9yJzogWwogICAgICAgICAgICAgICAgJ0Zsb2F0Q29sb3JfcmdiJywKICAgICAgICAgICAgICAgIG1hdGVyaWFsLnJiX21hdC5jb2xvclswXSwKICAgICAgICAgICAgICAgIG1hdGVyaWFsLnJiX21hdC5jb2xvclsxXSwKICAgICAgICAgICAgICAgIG1hdGVyaWFsLnJiX21hdC5jb2xvclsyXSwKICAgICAgICAgICAgXSwKICAgICAgICAgICAgJ2FscGhhJzogWwogICAgICAgICAgICAgICAgJ2Zsb2F0JywKICAgICAgICAgICAgICAgIG1hdGVyaWFsLnJiX21hdC5hbHBoYQogICAgICAgICAgICBdLAogICAgICAgICAgICAnc2hpbmluZXNzJzogWwogICAgICAgICAgICAgICAgJ2Zsb2F0JywKICAgICAgICAgICAgICAgIG1hdGVyaWFsLnJiX21hdC5zaGluaW5lc3MKICAgICAgICAgICAgXQogICAgICAgIH0KICAgIAogICAgCiAgICBAc3RhdGljbWV0aG9kCiAgICBkZWYgX19wYWNrX3ZpZXdwb3J0X2NhbWVyYShyb3RhdGlvbiwgcG9zaXRpb24sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZW5zLCBwZXJzcGVjdGl2ZV9mb3YsIG9ydGhvX3NjYWxlLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgbmVhcl9jbGlwLCBmYXJfY2xpcCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZpZXdfcGVyc3BlY3RpdmUpOgogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICd2aWV3cG9ydF9jYW1lcmEnIDogewogICAgICAgICAgICAgICAgJ3JvdGF0aW9uJzpbCiAgICAgICAgICAgICAgICAgICAgIlF1YXQiLAogICAgICAgICAgICAgICAgICAgIHJvdGF0aW9uLncsCiAgICAgICAgICAgICAgICAgICAgcm90YXRpb24ueCwKICAgICAgICAgICAgICAgICAgICByb3RhdGlvbi55LAogICAgICAgICAgICAgICAgICAgIHJvdGF0aW9uLnoKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAncG9zaXRpb24nOlsKICAgICAgICAgICAgICAgICAgICAiVmVjMyIsCiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb24ueCwKICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbi55LAogICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uLnoKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnbGVucyc6WwogICAgICAgICAgICAgICAgICAgICJtbSIsCiAgICAgICAgICAgICAgICAgICAgbGVucwogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdmb3YnOlsKICAgICAgICAgICAgICAgICAgICAiZGVnIiwKICAgICAgICAgICAgICAgICAgICBwZXJzcGVjdGl2ZV9mb3YKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnbmVhcl9jbGlwJzpbCiAgICAgICAgICAgICAgICAgICAgJ20nLAogICAgICAgICAgICAgICAgICAgIG5lYXJfY2xpcAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdmYXJfY2xpcCc6WwogICAgICAgICAgICAgICAgICAgICdtJywKICAgICAgICAgICAgICAgICAgICBmYXJfY2xpcAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICMgJ2FzcGVjdF9yYXRpbyc6WwogICAgICAgICAgICAgICAgIyAgICAgIj8/PyIsCiAgICAgICAgICAgICAgICAjICAgICBjb250ZXh0LnNjZW5lLm15X2N1c3RvbV9wcm9wcy5hc3BlY3RfcmF0aW8KICAgICAgICAgICAgICAgICMgXSwKICAgICAgICAgICAgICAgICdvcnRob19zY2FsZSc6WwogICAgICAgICAgICAgICAgICAgICJmYWN0b3IiLAogICAgICAgICAgICAgICAgICAgIG9ydGhvX3NjYWxlCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgJ3ZpZXdfcGVyc3BlY3RpdmUnOiB2aWV3X3BlcnNwZWN0aXZlLAogICAgICAgICAgICB9CiAgICAgICAgfQogICAgCiAgICAKICAgIEBzdGF0aWNtZXRob2QKICAgIGRlZiBfX29ydGhvX3NjYWxlKHNjZW5lLCBzcGFjZSwgcnYzZCk6CiAgICAgICAgIyAKICAgICAgICAjIGJsZW5kZXItZ2l0L2JsZW5kZXIvc291cmNlL2JsZW5kZXIvYmxlbmtlcm5lbC9pbnRlcm4vY2FtZXJhLmM6MjkzCiAgICAgICAgIyAKICAgICAgICAKICAgICAgICAjIHJ2M2QtPmRpc3QgKiBzZW5zb3Jfc2l6ZSAvIHYzZC0+bGVucwogICAgICAgICMgb3J0aG9fc2NhbGUgPSBydjNkLnZpZXdfZGlzdGFuY2UgKiBzZW5zb3Jfc2l6ZSAvIHNwYWNlLmxlbnM7CiAgICAgICAgCiAgICAgICAgICAgICMgKG9ydGhvX3NjYWxlICogc3BhY2UubGVucykgLyBydjNkLnZpZXdfZGlzdGFuY2UgPSBzZW5zb3Jfc2l6ZQogICAgICAgIAogICAgICAgICMgd2l0aCBlc3RpbWF0ZWQgb3J0aG8gc2NhbGUsIGNvbXB1dGUgc2Vuc29yIHNpemUKICAgICAgICBvcnRob19zY2FsZSA9IHNjZW5lLm15X2N1c3RvbV9wcm9wcy5vcnRob19zY2FsZQogICAgICAgIHByaW50KCdvcnRobyBzY2FsZSAtPiBzZW5zb3Igc2l6ZScpCiAgICAgICAgc2Vuc29yX3NpemUgPSBvcnRob19zY2FsZSAqIHNwYWNlLmxlbnMgLyBydjNkLnZpZXdfZGlzdGFuY2UKICAgICAgICBwcmludChzZW5zb3Jfc2l6ZSkKICAgICAgICAKICAgICAgICAjIHRoZW4sIHdpdGggdGhhdCBjb25zdGFudCBzZW5zb3Igc2l6ZSwgY29tcHV0ZSB0aGUgZHluYW1pYyBvcnRobyBzY2FsZQogICAgICAgIHByaW50KCd0aGF0IHNlbnNvciBzaXplIC0+IG9ydGhvIHNjYWxlJykKICAgICAgICBzZW5zb3Jfc2l6ZSA9IDcxLjk4MzIwMDI3MzIzNTcxCiAgICAgICAgb3J0aG9fc2NhbGUgPSBydjNkLnZpZXdfZGlzdGFuY2UgKiBzZW5zb3Jfc2l6ZSAvIHNwYWNlLmxlbnMKICAgICAgICBwcmludChvcnRob19zY2FsZSkKICAgICAgICAKICAgICAgICAjIF4gdGhpcyB3b3JrcyBub3chCiAgICAgICAgIyAgIGJ1dCBub3cgSSBuZWVkIHRvIGJlIGFibGUgdG8gYXV0b21hdGljYWxseSBjb21wdXRlIHRoZSBzZW5zb3Igc2l6ZS4uLgogICAgICAgIAogICAgICAgICMgKGluIHRoZSBsaW5rIGJlbG93LCB0aGVyZSdzIHN1cHBvc2VkIHRvIGJlIGEgZmFjdG9yIG9mIDIgaW52b2x2ZWQgaW4gY29udmVydGluZyBsZW5zIHRvIEZPVi4gUGVyaGFwcyB0aGUgdHJ1ZSB2YWx1ZSBvZiBzZW5zb3Igc2l6ZSBpcyA3Miwgd2hpY2ggZGlmZmVycyBmcm9tIHRoZSBleHBlY3RlZCAzNm1tIGJ5IGEgZmFjdG9yIG9mIDIgPz8/KQogICAgICAgIAogICAgICAgIHJldHVybiBvcnRob19zY2FsZQogICAgCiAgICBAc3RhdGljbWV0aG9kCiAgICBkZWYgX192aWV3cG9ydF9mb3YocnYzZCk6CiAgICAgICAgIyBzcmM6IGh0dHBzOi8vYmxlbmRlci5zdGFja2V4Y2hhbmdlLmNvbS9xdWVzdGlvbnMvNDYzOTEvaG93LXRvLWNvbnZlcnQtc3BhY2V2aWV3M2QtbGVucy10by1maWVsZC1vZi12aWV3CiAgICAgICAgdm1hdF9pbnYgPSBydjNkLnZpZXdfbWF0cml4LmludmVydGVkKCkKICAgICAgICBwbWF0ID0gcnYzZC5wZXJzcGVjdGl2ZV9tYXRyaXggQCB2bWF0X2ludiAjIEAgaXMgbWF0cml4IG11bHRpcGxpY2F0aW9uCiAgICAgICAgZm92ID0gMi4wKm1hdGguYXRhbigxLjAvcG1hdFsxXVsxXSkqMTgwLjAvbWF0aC5waTsKICAgICAgICBwcmludCgncnYzZCBmb3Y6JykKICAgICAgICBwcmludChmb3YpCiAgICAgICAgCiAgICAgICAgcmV0dXJuIGZvdgogICAgICAgIAogICAgCiAgICAKICAgICMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KCgojCiMgUHJvcGVydGllcwojCgpjbGFzcyBSdWJ5T0ZfUHJvcGVydGllcyhicHkudHlwZXMuUHJvcGVydHlHcm91cCk6CiAgICBteV9ib29sOiBCb29sUHJvcGVydHkoCiAgICAgICAgbmFtZT0iRW5hYmxlIG9yIERpc2FibGUiLAogICAgICAgIGRlc2NyaXB0aW9uPSJBIGJvb2wgcHJvcGVydHkiLAogICAgICAgIGRlZmF1bHQgPSBGYWxzZQogICAgICAgICkKICAgICAgICAKICAgIG15X2Zsb2F0OiBGbG9hdFByb3BlcnR5KAogICAgICAgIG5hbWUgPSAiRmxvYXQgVmFsdWUiLAogICAgICAgIGRlc2NyaXB0aW9uID0gIkEgZmxvYXQgcHJvcGVydHkiLAogICAgICAgIGRlZmF1bHQgPSAyMy43LAogICAgICAgIG1pbiA9IDAuMDEsCiAgICAgICAgbWF4ID0gMzAuMAogICAgICAgICkKICAgICAgICAKICAgIG15X3BvaW50ZXI6IGJweS5wcm9wcy5Qb2ludGVyUHJvcGVydHkodHlwZT1icHkudHlwZXMuT2JqZWN0KQogICAgCiAgICBhbHBoYTogRmxvYXRQcm9wZXJ0eSgKICAgICAgICBuYW1lID0gIkFscGhhIiwKICAgICAgICBkZXNjcmlwdGlvbiA9ICJBbHBoYSB0cmFuc3BhcmVuY3kgZm9yIHRoZSB3aW5kb3ciLAogICAgICAgIGRlZmF1bHQgPSAwLjI1LAogICAgICAgIG1pbiA9IDAuMCwKICAgICAgICBtYXggPSAxLjAKICAgICAgICApCiAgICAgICAgCiAgICBiX3dpbmRvd0xpbms6IEJvb2xQcm9wZXJ0eSgKICAgICAgICBuYW1lPSJ3aW5kb3cgbGluayIsCiAgICAgICAgZGVzY3JpcHRpb249IkF1dG9tYXRpY2FsbHkgcmVwb3NpdGlvbiBhbmQgcmVzaXplIHRoZSBSdWJ5T0Ygd2luZG93IHRvIGJlIGRpcmVjdGx5IHVuZGVyIHRoZSBCbGVuZGVyIDNEIHZpZXciLAogICAgICAgIGRlZmF1bHQgPSBGYWxzZQogICAgICAgICkKICAgIAogICAgY2FtZXJhOiBicHkucHJvcHMuUG9pbnRlclByb3BlcnR5KAogICAgICAgIHR5cGU9YnB5LnR5cGVzLkNhbWVyYSwKICAgICAgICBuYW1lPSJjYW1lcmEiLAogICAgICAgIGRlc2NyaXB0aW9uPSJDYW1lcmEgdG8gYmUgdXNlZCBieSB0aGUgUnVieU9GIGdhbWUgZW5naW5lIikKICAgIAogICAgIyBhc3BlY3RfcmF0aW86IEZsb2F0UHJvcGVydHkoCiAgICAjICAgICBuYW1lID0gIkFzcGVjdCByYXRpbyIsCiAgICAjICAgICBkZXNjcmlwdGlvbiA9ICJWaWV3cG9ydCBhc3BlY3QgcmF0aW8iLAogICAgIyAgICAgZGVmYXVsdCA9IDE2LjAvOS4wLAogICAgIyAgICAgbWluID0gMC4wMDAxLAogICAgIyAgICAgbWF4ID0gMTAwLjAwMDAKICAgICMgICAgICkKICAgIAogICAgb3J0aG9fc2NhbGU6IEZsb2F0UHJvcGVydHkoCiAgICAgICAgbmFtZSA9ICJPcnRobyBzY2FsZSIsCiAgICAgICAgZGVzY3JpcHRpb24gPSAiU2NhbGUgZm9yIG9ydGhvZ3JhcGhpYyByZW5kZXIgbW9kZSAobWFudWFsIG92ZXJyaWRlKSIsCiAgICAgICAgZGVmYXVsdCA9IDEsCiAgICAgICAgbWluID0gMCwKICAgICAgICBtYXggPSAxMDAwMDAKICAgICAgICApCgoKIyBkZWYgdXBkYXRlX3JnYl9ub2RlcyhzZWxmLCBjb250ZXh0KToKIyAgICAgcGFzcwogICAgIyBtYXQgPSBzZWxmLmlkX2RhdGEKICAgICMgbm9kZXMgPSBbbiBmb3IgbiBpbiBtYXQubm9kZV90cmVlLm5vZGVzCiAgICAjICAgICAgICAgaWYgaXNpbnN0YW5jZShuLCBicHkudHlwZXMuU2hhZGVyTm9kZVJHQildCgogICAgIyBmb3IgbiBpbiBub2RlczoKICAgICMgICAgIG4ub3V0cHV0c1swXS5kZWZhdWx0X3ZhbHVlID0gc2VsZi5yZ2JfY29udHJvbGxlcgoKY2xhc3MgUnVieU9GX01BVEVSSUFMX1Byb3BlcnRpZXMoYnB5LnR5cGVzLlByb3BlcnR5R3JvdXApOgogICAgIyBkaWZmdXNlIGNvbG9yCiAgICAjIGFscGhhCiAgICAjIHNoaW5pbmVzcwogICAgCiAgICBjb2xvcjogRmxvYXRWZWN0b3JQcm9wZXJ0eSgKICAgICAgICBuYW1lID0gIkNvbG9yIiwKICAgICAgICBkZXNjcmlwdGlvbiA9ICJEaWZmdXNlIGNvbG9yIiwKICAgICAgICBzdWJ0eXBlID0gJ0NPTE9SJywKICAgICAgICBkZWZhdWx0ID0gKDEuMCwgMS4wLCAxLjApLCAjIHdoaXRlIGlzIGRlZmF1bHQKICAgICAgICBzaXplID0gMywKICAgICAgICAjIG1pbiA9IDAuMCwKICAgICAgICAjIG1heCA9IDEuMAogICAgICAgICkKICAgIAogICAgCiAgICBzcGVjdWxhcjogRmxvYXRWZWN0b3JQcm9wZXJ0eSgKICAgICAgICBuYW1lID0gInNwZWN1bGFyIGNvbG9yIiwKICAgICAgICBkZXNjcmlwdGlvbiA9ICJ0aGUgY29sb3Igb2YgaGlnaGxpZ2h0cyBvbiBhIG1hdGVyaWFsIiwKICAgICAgICBzdWJ0eXBlID0gJ0NPTE9SJywKICAgICAgICBkZWZhdWx0ID0gKDAuMCwgMC4wLCAwLjApLCAjIGRlZmF1bHQgZnJvbSBPcGVuRnJhbWV3b3JrcwogICAgICAgIHNpemUgPSAzLAogICAgICAgIG1pbiA9IDAuMCwKICAgICAgICBtYXggPSAxLjAKICAgICAgICApCiAgICAKICAgIGRpZmZ1c2U6IEZsb2F0VmVjdG9yUHJvcGVydHkoCiAgICAgICAgbmFtZSA9ICJkaWZmdXNlIGNvbG9yIiwKICAgICAgICBkZXNjcmlwdGlvbiA9ICJ0aGUgY29sb3Igb2YgdGhlIG1hdGVyaWFsIHdoZW4gaXQgaXMgaWxsdW1pbmF0ZWQiLAogICAgICAgIHN1YnR5cGUgPSAnQ09MT1InLAogICAgICAgIGRlZmF1bHQgPSAoMC44LCAwLjgsIDAuOCksICMgZGVmYXVsdCBmcm9tIE9wZW5GcmFtZXdvcmtzCiAgICAgICAgc2l6ZSA9IDMsCiAgICAgICAgbWluID0gMC4wLAogICAgICAgIG1heCA9IDEuMAogICAgICAgICkKICAgIAogICAgYW1iaWVudDogRmxvYXRWZWN0b3JQcm9wZXJ0eSgKICAgICAgICBuYW1lID0gImFtYmllbnQgY29sb3IiLAogICAgICAgIGRlc2NyaXB0aW9uID0gInRoZSBjb2xvciBvZiB0aGUgbWF0ZXJpYWwgd2hlbiBpdCBpcyBub3QgaWxsdW1pbmF0ZWQiLAogICAgICAgIHN1YnR5cGUgPSAnQ09MT1InLAogICAgICAgIGRlZmF1bHQgPSAoMC4yLCAwLjIsIDAuMiksICMgZGVmYXVsdCBmcm9tIE9wZW5GcmFtZXdvcmtzCiAgICAgICAgc2l6ZSA9IDMsCiAgICAgICAgbWluID0gMC4wLAogICAgICAgIG1heCA9IDEuMAogICAgICAgICkKICAgIAogICAgZW1pc3NpdmU6IEZsb2F0VmVjdG9yUHJvcGVydHkoCiAgICAgICAgbmFtZSA9ICJlbWlzc2l2ZSBjb2xvciIsCiAgICAgICAgZGVzY3JpcHRpb24gPSAidGhlIGNvbG9yIHRoZSBtYXRlcmlhbCBpbGx1bWluYXRlZCBmcm9tIHdpdGhpbiIsCiAgICAgICAgc3VidHlwZSA9ICdDT0xPUicsCiAgICAgICAgZGVmYXVsdCA9ICgwLjAsIDAuMCwgMC4wKSwgIyBkZWZhdWx0IGZyb20gT3BlbkZyYW1ld29ya3MKICAgICAgICBzaXplID0gMywKICAgICAgICBtaW4gPSAwLjAsCiAgICAgICAgbWF4ID0gMS4wCiAgICAgICAgKQogICAgCiAgICBhbHBoYTogRmxvYXRQcm9wZXJ0eSgKICAgICAgICBuYW1lID0gImFscGhhIiwKICAgICAgICBkZXNjcmlwdGlvbiA9ICJBbHBoYSB0cmFuc3BhcmVuY3kuIFZhcmllcyAwLTEsIHdoZXJlIDAgaXMgZnVsbHkgdHJhbnNwYXJlbnQiLAogICAgICAgIGRlZmF1bHQgPSAxLAogICAgICAgIG1pbiA9IDAsCiAgICAgICAgbWF4ID0gMSwKICAgICAgICBwcmVjaXNpb24gPSAyLAogICAgICAgIHN0ZXAgPSAwLjAxCiAgICAgICAgKQogICAgCiAgICBzaGluaW5lc3M6IEZsb2F0UHJvcGVydHkoCiAgICAgICAgbmFtZSA9ICJzaGluaW5lc3MiLAogICAgICAgIGRlc2NyaXB0aW9uID0gIlNwZWN1bGFyIGV4cG9uZW50OyBWYXJpZXMgMC0xMjgsIHdoZXJlIDEyOCBpcyB0aGUgbW9zdCBzaGlueSIsCiAgICAgICAgZGVmYXVsdCA9IDAuMiwKICAgICAgICBtaW4gPSAwLAogICAgICAgIG1heCA9IDEyOAogICAgICAgICkKCgojCiMgUGFuZWwgZm9yIGdlbmVyYWwgcmVuZGVyZXIgcHJvcGVydGllcyAodW5kZXIgUmVuZGVyIFByb3BlcnRpZXMgdGFiKQojCmNsYXNzIERBVEFfUFRfUnVieU9GX1Byb3BlcnRpZXMoYnB5LnR5cGVzLlBhbmVsKToKICAgIENPTVBBVF9FTkdJTkVTPSB7IlJVQllPRiJ9CiAgICAKICAgIGJsX2lkbmFtZSA9ICJSVUJZT0ZfUFRfSEVMTE9XT1JMRCIKICAgIGJsX2xhYmVsID0gIlByb3BlcnRpZXMgKGN1c3RvbSByZW5kZXJlcikiCiAgICBibF9yZWdpb25fdHlwZSA9ICdXSU5ET1cnCiAgICBibF9jb250ZXh0ID0gInJlbmRlciIKICAgIGJsX3NwYWNlX3R5cGUgPSAnUFJPUEVSVElFUycKICAgIAogICAgIyBwb2xsIGFsbG93cyBwYW5lbCB0byBvbmx5IGJlIHNob3duIGluIGNlcnRhaW4gY29udGV4dHMgKGllLCB3aGVuIHRoZSBmdW5jdGlvbiByZXR1cm5zIHRydWUpCiAgICAjIEhlcmUsIHdlIGNoZWNrIHRvIG1ha2Ugc3VyZSB0aGF0IHRoZSBhY3RpdmUgcmVuZGVyIGVuZ2luZSBpcyBpbiB0aGUgbGlzdCBvZiBjb21wYXRpYmxlIGVuZ2luZXMuCiAgICBAY2xhc3NtZXRob2QKICAgIGRlZiBwb2xsKGNscywgY29udGV4dCk6CiAgICAgICAgcHJpbnQoY29udGV4dC5lbmdpbmUpCiAgICAgICAgcmV0dXJuIChjb250ZXh0LmVuZ2luZSBpbiBjbHMuQ09NUEFUX0VOR0lORVMpCiAgICAKICAgIGRlZiBkcmF3KHNlbGYsIGNvbnRleHQpOgogICAgICAgICMgc2VsZi5sYXlvdXQubGFiZWwodGV4dD0iSGVsbG8gV29ybGQiKQogICAgICAgIAogICAgICAgICMgc2VsZi5sYXlvdXQucHJvcChjb250ZXh0LnNjZW5lLm15X2N1c3RvbV9wcm9wcywgIm15X2Jvb2wiKQogICAgICAgICMgc2VsZi5sYXlvdXQucHJvcChjb250ZXh0LnNjZW5lLm15X2N1c3RvbV9wcm9wcywgIm15X2Zsb2F0IikKICAgICAgICAjIHNlbGYubGF5b3V0LnByb3AoY29udGV4dC5zY2VuZS5teV9jdXN0b21fcHJvcHMsICJteV9wb2ludGVyIikKICAgICAgICAKICAgICAgICAjIHNlbGYubGF5b3V0LmxhYmVsKHRleHQ9IlJlYWwgRGF0YSBCZWxvdyIpCiAgICAgICAgc2VsZi5sYXlvdXQucHJvcChjb250ZXh0LnNjZW5lLm15X2N1c3RvbV9wcm9wcywgImFscGhhIikKICAgICAgICBzZWxmLmxheW91dC5wcm9wKGNvbnRleHQuc2NlbmUubXlfY3VzdG9tX3Byb3BzLCAiYl93aW5kb3dMaW5rIikKICAgICAgICBzZWxmLmxheW91dC5wcm9wKGNvbnRleHQuc2NlbmUubXlfY3VzdG9tX3Byb3BzLCAiY2FtZXJhIikKICAgICAgICAjIHNlbGYubGF5b3V0LnByb3AoY29udGV4dC5zY2VuZS5teV9jdXN0b21fcHJvcHMsICJhc3BlY3RfcmF0aW8iKQogICAgICAgIHNlbGYubGF5b3V0LnByb3AoY29udGV4dC5zY2VuZS5teV9jdXN0b21fcHJvcHMsICJvcnRob19zY2FsZSIpCiAgICAgICAgCiAgICAKIwojIFBhbmVsIGZvciBsaWdodCAodW5kZXIgIm9iamVjdCBkYXRhIiB0YWIgZm9yIGEgbGlnaHQgb2JqZWN0KQojIChiYXNlZCBvbiBibGVuZGVyIHNvdXJjZSBjb2RlOgojICAgIGJsZW5kZXItZ2l0L2J1aWxkX2xpbnV4X2RlYnVnL2Jpbi8yLjkwL3NjcmlwdHMvc3RhcnR1cC9ibF91aS9wcm9wZXJ0aWVzX2RhdGFfbGlnaHQucHkKIyApCmNsYXNzIERhdGFCdXR0b25zUGFuZWw6CiAgICBibF9zcGFjZV90eXBlID0gJ1BST1BFUlRJRVMnCiAgICBibF9yZWdpb25fdHlwZSA9ICdXSU5ET1cnCiAgICBibF9jb250ZXh0ID0gImRhdGEiCgogICAgQGNsYXNzbWV0aG9kCiAgICBkZWYgcG9sbChjbHMsIGNvbnRleHQpOgogICAgICAgIGVuZ2luZSA9IGNvbnRleHQuZW5naW5lCiAgICAgICAgcmV0dXJuIGNvbnRleHQubGlnaHQgYW5kIChlbmdpbmUgaW4gY2xzLkNPTVBBVF9FTkdJTkVTKQoKY2xhc3MgREFUQV9QVF9SdWJ5T0ZfbGlnaHQoRGF0YUJ1dHRvbnNQYW5lbCwgYnB5LnR5cGVzLlBhbmVsKToKICAgIGJsX2xhYmVsID0gIkxpZ2h0IgogICAgQ09NUEFUX0VOR0lORVMgPSB7J1JVQllPRid9CiAgICAKICAgIGRlZiBkcmF3KHNlbGYsIGNvbnRleHQpOgogICAgICAgIGxheW91dCA9IHNlbGYubGF5b3V0CiAgICAgICAgbGlnaHQgPSBjb250ZXh0LmxpZ2h0CiAgICAgICAgCiAgICAgICAgIyBDb21wYWN0IGxheW91dCBmb3Igbm9kZSBlZGl0b3IuCiAgICAgICAgaWYgc2VsZi5ibF9zcGFjZV90eXBlID09ICdQUk9QRVJUSUVTJzoKICAgICAgICAgICAgbGF5b3V0LnJvdygpLnByb3AobGlnaHQsICJ0eXBlIiwgZXhwYW5kPVRydWUpCiAgICAgICAgICAgIGxheW91dC51c2VfcHJvcGVydHlfc3BsaXQgPSBUcnVlCiAgICAgICAgZWxzZToKICAgICAgICAgICAgbGF5b3V0LnVzZV9wcm9wZXJ0eV9zcGxpdCA9IFRydWUKICAgICAgICAgICAgbGF5b3V0LnJvdygpLnByb3AobGlnaHQsICJ0eXBlIikKICAgICAgICAKICAgICAgICBjb2wgPSBsYXlvdXQuY29sdW1uKCkKICAgICAgICBjb2wucHJvcChsaWdodCwgImNvbG9yIikKICAgICAgICBjb2wucHJvcChsaWdodCwgImVuZXJneSIpCiAgICAgICAgY29sLnByb3AobGlnaHQsICJzcGVjdWxhcl9mYWN0b3IiLCB0ZXh0PSJTcGVjdWxhciIpCiAgICAgICAgCiAgICAgICAgY29sLnNlcGFyYXRvcigpCiAgICAgICAgCiAgICAgICAgaWYgbGlnaHQudHlwZSBpbiB7J1BPSU5UJywgJ1NQT1QnfToKICAgICAgICAgICAgY29sLnByb3AobGlnaHQsICJzaGFkb3dfc29mdF9zaXplIiwgdGV4dD0iUmFkaXVzIikKICAgICAgICBlbGlmIGxpZ2h0LnR5cGUgPT0gJ1NVTic6CiAgICAgICAgICAgIGNvbC5wcm9wKGxpZ2h0LCAiYW5nbGUiKQogICAgICAgIGVsaWYgbGlnaHQudHlwZSA9PSAnQVJFQSc6CiAgICAgICAgICAgIGNvbC5wcm9wKGxpZ2h0LCAic2hhcGUiKQogICAgICAgICAgICAKICAgICAgICAgICAgc3ViID0gY29sLmNvbHVtbihhbGlnbj1UcnVlKQogICAgICAgICAgICAKICAgICAgICAgICAgaWYgbGlnaHQuc2hhcGUgaW4geydTUVVBUkUnLCAnRElTSyd9OgogICAgICAgICAgICAgICAgc3ViLnByb3AobGlnaHQsICJzaXplIikKICAgICAgICAgICAgZWxpZiBsaWdodC5zaGFwZSBpbiB7J1JFQ1RBTkdMRScsICdFTExJUFNFJ306CiAgICAgICAgICAgICAgICBzdWIucHJvcChsaWdodCwgInNpemUiLCB0ZXh0PSJTaXplIFgiKQogICAgICAgICAgICAgICAgc3ViLnByb3AobGlnaHQsICJzaXplX3kiLCB0ZXh0PSJZIikKCgpjbGFzcyBEQVRBX1BUX3Nwb3QoRGF0YUJ1dHRvbnNQYW5lbCwgYnB5LnR5cGVzLlBhbmVsKToKICAgIGJsX2xhYmVsID0gIlNwb3QgU2hhcGUiCiAgICBibF9wYXJlbnRfaWQgPSAiREFUQV9QVF9SdWJ5T0ZfbGlnaHQiCiAgICBDT01QQVRfRU5HSU5FUz0geyJSVUJZT0YifQoKICAgIEBjbGFzc21ldGhvZAogICAgZGVmIHBvbGwoY2xzLCBjb250ZXh0KToKICAgICAgICBsaWdodCA9IGNvbnRleHQubGlnaHQKICAgICAgICBlbmdpbmUgPSBjb250ZXh0LmVuZ2luZQogICAgICAgIHJldHVybiAobGlnaHQgYW5kIGxpZ2h0LnR5cGUgPT0gJ1NQT1QnKSBhbmQgKGVuZ2luZSBpbiBjbHMuQ09NUEFUX0VOR0lORVMpCgogICAgZGVmIGRyYXcoc2VsZiwgY29udGV4dCk6CiAgICAgICAgbGF5b3V0ID0gc2VsZi5sYXlvdXQKICAgICAgICBsYXlvdXQudXNlX3Byb3BlcnR5X3NwbGl0ID0gVHJ1ZQoKICAgICAgICBsaWdodCA9IGNvbnRleHQubGlnaHQKCiAgICAgICAgY29sID0gbGF5b3V0LmNvbHVtbigpCgogICAgICAgIGNvbC5wcm9wKGxpZ2h0LCAic3BvdF9zaXplIiwgdGV4dD0iU2l6ZSIpCiAgICAgICAgY29sLnByb3AobGlnaHQsICJzcG90X2JsZW5kIiwgdGV4dD0iQmxlbmQiLCBzbGlkZXI9VHJ1ZSkKCiAgICAgICAgY29sLnByb3AobGlnaHQsICJzaG93X2NvbmUiKQoKCgoKY2xhc3MgTWF0ZXJpYWxCdXR0b25zUGFuZWw6CiAgICBibF9zcGFjZV90eXBlID0gJ1BST1BFUlRJRVMnCiAgICBibF9yZWdpb25fdHlwZSA9ICdXSU5ET1cnCiAgICBibF9jb250ZXh0ID0gIm1hdGVyaWFsIgogICAgIyBDT01QQVRfRU5HSU5FUyBtdXN0IGJlIGRlZmluZWQgaW4gZWFjaCBzdWJjbGFzcywgZXh0ZXJuYWwgZW5naW5lcyBjYW4gYWRkIHRoZW1zZWx2ZXMgaGVyZQoKICAgIEBjbGFzc21ldGhvZAogICAgZGVmIHBvbGwoY2xzLCBjb250ZXh0KToKICAgICAgICBtYXQgPSBjb250ZXh0Lm1hdGVyaWFsCiAgICAgICAgcmV0dXJuIG1hdCBhbmQgKGNvbnRleHQuZW5naW5lIGluIGNscy5DT01QQVRfRU5HSU5FUykgYW5kIG5vdCBtYXQuZ3JlYXNlX3BlbmNpbAoKCiMgY2xhc3MgTUFURVJJQUxfUFRfcHJldmlldyhNYXRlcmlhbEJ1dHRvbnNQYW5lbCwgUGFuZWwpOgojICAgICBibF9sYWJlbCA9ICJQcmV2aWV3IgojICAgICBibF9vcHRpb25zID0geydERUZBVUxUX0NMT1NFRCd9CiMgICAgIENPTVBBVF9FTkdJTkVTID0geydCTEVOREVSX0VFVkVFJ30KCiMgICAgIGRlZiBkcmF3KHNlbGYsIGNvbnRleHQpOgojICAgICAgICAgc2VsZi5sYXlvdXQudGVtcGxhdGVfcHJldmlldyhjb250ZXh0Lm1hdGVyaWFsKQoKCiMgY2xhc3MgTUFURVJJQUxfUFRfY3VzdG9tX3Byb3BzKE1hdGVyaWFsQnV0dG9uc1BhbmVsLCBQcm9wZXJ0eVBhbmVsLCBQYW5lbCk6CiMgICAgIENPTVBBVF9FTkdJTkVTID0geydCTEVOREVSX1JFTkRFUicsICdCTEVOREVSX0VFVkVFJywgJ0JMRU5ERVJfV09SS0JFTkNIJ30KIyAgICAgX2NvbnRleHRfcGF0aCA9ICJtYXRlcmlhbCIKIyAgICAgX3Byb3BlcnR5X3R5cGUgPSBicHkudHlwZXMuTWF0ZXJpYWwKCiMgY2xhc3MgTUFURVJJQUxfUFRfdmlld3BvcnQoTWF0ZXJpYWxCdXR0b25zUGFuZWwsIFBhbmVsKToKIyAgICAgYmxfbGFiZWwgPSAiVmlld3BvcnQgRGlzcGxheSIKIyAgICAgYmxfY29udGV4dCA9ICJtYXRlcmlhbCIKIyAgICAgYmxfb3B0aW9ucyA9IHsnREVGQVVMVF9DTE9TRUQnfQojICAgICBibF9vcmRlciA9IDEwCgojICAgICBAY2xhc3NtZXRob2QKIyAgICAgZGVmIHBvbGwoY2xzLCBjb250ZXh0KToKIyAgICAgICAgIG1hdCA9IGNvbnRleHQubWF0ZXJpYWwKIyAgICAgICAgIHJldHVybiBtYXQgYW5kIG5vdCBtYXQuZ3JlYXNlX3BlbmNpbAoKIyAgICAgZGVmIGRyYXcoc2VsZiwgY29udGV4dCk6CiMgICAgICAgICBsYXlvdXQgPSBzZWxmLmxheW91dAojICAgICAgICAgbGF5b3V0LnVzZV9wcm9wZXJ0eV9zcGxpdCA9IFRydWUKCiMgICAgICAgICBtYXQgPSBjb250ZXh0Lm1hdGVyaWFsCgojICAgICAgICAgY29sID0gbGF5b3V0LmNvbHVtbigpCiMgICAgICAgICBjb2wucHJvcChtYXQsICJkaWZmdXNlX2NvbG9yIiwgdGV4dD0iQ29sb3IiKQojICAgICAgICAgY29sLnByb3AobWF0LCAibWV0YWxsaWMiKQojICAgICAgICAgY29sLnByb3AobWF0LCAicm91Z2huZXNzIikKCgpjbGFzcyBSVUJZT0ZfTUFURVJJQUxfUFRfY29udGV4dF9tYXRlcmlhbChNYXRlcmlhbEJ1dHRvbnNQYW5lbCwgYnB5LnR5cGVzLlBhbmVsKToKICAgIGJsX2xhYmVsID0gIiIKICAgIGJsX2NvbnRleHQgPSAibWF0ZXJpYWwiCiAgICBibF9vcHRpb25zID0geydISURFX0hFQURFUid9CiAgICBDT01QQVRfRU5HSU5FUyA9IHsnUlVCWU9GJ30KCiAgICBAY2xhc3NtZXRob2QKICAgIGRlZiBwb2xsKGNscywgY29udGV4dCk6CiAgICAgICAgb2IgPSBjb250ZXh0Lm9iamVjdAogICAgICAgIG1hdCA9IGNvbnRleHQubWF0ZXJpYWwKCiAgICAgICAgaWYgKG9iIGFuZCBvYi50eXBlID09ICdHUEVOQ0lMJykgb3IgKG1hdCBhbmQgbWF0LmdyZWFzZV9wZW5jaWwpOgogICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgcmV0dXJuIChvYiBvciBtYXQpIGFuZCAoY29udGV4dC5lbmdpbmUgaW4gY2xzLkNPTVBBVF9FTkdJTkVTKQoKICAgIGRlZiBkcmF3KHNlbGYsIGNvbnRleHQpOgogICAgICAgIGxheW91dCA9IHNlbGYubGF5b3V0CgogICAgICAgIG1hdCA9IGNvbnRleHQubWF0ZXJpYWwKICAgICAgICBvYiA9IGNvbnRleHQub2JqZWN0CiAgICAgICAgc2xvdCA9IGNvbnRleHQubWF0ZXJpYWxfc2xvdAogICAgICAgIHNwYWNlID0gY29udGV4dC5zcGFjZV9kYXRhCiAgICAgICAgaWYgb2I6CiAgICAgICAgICAgIGlzX3NvcnRhYmxlID0gbGVuKG9iLm1hdGVyaWFsX3Nsb3RzKSA+IDEKICAgICAgICAgICAgcm93cyA9IDMKICAgICAgICAgICAgaWYgaXNfc29ydGFibGU6CiAgICAgICAgICAgICAgICByb3dzID0gNQoKICAgICAgICAgICAgcm93ID0gbGF5b3V0LnJvdygpCgogICAgICAgICAgICByb3cudGVtcGxhdGVfbGlzdCgiTUFURVJJQUxfVUxfbWF0c2xvdHMiLCAiIiwgb2IsICJtYXRlcmlhbF9zbG90cyIsIG9iLCAiYWN0aXZlX21hdGVyaWFsX2luZGV4Iiwgcm93cz1yb3dzKQoKICAgICAgICAgICAgY29sID0gcm93LmNvbHVtbihhbGlnbj1UcnVlKQogICAgICAgICAgICBjb2wub3BlcmF0b3IoIm9iamVjdC5tYXRlcmlhbF9zbG90X2FkZCIsIGljb249J0FERCcsIHRleHQ9IiIpCiAgICAgICAgICAgIGNvbC5vcGVyYXRvcigib2JqZWN0Lm1hdGVyaWFsX3Nsb3RfcmVtb3ZlIiwgaWNvbj0nUkVNT1ZFJywgdGV4dD0iIikKCiAgICAgICAgICAgIGNvbC5zZXBhcmF0b3IoKQoKICAgICAgICAgICAgY29sLm1lbnUoIk1BVEVSSUFMX01UX2NvbnRleHRfbWVudSIsIGljb249J0RPV05BUlJPV19ITFQnLCB0ZXh0PSIiKQoKICAgICAgICAgICAgaWYgaXNfc29ydGFibGU6CiAgICAgICAgICAgICAgICBjb2wuc2VwYXJhdG9yKCkKCiAgICAgICAgICAgICAgICBjb2wub3BlcmF0b3IoIm9iamVjdC5tYXRlcmlhbF9zbG90X21vdmUiLCBpY29uPSdUUklBX1VQJywgdGV4dD0iIikuZGlyZWN0aW9uID0gJ1VQJwogICAgICAgICAgICAgICAgY29sLm9wZXJhdG9yKCJvYmplY3QubWF0ZXJpYWxfc2xvdF9tb3ZlIiwgaWNvbj0nVFJJQV9ET1dOJywgdGV4dD0iIikuZGlyZWN0aW9uID0gJ0RPV04nCgogICAgICAgIHJvdyA9IGxheW91dC5yb3coKQogICAgICAgIAogICAgICAgIGlmIG9iOgogICAgICAgICAgICByb3cudGVtcGxhdGVfSUQob2IsICJhY3RpdmVfbWF0ZXJpYWwiLCBuZXc9Im1hdGVyaWFsLm5ldyIpCgogICAgICAgICAgICBpZiBzbG90OgogICAgICAgICAgICAgICAgaWNvbl9saW5rID0gJ01FU0hfREFUQScgaWYgc2xvdC5saW5rID09ICdEQVRBJyBlbHNlICdPQkpFQ1RfREFUQScKICAgICAgICAgICAgICAgIHJvdy5wcm9wKHNsb3QsICJsaW5rIiwgaWNvbj1pY29uX2xpbmssIGljb25fb25seT1UcnVlKQoKICAgICAgICAgICAgaWYgb2IubW9kZSA9PSAnRURJVCc6CiAgICAgICAgICAgICAgICByb3cgPSBsYXlvdXQucm93KGFsaWduPVRydWUpCiAgICAgICAgICAgICAgICByb3cub3BlcmF0b3IoIm9iamVjdC5tYXRlcmlhbF9zbG90X2Fzc2lnbiIsIHRleHQ9IkFzc2lnbiIpCiAgICAgICAgICAgICAgICByb3cub3BlcmF0b3IoIm9iamVjdC5tYXRlcmlhbF9zbG90X3NlbGVjdCIsIHRleHQ9IlNlbGVjdCIpCiAgICAgICAgICAgICAgICByb3cub3BlcmF0b3IoIm9iamVjdC5tYXRlcmlhbF9zbG90X2Rlc2VsZWN0IiwgdGV4dD0iRGVzZWxlY3QiKQoKICAgICAgICBlbGlmIG1hdDoKICAgICAgICAgICAgcm93LnRlbXBsYXRlX0lEKHNwYWNlLCAicGluX2lkIikKICAgICAgICAKICAgICAgICAjIHdoZW4geW91IGNyZWF0ZSBhIG5ldyB0ZXh0dXJlIHNsb3QsIGl0IGlzIGluaXRpYWxpemVkIGVtcHR5CiAgICAgICAgIyBzbyB5b3UgbmVlZCB0byBtYWtlIHN1cmUgdGhlcmUncyBhY3R1YWxseSBhIG1hdGVyaWFsIHRoZXJlCiAgICAgICAgIyBvciB5b3UgZ2V0IGEgUHl0aG9uIGVycm9yLgogICAgICAgICMgKEJsZW5kZXIgd29uJ3QgY3Jhc2gsIGJ1dCB0aGlzIGlzIHN0aWxsIG5vdCBnb29kIGJlaGF2aW9yLikKICAgICAgICBpZiBtYXQ6CiAgICAgICAgICAgIGxheW91dC5wcm9wKG1hdC5yYl9tYXQsICJjb2xvciIpCiAgICAgICAgICAgIAogICAgICAgICAgICBsYXlvdXQucHJvcChtYXQucmJfbWF0LCAic3BlY3VsYXIiKQogICAgICAgICAgICBsYXlvdXQucHJvcChtYXQucmJfbWF0LCAiZGlmZnVzZSIpCiAgICAgICAgICAgIGxheW91dC5wcm9wKG1hdC5yYl9tYXQsICJhbWJpZW50IikKICAgICAgICAgICAgbGF5b3V0LnByb3AobWF0LnJiX21hdCwgImVtaXNzaXZlIikKICAgICAgICAgICAgCiAgICAgICAgICAgIGNvbCA9IGxheW91dC5jb2x1bW4oKQogICAgICAgICAgICBjb2wucHJvcChtYXQucmJfbWF0LCAiYWxwaGEiKQogICAgICAgICAgICBjb2wucHJvcChtYXQucmJfbWF0LCAic2hpbmluZXNzIikKCgoKCgoKCiMgUmVuZGVyRW5naW5lcyBhbHNvIG5lZWQgdG8gdGVsbCBVSSBQYW5lbHMgdGhhdCB0aGV5IGFyZSBjb21wYXRpYmxlIHdpdGguCiMgV2UgcmVjb21tZW5kIHRvIGVuYWJsZSBhbGwgcGFuZWxzIG1hcmtlZCBhcyBCTEVOREVSX1JFTkRFUiwgYW5kIHRoZW4KIyBleGNsdWRlIGFueSBwYW5lbHMgdGhhdCBhcmUgcmVwbGFjZWQgYnkgY3VzdG9tIHBhbmVscyByZWdpc3RlcmVkIGJ5IHRoZQojIHJlbmRlciBlbmdpbmUsIG9yIHRoYXQgYXJlIG5vdCBzdXBwb3J0ZWQuCmRlZiBnZXRfcGFuZWxzKCk6CiAgICBleGNsdWRlX3BhbmVscyA9IHsKICAgICAgICAnVklFV0xBWUVSX1BUX2ZpbHRlcicsCiAgICAgICAgJ1ZJRVdMQVlFUl9QVF9sYXllcl9wYXNzZXMnLAogICAgICAgIAogICAgICAgICJDWUNMRVNfUkVOREVSX1BUX2xpZ2h0X3BhdGhzIiwKICAgICAgICAiQ1lDTEVTX0xJR0hUX1BUX2xpZ2h0IiwKICAgICAgICAiQ1lDTEVTX0xJR0hUX1BUX25vZGVzIiwKICAgICAgICAiQ1lDTEVTX0xJR0hUX1BUX3ByZXZpZXciLAogICAgICAgICJDWUNMRVNfTElHSFRfUFRfc3BvdCIsCiAgICAgICAgIkNZQ0xFU19SRU5ERVJfUFRfbGlnaHRfcGF0aHNfY2F1c3RpY3MiLAogICAgICAgICJDWUNMRVNfUkVOREVSX1BUX2xpZ2h0X3BhdGhzX2NsYW1waW5nIiwKICAgICAgICAiQ1lDTEVTX1JFTkRFUl9QVF9saWdodF9wYXRoc19tYXhfYm91bmNlcyIsCiAgICAgICAgIkNZQ0xFU19SRU5ERVJfUFRfcGFzc2VzX2xpZ2h0IiwKICAgICAgICAiQ1lDTEVTX1ZJRVczRF9QVF9zaGFkaW5nX2xpZ2h0aW5nIiwKICAgICAgICAjICJEQVRBX1BUX2NvbnRleHRfbGlnaHQiLAogICAgICAgICJEQVRBX1BUX2NvbnRleHRfbGlnaHRwcm9iZSIsCiAgICAgICAgIyAiREFUQV9QVF9jdXN0b21fcHJvcHNfbGlnaHQiLAogICAgICAgICJEQVRBX1BUX0VFVkVFX2xpZ2h0IiwKICAgICAgICAiREFUQV9QVF9FRVZFRV9saWdodF9kaXN0YW5jZSIsCiAgICAgICAgIkRBVEFfUFRfbGlnaHQiLAogICAgICAgICJEQVRBX1BUX2xpZ2h0cHJvYmUiLAogICAgICAgICJEQVRBX1BUX2xpZ2h0cHJvYmVfZGlzcGxheSIsCiAgICAgICAgIkRBVEFfUFRfbGlnaHRwcm9iZV9wYXJhbGxheCIsCiAgICAgICAgIkRBVEFfUFRfbGlnaHRwcm9iZV92aXNpYmlsaXR5IiwKICAgICAgICAiTk9ERV9DWUNMRVNfTElHSFRfUFRfbGlnaHQiLAogICAgICAgICJOT0RFX0NZQ0xFU19MSUdIVF9QVF9zcG90IiwKICAgICAgICAiTk9ERV9EQVRBX1BUX0VFVkVFX2xpZ2h0IiwKICAgICAgICAiTk9ERV9EQVRBX1BUX2xpZ2h0IiwKICAgICAgICAiUkVOREVSX1BUX2VldmVlX2luZGlyZWN0X2xpZ2h0aW5nIiwKICAgICAgICAiUkVOREVSX1BUX2VldmVlX2luZGlyZWN0X2xpZ2h0aW5nX2Rpc3BsYXkiLAogICAgICAgICJSRU5ERVJfUFRfZWV2ZWVfdm9sdW1ldHJpY19saWdodGluZyIsCiAgICAgICAgIlJFTkRFUl9QVF9vcGVuZ2xfbGlnaHRpbmciLAogICAgICAgICJVU0VSUFJFRl9QVF9zdHVkaW9saWdodF9saWdodF9lZGl0b3IiLAogICAgICAgICJVU0VSUFJFRl9QVF9zdHVkaW9saWdodF9saWdodHMiLAogICAgICAgICJVU0VSUFJFRl9QVF9zdHVkaW9saWdodF9tYXRjYXBzIiwKICAgICAgICAiVVNFUlBSRUZfUFRfc3R1ZGlvbGlnaHRfd29ybGQiLAogICAgICAgICJWSUVXM0RfUFRfc2hhZGluZ19saWdodGluZyIsCiAgICAgICAgIlZJRVdMQVlFUl9QVF9lZXZlZV9sYXllcl9wYXNzZXNfbGlnaHQiCiAgICAgICAgIyAiREFUQV9QVF9SdWJ5T0ZfbGlnaHQiLAogICAgfQogICAgCiAgICBwYW5lbHMgPSBbXQogICAgZm9yIHBhbmVsIGluIGJweS50eXBlcy5QYW5lbC5fX3N1YmNsYXNzZXNfXygpOgogICAgICAgICMgcHJpbnQocGFuZWwuX19uYW1lX18pCiAgICAgICAgaWYgaGFzYXR0cihwYW5lbCwgJ0NPTVBBVF9FTkdJTkVTJykgYW5kICdCTEVOREVSX1JFTkRFUicgaW4gcGFuZWwuQ09NUEFUX0VOR0lORVM6CiAgICAgICAgICAgIGlmIHBhbmVsLl9fbmFtZV9fIG5vdCBpbiBleGNsdWRlX3BhbmVsczoKICAgICAgICAgICAgICAgIHBhbmVscy5hcHBlbmQocGFuZWwpCiAgICAKICAgIHJldHVybiBwYW5lbHMKCmNsYXNzZXMgPSAoCiAgICBSdWJ5T0ZfUHJvcGVydGllcywKICAgIFJ1YnlPRl9NQVRFUklBTF9Qcm9wZXJ0aWVzLAogICAgREFUQV9QVF9SdWJ5T0ZfUHJvcGVydGllcywKICAgIERBVEFfUFRfUnVieU9GX2xpZ2h0LAogICAgREFUQV9QVF9zcG90LAogICAgUlVCWU9GX01BVEVSSUFMX1BUX2NvbnRleHRfbWF0ZXJpYWwKKQoKZGVmIHJlZ2lzdGVyKCk6CiAgICAjIFJlZ2lzdGVyIHRoZSBSZW5kZXJFbmdpbmUKICAgIGJweS51dGlscy5yZWdpc3Rlcl9jbGFzcyhSdWJ5T0YpCiAgICAKICAgIGZvciBwYW5lbCBpbiBnZXRfcGFuZWxzKCk6CiAgICAgICAgcGFuZWwuQ09NUEFUX0VOR0lORVMuYWRkKCdSVUJZT0YnKQogICAgCiAgICAKICAgIAogICAgZm9yIGMgaW4gY2xhc3NlczoKICAgICAgICBicHkudXRpbHMucmVnaXN0ZXJfY2xhc3MoYykKICAgIAogICAgIyBCaW5kIHZhcmlhYmxlIGZvciBwcm9wZXJ0aWVzCiAgICBicHkudHlwZXMuU2NlbmUubXlfY3VzdG9tX3Byb3BzID0gYnB5LnByb3BzLlBvaW50ZXJQcm9wZXJ0eSgKICAgICAgICAgICAgdHlwZT1SdWJ5T0ZfUHJvcGVydGllcwogICAgICAgICkKICAgIAogICAgYnB5LnR5cGVzLk1hdGVyaWFsLnJiX21hdCA9IGJweS5wcm9wcy5Qb2ludGVyUHJvcGVydHkoCiAgICAgICAgICAgIHR5cGU9UnVieU9GX01BVEVSSUFMX1Byb3BlcnRpZXMKICAgICAgICApCiAgICAKCgpkZWYgdW5yZWdpc3RlcigpOgogICAgYnB5LnV0aWxzLnVucmVnaXN0ZXJfY2xhc3MoUnVieU9GKQogICAgCiAgICBmb3IgcGFuZWwgaW4gZ2V0X3BhbmVscygpOgogICAgICAgIGlmICdSVUJZT0YnIGluIHBhbmVsLkNPTVBBVF9FTkdJTkVTOgogICAgICAgICAgICBwYW5lbC5DT01QQVRfRU5HSU5FUy5yZW1vdmUoJ1JVQllPRicpCiAgICAKICAgIGZvciBjIGluIGNsYXNzZXM6CiAgICAgICAgYnB5LnV0aWxzLnVucmVnaXN0ZXJfY2xhc3MoYykKICAgIAoKCmlmIF9fbmFtZV9fID09ICJfX21haW5fXyI6CiAgICBwcmludCgiaGVsbG8gd29ybGQiKQogICAgcmVnaXN0ZXIoKQoAAAAAAAAAAH2iAAAAAAAAAAAAAAAAAAAAAAAAfaIAAAAAAAAAAAAAAAAAAAAAAAB9ogAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD0iAAAAAAAAPSIAAAAAAAAAAAAAAADwvw"
				],
				[
					1,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAPSIAAAAAAAA9IgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"contents": "---",
			"settings":
			{
				"buffer_size": 3,
				"line_ending": "Unix",
				"name": "---"
			}
		},
		{
			"file": "lib/blender_sync.rb",
			"settings":
			{
				"buffer_size": 17605,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					18,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA7jcAAAAAAADuNwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "bin/data/tmp.json",
			"settings":
			{
				"buffer_size": 30194506,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/dependency_graph.rb",
			"settings":
			{
				"buffer_size": 17097,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "bin/data/world_data.yaml",
			"settings":
			{
				"buffer_size": 22394,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/instancing_buffer.rb",
			"settings":
			{
				"buffer_size": 3784,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/render_batch.rb",
			"settings":
			{
				"buffer_size": 6896,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "ext/c_extension/callbacks.cpp",
			"settings":
			{
				"buffer_size": 47862,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/blender_history.rb",
			"settings":
			{
				"buffer_size": 3562,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "bin/data/blender_data.json",
			"settings":
			{
				"buffer_size": 2186448,
				"line_ending": "Unix"
			}
		},
		{
			"file": "bin/data/tmp_all.json",
			"settings":
			{
				"buffer_size": 2186448,
				"line_ending": "Unix"
			}
		},
		{
			"file": "bin/data/tmp_delta.json",
			"settings":
			{
				"buffer_size": 4,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "---",
			"settings":
			{
				"buffer_size": 3,
				"line_ending": "Unix",
				"name": "---"
			}
		},
		{
			"file": "lib/entities/blender_object.rb",
			"settings":
			{
				"buffer_size": 1942,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/entities/blender_light.rb",
			"settings":
			{
				"buffer_size": 3776,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/entities/blender_mesh.rb",
			"settings":
			{
				"buffer_size": 6916,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/entities/blender_material.rb",
			"settings":
			{
				"buffer_size": 1049,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/entities/viewport_camera.rb",
			"settings":
			{
				"buffer_size": 7149,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "--",
			"settings":
			{
				"buffer_size": 2,
				"line_ending": "Unix",
				"name": "--"
			}
		},
		{
			"file": "ext/c_extension/ofxDynamicMaterial.cpp",
			"settings":
			{
				"buffer_size": 16382,
				"line_ending": "Unix"
			}
		},
		{
			"file": "ext/c_extension/ofxDynamicLight.cpp",
			"settings":
			{
				"buffer_size": 9882,
				"line_ending": "Unix"
			}
		},
		{
			"file": "bin/glsl/phong.frag",
			"settings":
			{
				"buffer_size": 12828,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "---",
			"settings":
			{
				"buffer_size": 3,
				"line_ending": "Unix",
				"name": "---"
			}
		},
		{
			"file": "ext/c_extension/app.cpp",
			"settings":
			{
				"buffer_size": 21512,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/core.rb",
			"settings":
			{
				"buffer_size": 22613,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "Gemfile",
			"settings":
			{
				"buffer_size": 615,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/Rakefile",
			"settings":
			{
				"buffer_size": 32769,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/rubyOF.cpp",
			"settings":
			{
				"buffer_size": 7276,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/GraphicsAdvanced.cpp",
			"settings":
			{
				"buffer_size": 26149,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/utils/ofUtils.h",
			"settings":
			{
				"buffer_size": 41124,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/utils/ofUtils.cpp",
			"settings":
			{
				"buffer_size": 35993,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "--",
			"settings":
			{
				"buffer_size": 2,
				"line_ending": "Unix",
				"name": "--"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/lib/rubyOF.rb",
			"settings":
			{
				"buffer_size": 1432,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/fbo.rb",
			"settings":
			{
				"buffer_size": 1050,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/mesh.rb",
			"settings":
			{
				"buffer_size": 1172,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "TODO: implement YAML serialization for ofColor / ofFloatColor",
			"settings":
			{
				"buffer_size": 61,
				"line_ending": "Unix",
				"name": "TODO: implement YAML serialization for ofColor / o"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/color.rb",
			"settings":
			{
				"buffer_size": 5190,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/node.rb",
			"settings":
			{
				"buffer_size": 895,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/glm_vec4.rb",
			"settings":
			{
				"buffer_size": 1461,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/glm_vec3.rb",
			"settings":
			{
				"buffer_size": 1329,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/glm_vec2.rb",
			"settings":
			{
				"buffer_size": 1257,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/glm_quat.rb",
			"settings":
			{
				"buffer_size": 2018,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/graphics/ofImage.cpp",
			"settings":
			{
				"buffer_size": 38288,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/graphics/ofImage.h",
			"settings":
			{
				"buffer_size": 28176,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/profiler.callgrind",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 750.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"ruby",
				"Set Syntax: Ruby"
			],
			[
				"glsl",
				"Set Syntax: GLSL"
			],
			[
				"sort",
				"SortBy: Alphabetically"
			],
			[
				"sor",
				"SortBy: Alphabetically"
			],
			[
				"pyth",
				"Set Syntax: Python"
			],
			[
				"wra",
				"Word Wrap: Toggle"
			],
			[
				"lower",
				"Convert Case: Lower Case"
			],
			[
				"c++",
				"Set Syntax: C++"
			],
			[
				"upp",
				"Convert Case: Upper Case"
			],
			[
				"upper",
				"Convert Case: Upper Case"
			],
			[
				"uniq",
				"Permute Lines: Unique"
			],
			[
				"lowe",
				"Convert Case: Lower Case"
			],
			[
				"wrap",
				"Word Wrap: Toggle"
			],
			[
				"jso",
				"Set Syntax: JSON"
			],
			[
				"python",
				"Set Syntax: Python"
			],
			[
				"low",
				"Convert Case: Lower Case"
			],
			[
				"upper ",
				"Convert Case: Upper Case"
			],
			[
				"disabl",
				"Package Control: Disable Package"
			],
			[
				"enable",
				"Package Control: Enable Package"
			],
			[
				"expor",
				"Export to HTML: Show Export Menu"
			],
			[
				"enable pack",
				"Package Control: Enable Package"
			],
			[
				"disab",
				"Package Control: Disable Package"
			],
			[
				"pagke li",
				"Package Control: List Packages"
			],
			[
				"packag list",
				"Package Control: List Packages"
			],
			[
				"package list",
				"Package Control: List Packages"
			],
			[
				"syntax glsl",
				"Set Syntax: GLSL"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"rub",
				"Set Syntax: Ruby"
			],
			[
				"synt rub",
				"Set Syntax: Ruby"
			],
			[
				"auto",
				"Toggle AutoSave: current file only"
			],
			[
				"install pa",
				"Package Control: Install Package"
			],
			[
				"gig",
				"Git GUI Clients: Gitg"
			],
			[
				"make",
				"Set Syntax: Makefile"
			],
			[
				"yaml",
				"Set Syntax: YAML"
			],
			[
				"krake",
				"Git GUI Clients: GitKraken"
			],
			[
				"commit",
				"Git: Commit"
			],
			[
				"gitg",
				"Git GUI Clients: Gitg"
			],
			[
				"g",
				"Git GUI Clients: Gitg"
			],
			[
				"view as",
				"SublimeHighlight: view as HTML"
			],
			[
				"convert to html",
				"SublimeHighlight: convert to HTML"
			],
			[
				"convert",
				"SublimeHighlight: convert to RTF"
			],
			[
				"package insta",
				"Package Control: Install Package"
			],
			[
				"packge remove",
				"Package Control: Remove Package"
			],
			[
				"list ",
				"Package Control: List Packages"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"enable ",
				"Package Control: Enable Package"
			],
			[
				"disa",
				"Package Control: Disable Package"
			],
			[
				"add repo",
				"Package Control: Add Repository"
			],
			[
				"packgae",
				"Package Control: List Packages"
			],
			[
				"package",
				"Package Control: Disable Package"
			],
			[
				"html",
				"Set Syntax: HTML"
			],
			[
				"gitgui",
				"Git GUI Clients: Gitg"
			],
			[
				"makefil",
				"Set Syntax: Makefile"
			],
			[
				"ging",
				"Git GUI Clients: Gitg"
			],
			[
				"yam",
				"Set Syntax: YAML"
			],
			[
				"pacage",
				"Package Control: Enable Package"
			],
			[
				"amke",
				"Set Syntax: Makefile"
			],
			[
				"makefile",
				"Set Syntax: Makefile"
			],
			[
				"objec",
				"Set Syntax: Objective-C"
			],
			[
				"lua",
				"Set Syntax: Lua"
			],
			[
				"makef",
				"Set Syntax: Makefile"
			],
			[
				"packag",
				"Package Control: Install Package"
			],
			[
				"irb",
				"SublimeREPL: Ruby IRB (deprecated)"
			],
			[
				"ruby ",
				"SublimeREPL: Ruby"
			],
			[
				"r oc",
				"SublimeREPL: Octave"
			],
			[
				"repl o",
				"SublimeREPL: Octave"
			],
			[
				"octav",
				"SublimeREPL: Octave"
			],
			[
				"repl ruby",
				"SublimeREPL: Ruby"
			],
			[
				"repl ru",
				"SublimeREPL: Ruby"
			],
			[
				"repl",
				"SublimeREPL: Octave"
			],
			[
				"repl rub",
				"SublimeREPL: Ruby"
			],
			[
				"repl j",
				"SublimeREPL: Clojure"
			],
			[
				"mal",
				"Set Syntax: MATLAB"
			],
			[
				"matl",
				"Set Syntax: MATLAB"
			],
			[
				"keyb",
				"Preferences: Key Bindings - User"
			],
			[
				"mat",
				"Set Syntax: MATLAB"
			],
			[
				"package en",
				"Package Control: Upgrade Package"
			],
			[
				"package dis",
				"Package Control: Disable Package"
			],
			[
				"matlab",
				"Set Syntax: MATLAB"
			],
			[
				"repl oca",
				"SublimeREPL: Octave"
			],
			[
				"repl octa",
				"SublimeREPL: Octave"
			],
			[
				"install p",
				"Package Control: Install Package"
			],
			[
				"package in",
				"Package Control: Install Package"
			],
			[
				"text",
				"Set Syntax: Plain Text"
			],
			[
				"mark",
				"Set Syntax: Markdown"
			],
			[
				"todo",
				"Show TODOs: Project and open files"
			],
			[
				"pla",
				"Set Syntax: Plain Text"
			],
			[
				"pack",
				"Package Control: Disable Package"
			],
			[
				"tod",
				"Show TODOs: Project and open files"
			],
			[
				"to",
				"Show TODOs: Project and open files"
			],
			[
				"",
				"About"
			],
			[
				"pac",
				"Package Control: List Packages"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"log",
				"Git: Log Current File"
			],
			[
				"st",
				"Git: Status"
			],
			[
				"stat",
				"Git: Status"
			],
			[
				"pre",
				"Markdown Preview: preview in Browser"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"pr",
				"Markdown Preview: preview in Browser"
			],
			[
				"previe",
				"Markdown Preview: preview in Browser"
			],
			[
				"snipp",
				"Snippet: if … end"
			],
			[
				"snip",
				"Snippet: YAML.load(file)"
			],
			[
				"prefer",
				"Preferences: Settings - User"
			],
			[
				"key",
				"Preferences: Key Bindings - User"
			],
			[
				"vie",
				"Markdown Preview: preview in Browser"
			],
			[
				"pa",
				"Package Control: List Packages"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"reve",
				"File: Revert"
			],
			[
				"markdown",
				"Markdown Preview: preview in Sublime Text"
			],
			[
				"view",
				"Markdown Preview: preview in Browser"
			],
			[
				"prev",
				"Markdown Preview: preview in Browser"
			],
			[
				"smark",
				"Set Syntax: Markdown"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"brow",
				"Preferences: Browse Packages"
			],
			[
				"bro",
				"Preferences: Browse Packages"
			],
			[
				"git pu",
				"Git: Push"
			],
			[
				"fet",
				"Git: Fetch"
			],
			[
				"com",
				"Git: Commit"
			],
			[
				"add",
				"Git: Add Current File"
			],
			[
				"syntax te",
				"Set Syntax: Textile"
			],
			[
				"lo",
				"Git: Log All"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"oto",
				"Show TODOs: Open files only"
			],
			[
				"show",
				"Show TODOs: Project and open files"
			],
			[
				"list",
				"Package Control: List Packages"
			],
			[
				"pcaka",
				"Package Control: Install Package"
			],
			[
				"pcak",
				"Package Control: Discover Packages"
			]
		],
		"width": 1062.0
	},
	"console":
	{
		"height": 259.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
	],
	"file_history":
	[
		"/home/ravenskrag/Code/Source/blender-git/build_linux_debug/bin/2.90/scripts/startup/bl_ui/properties_material.py",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofGLUtils.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofTexture.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofTexture.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/graphics/ofPixels.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/graphics/ofPixels.h",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/bin/glsl/alpha_composite.frag",
		"/home/ravenskrag/Desktop/gem_structure/common.rb",
		"/home/ravenskrag/Desktop/gem_structure/bin/main.rb",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/lib/window.rb",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/lib/live_code.rb",
		"/home/ravenskrag/Code/Source/blender-git/build_linux_debug/bin/2.90/scripts/addons/space_view3d_stored_views/core.py",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/packge_version.txt",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofGLProgrammableRenderer.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofGLProgrammableRenderer.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofLight.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofLight.cpp",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/ext/c_extension/ofxDynamicMaterial.cpp",
		"/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/shader.rb",
		"/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/graphics.rb",
		"/home/ravenskrag/Desktop/gem_structure/vendor/bundle/ruby/2.7.0/gems/pry-0.13.1/lib/pry/commands/ls/formatter.rb",
		"/home/ravenskrag/Code/Source/blender-git/blender/source/blender/blenlib/BLI_array.hh",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/ext/addons_app/testApp/src/ofApp.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/glm_bindings.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/Color.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/Graphics.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/GraphicsAdvanced.cpp",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/bin/data/blender_data.json",
		"/home/ravenskrag/Desktop/gem_structure/build/window_guard.rb",
		"/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/window.rb",
		"/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/pixels.rb",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/Gemfile",
		"/home/ravenskrag/Desktop/gem_structure/Gemfile",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/3d/ofNode.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/3d/ofNode.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/Fbo.cpp",
		"/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/color.rb",
		"/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/fbo.rb",
		"/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/texture.rb",
		"/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/mesh.rb",
		"/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/resource_manager.rb",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/blender_iso_game.sublime-project",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/graphics/blendingExample/src/ofApp.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/gl/alphaMaskingShaderExample/src/ofApp.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/graphics/ofGraphics.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/graphics/graphicsExample/README.md",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/math/noise1dOctaveExample/src/ofApp.cpp",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/.bundle/config",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/ext/c_extension/ofxInstancingMaterial.h",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/ext/c_extension/ofxInstancingMaterial.cpp",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/ext/c_extension/shaders/phong.frag",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/ext/c_extension/shaders/phong_instanced.vert",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/types/ofColor.cpp",
		"/home/ravenskrag/Code/Source/blender-git/build_linux_debug/bin/2.90/scripts/addons/archipack/presets/archipack_floor/herringbone_50x10.py",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/ext/c_extension/app.cpp",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/python/properties/render_engine_properties.py",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/python/properties/material_properties.py",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/python/ui/RubyOF_properties.py",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/blender_iso_game.sublime-workspace",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxMidi/src/ofxMidiIn.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxOpenCv/libs/opencv/include/opencv2/ts/cuda_perf.hpp",
		"/home/ravenskrag/Desktop/gem_structure/vendor/apothecary/glm/include/glm/gtx/string_cast.inl",
		"/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/glm_quat.rb",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/youtube/lib/serialization/chipmunk/vec2.rb",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/lib/helpers.rb",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/lib/dependency_graph.rb",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/lib/blender_light.rb",
		"/home/ravenskrag/Desktop/gem_structure/lib/rubyOF.rb",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/gl/computeShaderTextureExample/bin/data/computeShader.glsl",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/gl/computeShaderTextureExample/src/ofApp.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/gl/computeShaderTextureExample/src/ofApp.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/gl/computeShaderTextureExample/computeShaderTextureExample.qbs",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofBufferObject.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/gl/multiTextureShaderExample/src/ofApp.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/gl/vboMeshDrawInstancedExample/bin/data/shaders/instanced.frag",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/gl/vboMeshDrawInstancedExample/bin/data/shaders/instanced.vert",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/gl/vboMeshDrawInstancedExample/src/ofApp.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/gl/vboMeshDrawInstancedExample/src/ofApp.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/gl/vboMeshDrawInstancedExample/vboMeshDrawInstancedExample.qbs",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/lib/blender_object.rb",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofVbo.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofVbo.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofVboMesh.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofVboMesh.cpp",
		"/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/glm_vec3.rb",
		"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/rubyOF.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/GraphicsAdvanced.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofMaterial.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofMaterial.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofShader.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofShader.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/shaders/phong.vert",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/shaders/phong.frag",
		"/home/ravenskrag/Desktop/New Folder (2)/writing/003 research papers/2020.10.31 using blender with external renderer/notes__defaultShader_noMaterialMeansNoLights.cpp",
		"/home/ravenskrag/Desktop/New Folder (2)/writing/003 research papers/2020.10.31 using blender with external renderer/notes__ofMaterial_bindingShaderAndSettingLightUniforms.cpp",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/grapevine_midi/bin/data/char_display_bg.vert",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/grapevine_midi/bin/data/char_display_bg.frag",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/grapevine_midi/bin/data/default.vert",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/grapevine_midi/bin/data/default_tex2DNoColor.frag",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/ext/c_extension/callbacks.cpp",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/grapevine_midi/lib/core.rb",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/gl/vboMeshDrawInstancedExample/src/main.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/rubyOF.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/Color.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/types/ofColor.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/graphics/ofGraphicsConstants.h",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/bin/data/char_display_bg.frag",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofGLRenderer.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/3d/ofMesh.inl",
		"/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/glm_vec2.rb",
		"/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/glm_vec4.rb",
		"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/image.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/image.h",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/ext/c_extension/phong_instanced.vert",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/gl/alphaMaskingShaderExample/bin/data/shaders_gles/alphamask.frag",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/bin/data/material_editor.frag",
		"/home/ravenskrag/Desktop/New Folder (2)/writing/003 research papers/2020.05.10 p3 a modern curses-like graphics interface/notes__ofTrueTypeFont_defaultShaderBinding.cpp",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/bin/data/world_data.yaml",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/python/__init__.py",
		"/home/ravenskrag/Code/Source/blender-git/build_linux_debug/bin/2.90/scripts/startup/bl_ui/properties_data_light.py",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/livecode2/lib/controller_state_machine.rb",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/gl/areaLightExample/config.make",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/gl/singleLightExample/src/ofApp.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/gl/singleLightExample/src/ofApp.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxPoco/libs/poco/include/Poco/LocalDateTime.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxAssimpModelLoader/libs/assimp/include/assimp/material.inl",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofGLRenderer.h",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/lib/scheduler.rb"
	],
	"find":
	{
		"height": 48.0
	},
	"find_in_files":
	{
		"height": 264.0,
		"where_history":
		[
			"",
			"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/",
			"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/**",
			"/home/ravenskrag/Desktop/gem_structure/bin/projects/blender_iso_game/lib/*",
			"",
			"/home/ravenskrag/Desktop/gem_structure/**/*",
			"/home/ravenskrag/Desktop/gem_structure/*",
			"/home/ravenskrag/Desktop/gem_structure/",
			"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF",
			"/home/ravenskrag/Desktop/gem_structure/",
			"/home/ravenskrag/Desktop/gem_structure/ext/",
			"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF",
			"/home/ravenskrag/Desktop/gem_structure/",
			"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF",
			"",
			"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF,/home/ravenskrag/Desktop/gem_structure/bin/projects/grapevine_midi",
			"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF",
			"",
			"*.rb",
			"",
			"/home/ravenskrag/Desktop/gem_structure/,*.cpp",
			"/home/ravenskrag/Desktop/gem_structure/",
			"/home/ravenskrag/Desktop/gem_structure/,*.rb",
			"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/",
			"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons",
			"",
			"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF",
			"/home/ravenskrag/Desktop/gem_structure,.*cpp",
			"/home/ravenskrag/Desktop/gem_structure,*.rb",
			"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks",
			"/home/ravenskrag/Desktop/gem_structure/bin/,*.rb",
			"/home/ravenskrag/Desktop/gem_structure/bin/**/*.rb",
			"/home/ravenskrag/Desktop/gem_structure/bin",
			"/home/ravenskrag/Desktop/gem_structure/run",
			"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"strftime",
			"transform",
			"position",
			"transform",
			"GL_RGBA32F",
			"::allocate",
			"allocate",
			"loaddata",
			"ofGetGLType",
			"::getdata",
			"texture.",
			"texture",
			"GL_RGBA",
			"RGB",
			"instance_data",
			"install",
			"run_i",
			"livecode",
			"old_list + ",
			"viewport",
			"objects",
			"all_entity_names",
			"datablocks",
			"all_entity_names",
			"material_export",
			"interrupt",
			"timestamps",
			"@@empty",
			"@history",
			"history",
			"visualize_lights",
			"num_lights",
			".enable",
			"position",
			".enable",
			"load_data",
			".enable",
			"loading lig",
			".disable",
			".enable",
			"@light =",
			"setpointlight",
			".disable",
			"@lights",
			".disable",
			"time - pa",
			"lights_and_camera",
			".enable",
			"enable",
			"lightData",
			"MAX_LIGHTS",
			"RubyOF::Light",
			"Light",
			"@batches.",
			"batch",
			"mat",
			"MAX_LIGHTS",
			"enabled",
			"material",
			"reload",
			"shader",
			"max_lights",
			"viewport_camera",
			"lights_and_camera",
			"ofDisableLighting",
			".disable",
			"disable",
			"enabled",
			"setup",
			"enablelight",
			"reset(",
			"reset",
			"lights_and_camera",
			"@lights.",
			"setAmbientColor",
			"setup",
			"size",
			"lights.",
			"gettype",
			"data->lightType",
			"setPointLight",
			"deleting",
			"print(\"packing light...\")",
			"_pack_light",
			"__pack_material",
			"_pack_light",
			"light",
			"__pack_light",
			"objects",
			"light",
			"json.",
			"json",
			"file",
			"light",
			"time",
			"specular",
			"diffuse",
			"rb_mat",
			"entity",
			"reset",
			"found mesh",
			"interrupt",
			"),",
			"0), ",
			"),",
			"(1.0, 1.0, 1.0)",
			"specular",
			"color.new",
			"RubyOF_MATERIAL_Properties",
			"rb_mat",
			"material",
			"color",
			"settings",
			"mFrameCounter_",
			"imgui",
			"ofget",
			"puts e",
			"getelapsed",
			"ofGetElapsedTimeMicros",
			"micro",
			"mil",
			"ofmillis",
			"text",
			"enable",
			"ini",
			"@lights",
			"\"Light\"",
			"Light"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"",
			"o",
			" "
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "python/__init__.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 41415,
						"regions":
						{
						},
						"selection":
						[
							[
								8765,
								8765
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										8765,
										8766
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/single_quote.png",
										"region.greenish"
									]
								},
								"open":
								{
									"1":
									[
										8755,
										8756
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 7942.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3,
						"regions":
						{
						},
						"selection":
						[
							[
								3,
								3
							]
						],
						"settings":
						{
							"auto_name": "---",
							"bracket_highlighter.busy": false,
							"rainbowth.lispy": false,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 35,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "lib/blender_sync.rb",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17605,
						"regions":
						{
						},
						"selection":
						[
							[
								14318,
								14318
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
									"1":
									[
										14327,
										14330
									]
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 14067.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "bin/data/tmp.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 30194506,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
									"1":
									[
										0,
										1
									]
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Ruby/Ruby.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "lib/dependency_graph.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17097,
						"regions":
						{
						},
						"selection":
						[
							[
								222,
								222
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1959,
										1962
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/dot.png",
										"region.yellowish brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										130,
										133
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "bin/data/world_data.yaml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 22394,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/YAML/YAML.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 15.0,
						"zoom_level": 1.0
					},
					"stack_index": 22,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "lib/instancing_buffer.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3784,
						"regions":
						{
						},
						"selection":
						[
							[
								2919,
								2919
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										3083,
										3086
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/dot.png",
										"region.yellowish brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										1346,
										1349
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2021.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "lib/render_batch.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6896,
						"regions":
						{
						},
						"selection":
						[
							[
								878,
								878
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1111,
										1114
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/dot.png",
										"region.yellowish brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										598,
										601
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 161.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "ext/c_extension/callbacks.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 47862,
						"regions":
						{
						},
						"selection":
						[
							[
								24280,
								24280
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										24281,
										24282
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										24280,
										24281
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax",
							"tab_size": 3,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 31326.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "lib/blender_history.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3562,
						"regions":
						{
						},
						"selection":
						[
							[
								2911,
								2911
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										2994,
										2997
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/dot.png",
										"region.yellowish brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										2776,
										2778
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2976.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "bin/data/blender_data.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2186448,
						"regions":
						{
						},
						"selection":
						[
							[
								337,
								337
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
									"1":
									[
										24,
										25
									]
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/sublime-languages/Better JSON/JSON.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 8277.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "bin/data/tmp_all.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2186448,
						"regions":
						{
						},
						"selection":
						[
							[
								337,
								337
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
									"1":
									[
										24,
										25
									]
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/sublime-languages/Better JSON/JSON.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "bin/data/tmp_delta.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										2,
										3
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										0,
										1
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/sublime-languages/Better JSON/JSON.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 13,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3,
						"regions":
						{
						},
						"selection":
						[
							[
								3,
								3
							]
						],
						"settings":
						{
							"auto_name": "---",
							"bracket_highlighter.busy": false,
							"rainbowth.lispy": false,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 44,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "lib/entities/blender_object.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1942,
						"regions":
						{
						},
						"selection":
						[
							[
								1156,
								1156
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1238,
										1239
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										951,
										952
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 558.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "lib/entities/blender_light.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3776,
						"regions":
						{
						},
						"selection":
						[
							[
								879,
								879
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										970,
										973
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/dot.png",
										"region.yellowish brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										824,
										827
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 638.0,
						"zoom_level": 1.0
					},
					"stack_index": 23,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "lib/entities/blender_mesh.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6916,
						"regions":
						{
						},
						"selection":
						[
							[
								5971,
								5971
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										6318,
										6321
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/dot.png",
										"region.yellowish brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										5953,
										5956
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6671.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "lib/entities/blender_material.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1049,
						"regions":
						{
						},
						"selection":
						[
							[
								603,
								603
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										639,
										642
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/dot.png",
										"region.yellowish brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										587,
										590
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 28,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "lib/entities/viewport_camera.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7149,
						"regions":
						{
						},
						"selection":
						[
							[
								4828,
								4828
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
									"1":
									[
										7145,
										7148
									]
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6338.0,
						"zoom_level": 1.0
					},
					"stack_index": 36,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 19,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2,
						"regions":
						{
						},
						"selection":
						[
							[
								2,
								2
							]
						],
						"settings":
						{
							"auto_name": "--",
							"bracket_highlighter.busy": false,
							"rainbowth.lispy": false,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 27,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "ext/c_extension/ofxDynamicMaterial.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16382,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/sublime-languages/Better C++/CCpp.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 26,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "ext/c_extension/ofxDynamicLight.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9882,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/sublime-languages/Better C++/CCpp.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 25,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "bin/glsl/phong.frag",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12828,
						"regions":
						{
						},
						"selection":
						[
							[
								1431,
								1431
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/OpenGL Shading Language (GLSL)/GLSL.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 793.0,
						"zoom_level": 1.0
					},
					"stack_index": 24,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 23,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3,
						"regions":
						{
						},
						"selection":
						[
							[
								3,
								3
							]
						],
						"settings":
						{
							"auto_name": "---",
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 30,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "ext/c_extension/app.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 21512,
						"regions":
						{
						},
						"selection":
						[
							[
								16150,
								16150
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										16242,
										16243
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										16150,
										16151
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/sublime-languages/Better C++/CCpp.sublime-syntax",
							"tab_size": 3,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 18.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "lib/core.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 22613,
						"regions":
						{
						},
						"selection":
						[
							[
								8866,
								8866
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 10651.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "Gemfile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 615,
						"regions":
						{
						},
						"selection":
						[
							[
								457,
								457
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										456,
										457
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/single_quote.png",
										"region.greenish"
									]
								},
								"open":
								{
									"1":
									[
										445,
										446
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"tab_size": 3,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "/home/ravenskrag/Desktop/gem_structure/Rakefile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 32769,
						"regions":
						{
						},
						"selection":
						[
							[
								26693,
								26693
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"tab_size": 3,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 29394.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/rubyOF.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7276,
						"regions":
						{
						},
						"selection":
						[
							[
								7184,
								7184
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										7198,
										7199
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										7140,
										7141
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax",
							"tab_size": 3,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5598.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 29,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/GraphicsAdvanced.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 26149,
						"regions":
						{
						},
						"selection":
						[
							[
								24888,
								24888
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
									"1":
									[
										26146,
										26147
									]
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/sublime-languages/Better C++/CCpp.sublime-syntax",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 27192.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 30,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/utils/ofUtils.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 41124,
						"regions":
						{
						},
						"selection":
						[
							[
								497,
								497
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										498,
										499
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										497,
										498
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/sublime-languages/Better C++/CCpp.sublime-syntax",
							"tab_size": 3,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 93.0,
						"zoom_level": 1.0
					},
					"stack_index": 33,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 31,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/utils/ofUtils.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 35993,
						"regions":
						{
						},
						"selection":
						[
							[
								9830,
								9830
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/sublime-languages/Better C++/CCpp.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 12121.0,
						"zoom_level": 1.0
					},
					"stack_index": 34,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 32,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2,
						"regions":
						{
						},
						"selection":
						[
							[
								2,
								2
							]
						],
						"settings":
						{
							"auto_name": "--",
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 43,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 33,
					"file": "/home/ravenskrag/Desktop/gem_structure/lib/rubyOF.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1432,
						"regions":
						{
						},
						"selection":
						[
							[
								572,
								572
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"tab_size": 3,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 944.0,
						"zoom_level": 1.0
					},
					"stack_index": 29,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 34,
					"file": "/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/fbo.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1050,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1046,
										1049
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/dot.png",
										"region.yellowish brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										0,
										6
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"tab_size": 3,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 41,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 35,
					"file": "/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/mesh.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1172,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1168,
										1171
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/dot.png",
										"region.yellowish brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										0,
										6
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"tab_size": 3,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 42,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 36,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 61,
						"regions":
						{
						},
						"selection":
						[
							[
								61,
								61
							]
						],
						"settings":
						{
							"auto_name": "TODO: implement YAML serialization for ofColor / o",
							"bracket_highlighter.busy": false,
							"rainbowth.lispy": false,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 31,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 37,
					"file": "/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/color.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5190,
						"regions":
						{
						},
						"selection":
						[
							[
								3318,
								3318
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										3376,
										3379
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/dot.png",
										"region.yellowish brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										3321,
										3324
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3813.0,
						"zoom_level": 1.0
					},
					"stack_index": 37,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 38,
					"file": "/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/node.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 895,
						"regions":
						{
						},
						"selection":
						[
							[
								749,
								749
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										748,
										749
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										747,
										748
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 40,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 39,
					"file": "/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/glm_vec4.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1461,
						"regions":
						{
						},
						"selection":
						[
							[
								1420,
								1420
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1447,
										1450
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/dot.png",
										"region.yellowish brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										1367,
										1370
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1209.0,
						"zoom_level": 1.0
					},
					"stack_index": 39,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 40,
					"file": "/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/glm_vec3.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1329,
						"regions":
						{
						},
						"selection":
						[
							[
								1290,
								1290
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1315,
										1318
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/dot.png",
										"region.yellowish brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										1240,
										1243
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 680.0,
						"zoom_level": 1.0
					},
					"stack_index": 32,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 41,
					"file": "/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/glm_vec2.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1257,
						"regions":
						{
						},
						"selection":
						[
							[
								1213,
								1213
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1213,
										1214
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/single_quote.png",
										"region.greenish"
									]
								},
								"open":
								{
									"1":
									[
										1210,
										1211
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 814.0,
						"zoom_level": 1.0
					},
					"stack_index": 38,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 42,
					"file": "/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/glm_quat.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2018,
						"regions":
						{
						},
						"selection":
						[
							[
								1670,
								1670
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										2008,
										2011
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/dot.png",
										"region.yellowish brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										12,
										17
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1431.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 43,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/graphics/ofImage.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 38288,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/sublime-languages/Better C++/CCpp.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 44,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/graphics/ofImage.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 28176,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/sublime-languages/Better C++/CCpp.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 837.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 45,
					"file": "/home/ravenskrag/Desktop/gem_structure/profiler.callgrind",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 45,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 48.0
	},
	"input":
	{
		"height": 67.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.deviot":
	{
		"height": 236.0
	},
	"output.exec":
	{
		"height": 323.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 96.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "qbs debug",
	"project": "blender_iso_game.sublime-project",
	"replace":
	{
		"height": 88.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"rake",
				"gem_structure/Rakefile"
			],
			[
				"oftexture",
				"gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofTexture.cpp"
			],
			[
				"ofpixels",
				"gem_structure/ext/openFrameworks/libs/openFrameworks/graphics/ofPixels.cpp"
			],
			[
				"ofimage",
				"gem_structure/ext/openFrameworks/libs/openFrameworks/graphics/ofImage.cpp"
			],
			[
				"rakefi",
				"gem_structure/Rakefile"
			],
			[
				"main.rb",
				"gem_structure/bin/main.rb"
			],
			[
				"gemfile",
				"gem_structure/bin/projects/blender_iso_game/Gemfile"
			],
			[
				"iso window",
				"gem_structure/bin/projects/blender_iso_game/lib/window.rb"
			],
			[
				"core",
				"scripts/addons/space_view3d_stored_views/core.py"
			],
			[
				"livecode",
				"gem_structure/bin/projects/blender_iso_game/lib/live_code.rb"
			],
			[
				"openframeworks version",
				"gem_structure/ext/openFrameworks/packge_version.txt"
			],
			[
				"ofxlight",
				"gem_structure/bin/projects/blender_iso_game/ext/c_extension/ofxDynamicLight.cpp"
			],
			[
				"ofxmater",
				"gem_structure/bin/projects/blender_iso_game/ext/c_extension/ofxDynamicMaterial.cpp"
			],
			[
				"light.rb",
				"gem_structure/bin/projects/blender_iso_game/lib/entities/blender_light.rb"
			],
			[
				"shader",
				"gem_structure/lib/rubyOF/shader.rb"
			],
			[
				".frag",
				"gem_structure/bin/projects/blender_iso_game/bin/glsl/phong.frag"
			],
			[
				"programable g",
				"gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofGLProgrammableRenderer.cpp"
			],
			[
				"graphics ad",
				"gem_structure/ext/rubyOF/GraphicsAdvanced.cpp"
			],
			[
				"oflight",
				"gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofLight.cpp"
			],
			[
				"bli array hh",
				"blender/blenlib/BLI_array.hh"
			],
			[
				"tmpjson",
				"gem_structure/bin/projects/blender_iso_game/bin/data/tmp.json"
			],
			[
				"iso game json",
				"gem_structure/bin/projects/blender_iso_game/bin/data/blender_data.json"
			],
			[
				"iso game/ app",
				"gem_structure/bin/projects/blender_iso_game/ext/addons_app/testApp/src/ofApp.cpp"
			],
			[
				"ruby .cpp",
				"gem_structure/ext/rubyOF/rubyOF.cpp"
			],
			[
				"window gu",
				"gem_structure/build/window_guard.rb"
			],
			[
				"blender data ",
				"gem_structure/bin/projects/blender_iso_game/bin/data/blender_data.json"
			],
			[
				"live",
				"gem_structure/bin/projects/blender_iso_game/lib/live_code.rb"
			],
			[
				"iso / gemfile",
				"gem_structure/bin/projects/blender_iso_game/Gemfile"
			],
			[
				"gem",
				"gem_structure/Gemfile"
			],
			[
				"fbo",
				"gem_structure/ext/rubyOF/Fbo.cpp"
			],
			[
				"ofnode",
				"gem_structure/ext/openFrameworks/libs/openFrameworks/3d/ofNode.cpp"
			],
			[
				"color.rb",
				"gem_structure/lib/rubyOF/color.rb"
			],
			[
				"ofxdyna",
				"gem_structure/bin/projects/blender_iso_game/ext/c_extension/ofxDynamicMaterial.cpp"
			],
			[
				"ofcolor",
				"gem_structure/ext/openFrameworks/libs/openFrameworks/types/ofColor.cpp"
			],
			[
				"ruby.cpp",
				"gem_structure/ext/rubyOF/rubyOF.cpp"
			],
			[
				"graphics.cpp",
				"gem_structure/ext/rubyOF/Graphics.cpp"
			],
			[
				"viewport camer",
				"gem_structure/bin/projects/blender_iso_game/lib/entities/viewport_camera.rb"
			],
			[
				"properties material",
				"scripts/startup/bl_ui/properties_material.py"
			],
			[
				"iso game / .yaml",
				"gem_structure/bin/projects/blender_iso_game/bin/data/world_data.yaml"
			],
			[
				"ofxmidiin.h",
				"gem_structure/ext/openFrameworks/addons/ofxMidi/src/ofxMidiIn.h"
			],
			[
				"iso game core rb",
				"gem_structure/bin/projects/blender_iso_game/lib/core.rb"
			],
			[
				"callbac cpp",
				"gem_structure/bin/projects/blender_iso_game/ext/c_extension/callbacks.cpp"
			],
			[
				"instb b",
				"gem_structure/bin/projects/blender_iso_game/lib/instancing_buffer.rb"
			],
			[
				"dep gra",
				"gem_structure/bin/projects/blender_iso_game/lib/dependency_graph.rb"
			],
			[
				"blendr sync",
				"gem_structure/bin/projects/blender_iso_game/lib/blender_sync.rb"
			],
			[
				"iso game python ini",
				"gem_structure/bin/projects/blender_iso_game/python/__init__.py"
			],
			[
				"phong frag",
				"gem_structure/bin/projects/blender_iso_game/ext/c_extension/shaders/phong.frag"
			],
			[
				"ofx insta",
				"gem_structure/bin/projects/blender_iso_game/ext/c_extension/ofxInstancingMaterial.cpp"
			],
			[
				"iso game core",
				"gem_structure/bin/projects/blender_iso_game/lib/core.rb"
			],
			[
				"color",
				"gem_structure/lib/rubyOF/color.rb"
			],
			[
				"string cast",
				"gem_structure/vendor/apothecary/glm/include/glm/gtx/string_cast.inl"
			],
			[
				"quaternion",
				"gem_structure/vendor/apothecary/glm/include/glm/gtc/quaternion.hpp"
			],
			[
				"quat.h",
				"gem_structure/vendor/apothecary/glm/include/glm/detail/type_quat.hpp"
			],
			[
				"quat.",
				"gem_structure/ext/openFrameworks/libs/glm/include/glm/detail/type_quat.inl"
			],
			[
				"glm bind",
				"gem_structure/ext/rubyOF/glm_bindings.cpp"
			],
			[
				"rubyofcpp",
				"gem_structure/ext/rubyOF/rubyOF.cpp"
			],
			[
				"glm quat",
				"gem_structure/lib/rubyOF/glm_quat.rb"
			],
			[
				"dep",
				"gem_structure/bin/projects/blender_iso_game/lib/dependency_graph.rb"
			],
			[
				"blender data",
				"gem_structure/bin/projects/blender_iso_game/bin/data/blender_data.json"
			],
			[
				"blenderdata",
				"gem_structure/bin/projects/blender_iso_game/bin/data/blender_data.json"
			],
			[
				"window",
				"gem_structure/bin/projects/blender_iso_game/lib/window.rb"
			],
			[
				"depgr",
				"gem_structure/bin/projects/blender_iso_game/lib/dependency_graph.rb"
			],
			[
				"graphics.c",
				"gem_structure/ext/rubyOF/Graphics.cpp"
			],
			[
				"world da",
				"gem_structure/bin/projects/blender_iso_game/bin/data/world_data.yaml"
			],
			[
				"graphi",
				"gem_structure/ext/rubyOF/GraphicsAdvanced.cpp"
			],
			[
				"rubyof.rb",
				"gem_structure/lib/rubyOF.rb"
			],
			[
				"graphicsadv",
				"gem_structure/ext/rubyOF/GraphicsAdvanced.cpp"
			],
			[
				"ofshade",
				"gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofShader.cpp"
			],
			[
				"glpro",
				"gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofGLProgrammableRenderer.cpp"
			],
			[
				"ofxinsta",
				"gem_structure/bin/projects/blender_iso_game/ext/c_extension/ofxInstancingMaterial.cpp"
			],
			[
				"callback",
				"gem_structure/bin/projects/blender_iso_game/ext/c_extension/callbacks.cpp"
			],
			[
				"midi core",
				"gem_structure/bin/projects/grapevine_midi/lib/core.rb"
			],
			[
				"vec3rb",
				"gem_structure/lib/rubyOF/glm_vec3.rb"
			],
			[
				"color.cpp",
				"gem_structure/ext/rubyOF/Color.cpp"
			],
			[
				"compute example",
				"gem_structure/ext/openFrameworks/examples/gl/computeShaderTextureExample/computeShaderTextureExample.qbs"
			],
			[
				"fbuffer",
				"gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofBufferObject.cpp"
			],
			[
				"glmvec3",
				"gem_structure/lib/rubyOF/glm_vec3.rb"
			],
			[
				"texture.h",
				"gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofTexture.h"
			],
			[
				"ofbuferob",
				"gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofBufferObject.cpp"
			],
			[
				"ofbasemateril",
				"gem_structure/ext/openFrameworks/addons/ofxAssimpModelLoader/libs/assimp/include/assimp/material.inl"
			],
			[
				"callbac",
				"gem_structure/bin/projects/blender_iso_game/ext/c_extension/callbacks.cpp"
			],
			[
				"ofmat",
				"gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofMaterial.cpp"
			],
			[
				"ofmesh",
				"gem_structure/ext/openFrameworks/libs/openFrameworks/3d/ofMesh.inl"
			],
			[
				"ruby.rb",
				"gem_structure/lib/rubyOF.rb"
			],
			[
				"ofvbomesh",
				"gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofVboMesh.cpp"
			],
			[
				"graphs",
				"gem_structure/ext/rubyOF/GraphicsAdvanced.cpp"
			],
			[
				"ofshader",
				"gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofShader.cpp"
			],
			[
				"glrenderer",
				"gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofGLRenderer.cpp"
			],
			[
				"ofmateria",
				"gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofMaterial.cpp"
			],
			[
				"vbomeshdrawinst",
				"gem_structure/ext/openFrameworks/examples/gl/vboMeshDrawInstancedExample/vboMeshDrawInstancedExample.qbs"
			],
			[
				"scedul",
				"gem_structure/bin/projects/blender_iso_game/lib/scheduler.rb"
			],
			[
				"ofglrender",
				"gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofGLRenderer.cpp"
			],
			[
				"gl renderer",
				"gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofGLProgrammableRenderer.cpp"
			],
			[
				"blender window",
				"gem_structure/bin/projects/blender_iso_game/lib/window.rb"
			],
			[
				"ofmateral",
				"gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofMaterial.cpp"
			],
			[
				"blender ofapp",
				"gem_structure/bin/projects/blender_iso_game/ext/addons_app/testApp/src/ofApp.cpp"
			],
			[
				"blender gemfile",
				"gem_structure/bin/projects/blender_iso_game/Gemfile"
			],
			[
				"gem ",
				"gem_structure/Gemfile"
			],
			[
				"ofmaterial",
				"gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofMaterial.cpp"
			],
			[
				"rubyof.cpp",
				"gem_structure/ext/rubyOF/rubyOF.cpp"
			],
			[
				"rubyof",
				"gem_structure/lib/rubyOF.rb"
			],
			[
				"programmable",
				"ext/openFrameworks/libs/openFrameworks/gl/ofGLProgrammableRenderer.cpp"
			],
			[
				"windowg",
				"build/window_guard.rb"
			],
			[
				"camera ya",
				"bin/projects/blender_iso_game/bin/data/viewport_camera.yaml"
			],
			[
				"glmbi",
				"ext/rubyOF/glm_bindings.cpp"
			],
			[
				"graph adv",
				"ext/rubyOF/GraphicsAdvanced.cpp"
			],
			[
				"graphc",
				"ext/rubyOF/Graphics.cpp"
			],
			[
				"init p",
				"bin/projects/blender_iso_game/python/__init__.py"
			],
			[
				"matrix trans",
				"vendor/apothecary/glm/include/glm/ext/matrix_transform.hpp"
			],
			[
				"glm matrix oper",
				"vendor/apothecary/glm/include/glm/gtx/matrix_operation.hpp"
			],
			[
				"matrix flo 4x4",
				"vendor/apothecary/glm/include/glm/ext/matrix_float4x4.hpp"
			],
			[
				"glm mat4 type",
				"vendor/apothecary/glm/include/glm/detail/type_mat4x4.hpp"
			],
			[
				"vec3",
				"lib/rubyOF/glm_vec3.rb"
			],
			[
				"glmbin",
				"ext/rubyOF/glm_bindings.cpp"
			],
			[
				"type mat4x4",
				"vendor/apothecary/glm/include/glm/detail/type_mat4x4.hpp"
			],
			[
				"mat double 4x4",
				"vendor/apothecary/glm/include/glm/ext/matrix_double4x4.hpp"
			],
			[
				"glm mat4x4 ",
				"vendor/apothecary/glm/include/glm/mat4x4.hpp"
			],
			[
				"ofgraphi",
				"ext/openFrameworks/libs/openFrameworks/graphics/ofGraphics.h"
			],
			[
				"renderer",
				"ext/openFrameworks/libs/openFrameworks/gl/ofGLProgrammableRenderer.cpp"
			],
			[
				"ofapprunner",
				"ext/openFrameworks/libs/openFrameworks/app/ofAppRunner.cpp"
			],
			[
				"ofcamera",
				"ext/openFrameworks/libs/openFrameworks/3d/ofCamera.cpp"
			],
			[
				"glprogramm",
				"ext/openFrameworks/libs/openFrameworks/gl/ofGLProgrammableRenderer.cpp"
			],
			[
				"glfwwindow",
				"ext/openFrameworks/libs/openFrameworks/app/ofAppGLFWWindow.cpp"
			],
			[
				"quaternio",
				"vendor/apothecary/glm/include/glm/gtc/quaternion.hpp"
			],
			[
				"ofxinfinit",
				"ext/openFrameworks/addons/ofxInfiniteCanvas/src/ofxInfiniteCanvas.cpp"
			],
			[
				"monkey ",
				"lib/rubyOF/monkey_patches/chipmunk/vec2.rb"
			],
			[
				"windo geom",
				"bin/projects/blender_iso_game/bin/data/window_geometry.yaml"
			],
			[
				"glm mat4",
				"vendor/apothecary/glm/include/glm/mat4x4.hpp"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 1000.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Experiments/oF_Test/oF_Test.sublime-project"
			],
			[
				"th",
				"/home/ravenskrag/Documents/Sublime/ThoughtTrace.sublime-project"
			],
			[
				"ete",
				"/home/ravenskrag/Documents/Projects/Eternity.sublime-project"
			],
			[
				"e",
				"/home/ravenskrag/Documents/Projects/Eternity.sublime-project"
			],
			[
				"et",
				"/home/ravenskrag/Documents/Projects/Eternity.sublime-project"
			],
			[
				"gamn",
				"/home/ravenskrag/Documents/Projects/GameDesignNotes.sublime-project"
			],
			[
				"oni",
				"/home/ravenskrag/Documents/Projects/Oni.sublime-project"
			],
			[
				"on",
				"/home/ravenskrag/Documents/Projects/Oni.sublime-project"
			],
			[
				"321",
				"/home/ravenskrag/Documents/Projects/CS321_Project.sublime-project"
			],
			[
				"go",
				"/home/ravenskrag/Documents/Projects/Gosu.sublime-project"
			],
			[
				"42",
				"/home/ravenskrag/Documents/Projects/CS425_OgreProject.sublime-project"
			]
		],
		"width": 760.0
	},
	"select_symbol":
	{
		"height": 488.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"wrap",
				"wrap"
			],
			[
				"keyboard",
				"keyboard_cb"
			],
			[
				"key",
				"keys"
			],
			[
				"setupopeng",
				"ofSetupOpenGL"
			],
			[
				"ofsetupop",
				"ofSetupOpenGL"
			]
		],
		"width": 492.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": false,
	"side_bar_visible": true,
	"side_bar_width": 421.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
