{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"charme",
				"char_mesh_dirty"
			],
			[
				"section",
				"section_count"
			],
			[
				"upda",
				"on_update"
			],
			[
				"first",
				"first_loop_complete"
			],
			[
				"update",
				"update_scheduler"
			],
			[
				"bars",
				"bar_segments"
			],
			[
				"attr",
				"attr_reader"
			],
			[
				"colo",
				"colors"
			],
			[
				"ofPop",
				"ofPopMatrix"
			],
			[
				"ofPush",
				"ofPushMatrix"
			],
			[
				"define",
				"define_method"
			],
			[
				"prev",
				"previous_time"
			],
			[
				"fi",
				"frame_idx"
			],
			[
				"name",
				"section_name"
			],
			[
				"time",
				"time_used_this_frame"
			],
			[
				"time_",
				"time_used_this_frame"
			],
			[
				"need",
				"need_more_time"
			],
			[
				"tot",
				"total_time_per_frame"
			],
			[
				"ent",
				"end_time"
			],
			[
				"updat",
				"update_steps"
			],
			[
				"spr",
				"sprite"
			],
			[
				"conta",
				"contain_vect"
			],
			[
				"fgor",
				"foreground"
			],
			[
				"color",
				"color_array"
			],
			[
				"colr",
				"color_array"
			],
			[
				"flush",
				"flushColors_fg"
			],
			[
				"bg_co",
				"bg_colors"
			],
			[
				"font",
				"fonts"
			],
			[
				"ofenbl",
				"ofEnableBlendMode__wrapper"
			],
			[
				"ofP",
				"ofPopMatrix"
			],
			[
				"bottm",
				"bottom_left"
			],
			[
				"fgc",
				"fg_color"
			],
			[
				"prints",
				"print_string"
			],
			[
				"each",
				"each_with_index"
			],
			[
				"yie",
				"yielder"
			],
			[
				"Enumera",
				"Enumerator"
			],
			[
				"getcolor",
				"getColor_bg"
			],
			[
				"colbg",
				"ColorHelper_bgOnly"
			],
			[
				"getcolo",
				"getColor_bg"
			],
			[
				"helpr",
				"ColorHelper_bgANDfg"
			],
			[
				"Colo",
				"ColorHelperHelper"
			],
			[
				"Ruby",
				"RubyOF"
			],
			[
				"defi",
				"define_method"
			],
			[
				"_colo",
				"_bgColorPixels"
			],
			[
				"_fg",
				"_fgColorPixels"
			],
			[
				"charw",
				"char_width_pxs"
			],
			[
				"origi",
				"uniform__origin"
			],
			[
				"gpu",
				"text_colors_gpu"
			],
			[
				"textc",
				"text_colors_cpu"
			],
			[
				"txc",
				"text_colors_cpu"
			],
			[
				"ofL",
				"ofLogNotice"
			],
			[
				"shared",
				"shared_ptr"
			],
			[
				"leo",
				"load_oneNameVertAndFrag"
			],
			[
				"start",
				"start_pt"
			],
			[
				"loop",
				"looper_i"
			],
			[
				"ofGet",
				"ofGetElapsedTimeMillis"
			],
			[
				"code",
				"codepoints"
			],
			[
				"pron",
				"portName"
			],
			[
				"portn",
				"portNum"
			],
			[
				"delta",
				"deltatime"
			],
			[
				"while_",
				"while_idle"
			],
			[
				"while",
				"while_active"
			],
			[
				"curr",
				"current_state"
			],
			[
				"calb",
				"callback_obj"
			],
			[
				"call",
				"callbacks"
			],
			[
				"RUby",
				"RubyOF"
			],
			[
				"pause",
				"pause_execution"
			],
			[
				"dynamic",
				"dynamic_load"
			],
			[
				"wrapped",
				"wrapped_object"
			],
			[
				"dynam",
				"dynamic_load"
			],
			[
				"currn",
				"current_turn"
			],
			[
				"current",
				"current_turn"
			],
			[
				"turn",
				"turn_number"
			],
			[
				"pre",
				"protect_runtime_errors"
			],
			[
				"save",
				"save_directory"
			],
			[
				"mous",
				"mouse_history"
			],
			[
				"on",
				"on_draw"
			],
			[
				"prod",
				"project_dir"
			],
			[
				"Path",
				"Pathname"
			],
			[
				"cext",
				"c_extension_dir"
			],
			[
				"Fiber",
				"Fiber"
			],
			[
				"loca",
				"local_subscriptions"
			],
			[
				"image",
				"image_i"
			],
			[
				"zip",
				"zip_pair"
			],
			[
				"chann",
				"channel-name"
			],
			[
				"data",
				"data_path"
			],
			[
				"channel",
				"channel_name"
			],
			[
				"icon_",
				"icon_filepath"
			],
			[
				"outp",
				"output_path"
			],
			[
				"channe",
				"channel_name"
			],
			[
				"OFB",
				"OF_BUILD_VARIABLE_FILE"
			],
			[
				"root",
				"REPO_ROOT"
			],
			[
				"Fil",
				"File\tFile.open(\"..\") { |file| .. }"
			],
			[
				"exten",
				"ofx_extension_name"
			],
			[
				"repo",
				"REPO_ROOT"
			],
			[
				"expand",
				"expand_path"
			],
			[
				"onl",
				"only_so"
			],
			[
				"sketch",
				"sketch_dump"
			],
			[
				"dump",
				"dump_so"
			],
			[
				"cate",
				"category_dir"
			],
			[
				"exp",
				"expand_path"
			],
			[
				"trail",
				"trail_dt"
			],
			[
				"es",
				"exit_status"
			],
			[
				"have_",
				"have_library"
			],
			[
				"gstream",
				"gstreamer"
			],
			[
				"polib",
				"poco_libs_dir"
			],
			[
				"build_",
				"build_tess2"
			],
			[
				"depe",
				"dependencies"
			],
			[
				"ext",
				"extconf"
			],
			[
				"oF",
				"oF_project"
			],
			[
				"clb",
				"c_library"
			],
			[
				"work",
				"work_dir"
			],
			[
				"temp",
				"temp_ext"
			],
			[
				"mk",
				"mySketch"
			],
			[
				"make",
				"Makefile"
			],
			[
				"bu",
				"build"
			],
			[
				"bur",
				"build_library"
			],
			[
				"clib",
				"clean_library"
			],
			[
				"ce",
				"1.coerce"
			],
			[
				"visua",
				"visualizations"
			],
			[
				"test_",
				"test_package"
			],
			[
				"poss",
				"possible_targets"
			],
			[
				"const",
				"constraint_target"
			],
			[
				"rec",
				"resources"
			],
			[
				"Hash",
				"HashWrapper"
			],
			[
				"remo",
				"removal_flag"
			],
			[
				"con",
				"constraint"
			],
			[
				"paramet",
				"parameterization"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/Gemfile",
			"settings":
			{
				"buffer_size": 1036,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Gemfile",
			"settings":
			{
				"buffer_size": 291,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "ext/addons_app/addons.make",
			"settings":
			{
				"buffer_size": 34,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/common.rb",
			"settings":
			{
				"buffer_size": 4704,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/button_event_codes.rb",
			"settings":
			{
				"buffer_size": 2340,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/Rakefile",
			"settings":
			{
				"buffer_size": 29603,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/build/build.rb",
			"settings":
			{
				"buffer_size": 3792,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "--",
			"settings":
			{
				"buffer_size": 2,
				"line_ending": "Unix",
				"name": "--"
			}
		},
		{
			"contents": "TODO: gc hits are bad. need to optizime char display to be less wasteful with string allocation.\n\n\nobjective is to avoid the big spikes, not to completely forgo garbage collection.\n\n\nneed to test rendering the text grid in separate draw calls first though. need to make sure that the coloring shader still works as expected. otherwise, we have a bit of a problem...\n\n\nalso need to think ahead to how this works for display buffer reading API\n\twant to be able to read out the characters that are currently in the buffer\n\talready possible and trival to get the colors out\n\n\n\n\n-----\n\n\noptimized some - looks like it wasn't the GC after all?\nneed better visualization of what happens in time / profiling\nto pinpoint further inefficiency",
			"settings":
			{
				"buffer_size": 732,
				"line_ending": "Unix",
				"name": "TODO: gc hits are bad. need to optizime char displ"
			}
		},
		{
			"file": "lib/window.rb",
			"settings":
			{
				"buffer_size": 3899,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/core.rb",
			"settings":
			{
				"buffer_size": 38813,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/scheduler.rb",
			"settings":
			{
				"buffer_size": 4888,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "--",
			"settings":
			{
				"buffer_size": 2,
				"line_ending": "Unix",
				"name": "--"
			}
		},
		{
			"file": "lib/char_mapped_display.rb",
			"settings":
			{
				"buffer_size": 7895,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/live_code.rb",
			"settings":
			{
				"buffer_size": 4983,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/looper_pedal.rb",
			"settings":
			{
				"buffer_size": 3408,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/helpers.rb",
			"settings":
			{
				"buffer_size": 2830,
				"line_ending": "Unix"
			}
		},
		{
			"file": "ext/c_extension/app.h",
			"settings":
			{
				"buffer_size": 2285,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "ext/c_extension/app.cpp",
			"settings":
			{
				"buffer_size": 15979,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "#include \"callbacks.h\"\n\n#include <iostream>\n\nusing namespace Rice;\n\n\ntemplate<typename T>\nstruct Null_Free_Function\n{\n  static void free(T * obj) { }\n};\n\n\n// define your callbacks here\nint cpp_callback(int x) {\n\t\n\treturn 1;\n}\n\n\nvoid render_material_editor(\n\tofMesh & mesh, ofShader & shader, std::string & shader_filepath,\n\tofTexture & tex0, ofTexture & tex1,\n\tint x, int y, int w, int h)\n{\n\tstringstream textOut1, textOut2;\n\t\n\ttextOut1 << \"tex0 size: \" << tex0.getWidth() << \" x \" << tex0.getHeight();\n\ttextOut2 << \"tex1 size: \" << tex1.getWidth() << \" x \" << tex1.getHeight();\n\t\n\tshader.load(shader_filepath);\n\tshader.begin();\n\t\n\tshader.setUniformTexture(\"tex0\", tex0, 0);\n\tshader.setUniformTexture(\"tex1\", tex1, 1);\n\t\n\t\n\tofPushMatrix();\n\t\tofTranslate(x,y);\n      ofScale(w,h);\n\t\t\n\t\tmesh.draw();\n\t\t\n\tofPopMatrix();\n\t\n\tshader.end();\n\t\n\t\n\tofPushStyle();\n\t\n\tofColor text_color(0.0);\n\t\n\tofSetColor(text_color);\n\t\n\tint bitmap_lineheight = 10;\n\tint offset = bitmap_lineheight;\n\tofDrawBitmapString(textOut1.str(), x, y+offset+h+bitmap_lineheight*1);\n\tofDrawBitmapString(textOut2.str(), x, y+offset+h+bitmap_lineheight*2);\n\t\n\tofPopStyle();\n}\n\n\n// Rice can't convert std::string into std::filesystem::path, but they will convert. Thus, we use this helper function. Can establish automatic conversions in Rice, but only when both types are bound.\n// \n// https://github.com/jasonroelofs/rice#implicit-casting-implicit_cast\n// \nbool ofShader_loadShaders(ofShader & shader, Rice::Array args){\n\tif(args.size() == 1){\n\t\tRice::Object x = args[0];\n\t\tstd::string path = from_ruby<std::string>(x);\n\t\treturn shader.load(path);\n\t}else if(args.size() == 2 || args.size() == 3){\n\t\treturn false; // TODO: implement this form as well\n\t}\n\t\n\treturn false;\n}\n\n// TODO: eventually want to bind uniforms through the ofShader member function, this is just a hold-over\nvoid ofShader_bindUniforms(ofShader & shader, \n\tstd::string name1, float p1x, float p1y,\n\tstd::string name2, float p2_1, float p2_2, float p2_3)\n{\n\tshader.setUniform2f(name1, glm::vec2(p1x, p1y));\n\tshader.setUniform3f(name2, glm::vec3(p2_1, p2_2, p2_3));\n}\n\n\n// \"header only\" class style, at least for now\nclass ofxTerminalRenderer : ofTrueTypeFont {\nprivate:\n\t\npublic:\n\tvoid meshify_lines(){\n\t\t\n\t}\n}\n\n\n\n// \"header only\" class style, at least for now\nclass CharMappedDisplay{\nprivate:\n\tint _numCharsX, _numCharsY;\n\tbool _fgColorUpdateFlag = true;\n\tbool _bgColorUpdateFlag = true;\n\t\n\t// TODO: initialize some more c++ values here, instead of doing them elsewhere and passing them in via the Ruby layer\n\t\n\tofPixels  _bgColorPixels;\n\tofMesh    _bgMesh;        // likely the same across instances\n\t\n\t\n\tofPixels  _fgColorPixels;\n\tofTexture _fgColorTexture;\n\tofShader  _fgColorShader; // should be the same across instances\n\t// NOTE: if you're creating multiple instances of this class, probably only need 1 mesh and 1 shader (singleton?)\n\t\n\tofNode _bgNode;\n\tofNode _fgNode;\n\t\n\tglm::vec2 _origin;\n\t\npublic:\n\t// CharMappedDisplay(){\n\t\t\n\t// }\n\t\n\t// ~CharMappedDisplay(){\n\t\t\n\t// }\n\t\n\t\n\t\n\tofColor getColor_fg(int x, int y){\n\t\treturn _fgColorPixels.getColor(x,y);\n\t}\n\t\n\tofColor getColor_bg(int x, int y){\n\t\treturn _bgColorPixels.getColor(x,y);\n\t}\n\t\n\tvoid setColor_fg(int x, int y, ofColor & c){\t\n\t\t// set local color cache\n\t\t\n\t\t\n\t\t// (move colors from cache to pixels)\n\t\t// set pixel color\n\t\t_fgColorPixels.setColor(x,y, c);\n\t\t\n\t\tif(_fgColorUpdateFlag){\n\t\t\t// move pixel data to texture\n\t\t\t_fgColorTexture.loadData(_fgColorPixels, GL_RGBA);\n\t\t}\n\t\t// OPTIMIZE: similar to neopixel arduino code, can specify a bunch a pixel changes, and then push them to the GPU all at once\n\t\t\n\t}\n\t\n\tvoid setColor_bg(int x, int y, ofColor & c){\n\t\t_bgColorPixels.setColor(x,y, c);\n\t\t\n\t\tif(_bgColorUpdateFlag){\n\t\t\t// i = pos.x.to_i + pos.y.to_i*(@x_chars) # <-- ruby code\n\t\t\tint i = x + y*_numCharsX;\n\t\t\t// no need to add 1 here, because this only counts visible chars\n\t\t\t// and disregaurds the invisible newline at the end of each line\n\t\t\t\n\t\t\t_bgMesh.setColor(0+i*4, c);\n\t\t\t_bgMesh.setColor(1+i*4, c);\n\t\t\t_bgMesh.setColor(2+i*4, c);\n\t\t\t_bgMesh.setColor(3+i*4, c);\n\t\t\t\n\t\t\t// OPTIMIZE: consider using getColorsPointer() to set mulitple colors at once\n\t\t\t// https://openframeworks.cc/documentation/3d/ofMesh/#show_getColorsPointer\n\t\t}\n\t}\n\t\n\t\n\tint getNumCharsX(){\n\t\treturn _numCharsX;\n\t}\n\t\n\tint getNumCharsY(){\n\t\treturn _numCharsY;\n\t}\n\t\n\t\n\t\n\t\n\t\n\t\n\tvoid flushColors_bg(){\n\t\tfor(int x=0; x < _numCharsX; x++){\n\t\t\tfor(int y=0; y < _numCharsY; y++){\n\t\t\t\tofColor c = _bgColorPixels.getColor(x,y);\n\t\t\t\tint i = x + y*_numCharsX;\n\t\t\t\t\n\t\t\t\t_bgMesh.setColor(0+i*4, c);\n\t\t\t\t_bgMesh.setColor(1+i*4, c);\n\t\t\t\t_bgMesh.setColor(2+i*4, c);\n\t\t\t\t_bgMesh.setColor(3+i*4, c);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tvoid flushColors_fg(){\n\t\t_fgColorTexture.loadData(_fgColorPixels, GL_RGBA);\n\t}\n\t\n\t\n\t\n\t// the \"autoUpdate\" interface style taken\n\t// from arduino neopixel library by adafruit\n\tvoid autoUpdateColor_fg(bool flag){\n\t\t_fgColorUpdateFlag = flag;\n\t}\n\t\n\tvoid autoUpdateColor_bg(bool flag){\n\t\t_bgColorUpdateFlag = flag;\n\t}\n\t\n\t// flush colors to output\n\tvoid flush(){\n\t\tflushColors_bg();\n\t\tflushColors_fg();\n\t}\n\t\n\t\n\t\n\tvoid setup_transforms(float origin_x, float origin_y, \n\t                      float offset_x, float offset_y,\n\t                      float scale_x,  float scale_y)\n\t{\n\t\t_bgNode.setPosition(origin_x+offset_x, origin_y+offset_y, 0);\n\t\t_bgNode.setScale(scale_x, scale_y, 1);\n\t\t\n\t\t\n\t\t_fgNode.setPosition(origin_x, origin_y, 0);\n\t\t\n\t\t_origin = glm::vec2(origin_x, origin_y);\n\t}\n\t\n\tvoid draw(ofMesh &text_mesh, ofTexture &font_texture){\n\t\tofPushMatrix();\n\t\t\n\t\t// ofLoadIdentityMatrix();\n\t\tofMultMatrix(_bgNode.getGlobalTransformMatrix());\n\t\t_bgMesh.draw();\n\t\t\n\t\tofPopMatrix();\n\t\t\n\t\t\n\t\t\n\t\tofPushMatrix();\n\t\t\n\t\t_fgColorShader.begin();\n\t\t\n\t\t_fgColorShader.setUniformTexture(\"trueTypeTexture\", font_texture,    0);\n\t\t_fgColorShader.setUniformTexture(\"fontColorMap\",    _fgColorTexture, 1);\n\t\t\n\t\t_fgColorShader.setUniform2f(\"origin\", _origin);\n\t\t// _fgColorShader.setUniform3f(\"charSize\", glm::vec3(p2_1, p2_2, p2_3));\n\t\t\n\t\tofMultMatrix(_fgNode.getGlobalTransformMatrix());\n\t\ttext_mesh.draw();\n\t\t\n\t\t\n\t\t_fgColorShader.end();\n\t\t\n\t\tofPopMatrix();\n\t}\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\tRice::Data_Object<ofShader> fgText_getShader(){\n\t\tRice::Data_Object<ofShader> rb_cPtr(\n\t\t\t&_fgColorShader,\n\t\t\tRice::Data_Type< ofShader >::klass(),\n\t\t\tRice::Default_Mark_Function< ofShader >::mark,\n\t\t\tNull_Free_Function< ofShader >::free\n\t\t);\n\t\t\n\t\treturn rb_cPtr;\n\t}\n\t\n\tRice::Data_Object<ofTexture> fgText_getTexture(){\n\t\tRice::Data_Object<ofTexture> rb_cPtr(\n\t\t\t&_fgColorTexture,\n\t\t\tRice::Data_Type< ofTexture >::klass(),\n\t\t\tRice::Default_Mark_Function< ofTexture >::mark,\n\t\t\tNull_Free_Function< ofTexture >::free\n\t\t);\n\t\t\n\t\treturn rb_cPtr;\n\t}\n\t\n\tRice::Data_Object<ofPixels> getBgColorPixels(){\n\t\tRice::Data_Object<ofPixels> rb_cPtr(\n\t\t\t&_bgColorPixels,\n\t\t\tRice::Data_Type< ofPixels >::klass(),\n\t\t\tRice::Default_Mark_Function< ofPixels >::mark,\n\t\t\tNull_Free_Function< ofPixels >::free\n\t\t);\n\t\t\n\t\treturn rb_cPtr;\n\t}\n\t\n\tRice::Data_Object<ofPixels> getFgColorPixels(){\n\t\tRice::Data_Object<ofPixels> rb_cPtr(\n\t\t\t&_fgColorPixels,\n\t\t\tRice::Data_Type< ofPixels >::klass(),\n\t\t\tRice::Default_Mark_Function< ofPixels >::mark,\n\t\t\tNull_Free_Function< ofPixels >::free\n\t\t);\n\t\t\n\t\treturn rb_cPtr;\n\t}\n\t\n\t\n\t\n\tvoid bgMesh_draw(){\n\t\t_bgMesh.draw();\n\t}\n\t\n\t\n\t\n\t\n\t\n\t// create uniform mesh based on dimensions specified by Ruby code\n\tvoid bgMesh_setup(int w, int h){\n\t\t_bgMesh.setMode( OF_PRIMITIVE_TRIANGLES );\n\t\t\n\t\tfor(int j=0; j < h; j++){\n\t\t\tfor(int i=0; i < w; i++){\n\t\t\t\t\n\t\t\t\t_bgMesh.addVertex(glm::vec3((i+0), (j+0), 0));\n\t\t\t\t_bgMesh.addColor(ofFloatColor(1,((float) i)/w,0));\n\t\t\t\t\n\t\t\t\t_bgMesh.addVertex(glm::vec3((i+1), (j+0), 0));\n\t\t\t\t_bgMesh.addColor(ofFloatColor(1,((float) i)/w,0));\n\t\t\t\t\n\t\t\t\t_bgMesh.addVertex(glm::vec3((i+0), (j+1), 0));\n\t\t\t\t_bgMesh.addColor(ofFloatColor(1,((float) i)/w,0));\n\t\t\t\t\n\t\t\t\t_bgMesh.addVertex(glm::vec3((i+1), (j+1), 0));\n\t\t\t\t_bgMesh.addColor(ofFloatColor(1,((float) i)/w,0));\n\t\t\t\t\n\t\t\t\t// ofColor will auto convert to ofFloatColor as necessary\n\t\t\t\t// https://forum.openframeworks.cc/t/relation-between-mesh-addvertex-and-addcolor/31314/3\n\t\t\t\t\n\t\t\t\t// need to replicate the verticies, because each vertex can only take one color\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor(int i=0; i < w*h; i++){\n\t\t\t_bgMesh.addIndex(2+i*4);\n\t\t\t_bgMesh.addIndex(1+i*4);\n\t\t\t_bgMesh.addIndex(0+i*4);\n\t\t\t\n\t\t\t_bgMesh.addIndex(2+i*4);\n\t\t\t_bgMesh.addIndex(3+i*4);\n\t\t\t_bgMesh.addIndex(1+i*4);\n\t\t}\n\t}\n\t\n\t\n\tvoid bgPixels_setup(int w, int h){\n\t\t// _fgColorPixels.clear(); // clear frees the color data - not needed\n\t\t\n\t\t// clear out the garbage\n\t\tfor(int x=0; x<w; x++){\n\t\t\tfor(int y=0; y<h; y++){\n\t\t\t\tofColor c(100, 100, 100, 255);\n\t\t\t\t\n\t\t\t\t_fgColorPixels.setColor(x,y, c);\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\tvoid fgPixels_setup(int w, int h){\n\t\t// _fgColorPixels.clear(); // clear frees the color data - not needed\n\t\t\n\t\t// clear out the garbage\n\t\tfor(int x=0; x<w; x++){\n\t\t\tfor(int y=0; y<h; y++){\n\t\t\t\tofColor c(255, 255, 255, 255);\n\t\t\t\t\n\t\t\t\t_fgColorPixels.setColor(x,y, c);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// set specific colors\n\t\tfor(int i=0; i<30; i++){\n\t\t\tofColor c;\n\t\t\tc.r = 0;\n\t\t\tc.g = 255;\n\t\t\tc.b = 0;\n\t\t\tc.a = 255;\n\t\t\t\n\t\t\t_fgColorPixels.setColor(i,0, c);\n\t\t}\n\t\tfor(int i=0; i<30; i++){\n\t\t\tofColor c;\n\t\t\tc.r = 0;\n\t\t\tc.g = 255;\n\t\t\tc.b = 255;\n\t\t\tc.a = 255;\n\t\t\t\n\t\t\t_fgColorPixels.setColor(i,1, c);\n\t\t}\n\t\tfor(int i=0; i<30; i++){\n\t\t\tofColor c;\n\t\t\tc.r = 0;\n\t\t\tc.g = 0;\n\t\t\tc.b = 255;\n\t\t\tc.a = 255;\n\t\t\t\n\t\t\t_fgColorPixels.setColor(i,2, c);\n\t\t}\n\t\t\n\t\tofColor white(255, 255, 255,  255 );\n\t\t// illuminate 4 px in the top left\n\t\t_fgColorPixels.setColor(0,0, white);\n\t\t_fgColorPixels.setColor(0,1, white);\n\t\t_fgColorPixels.setColor(1,0, white);\n\t\t_fgColorPixels.setColor(1,1, white);\n\t\t// and light up the other 3 corners with 1 px each\n\t\t_fgColorPixels.setColor(0,h-1, white);\n\t\t_fgColorPixels.setColor(w-1,0, white);\n\t\t_fgColorPixels.setColor(w-1,h-1, white);\n\t}\n\t\n\tvoid setup( int w, int h ){\n\t\t_numCharsX = w;\n\t\t_numCharsY = h;\n\t\t// int w = 60;\n\t\t// int h = 18;\n\t\t\n\t\t\n\t\t_bgColorPixels.allocate(_numCharsX,_numCharsY, OF_PIXELS_RGBA);\n\t\t_fgColorPixels.allocate(_numCharsX,_numCharsY, OF_PIXELS_RGBA);\n\t\t\n\t\t\n\t\tbgMesh_setup(_numCharsX,_numCharsY);\n\t\t\n\t\tbgPixels_setup(_numCharsX,_numCharsY);\n\t\tfgPixels_setup(_numCharsX,_numCharsY);\n\t\t\n\t\tflush();\n\t\t\n\t\t\n\t\t// _fgColorTexture.setTextureWrap(GL_REPEAT, GL_REPEAT);\n\t\t_fgColorTexture.setTextureMinMagFilter(GL_NEAREST, GL_NEAREST);\n\t}\n\t\n\t\n};\n\n\n\n\n// \"main\" section\nextern \"C\"\nvoid Init_rubyOF_project()\n{\n\tModule rb_mRubyOF    = define_module(\"RubyOF\");\n\tModule rb_mCallbacks = define_module_under(rb_mRubyOF, \"CPP_Callbacks\");\n\t\n\trb_mCallbacks\n\t\t.define_module_function(\"test_callback\", &cpp_callback)\n\t\t\n\t\t\n\t\t\n\t\t.define_module_function(\"render_material_editor\", \n\t\t\t                     &render_material_editor)\n\t\t\n\t\t\n\t\t.define_module_function(\"ofShader_loadShaders\", \n\t\t\t                     &ofShader_loadShaders)\n\t\t\n\t\t.define_module_function(\"ofShader_bindUniforms\", \n\t\t\t                     &ofShader_bindUniforms)\n\t;\n\t\n\t\n\t\n\t\n\t\n\tModule rb_mProject = define_module_under(rb_mRubyOF, \"Project\");\n\t\n\tData_Type<CharMappedDisplay> rb_c_ofCharMappedDisplay =\n\t\tdefine_class_under<CharMappedDisplay>(rb_mProject, \"CharMappedDisplay\");\n\t\n\trb_c_ofCharMappedDisplay\n\t\t.define_constructor(Constructor<CharMappedDisplay>())\n\t\t\n\t\t.define_method(\"bgMesh_setup\",   &CharMappedDisplay::bgMesh_setup)\n\t\t.define_method(\"bgPixels_setup\", &CharMappedDisplay::bgPixels_setup)\n\t\t.define_method(\"fgPixels_setup\", &CharMappedDisplay::fgPixels_setup)\n\t\t.define_method(\"setup\",          &CharMappedDisplay::setup)\n\t\t\n\t\t.define_method(\"setup_transforms\", &CharMappedDisplay::setup_transforms)\n\t\t.define_method(\"cpp_draw\",         &CharMappedDisplay::draw)\n\t\t\n\t\t\n\t\t.define_method(\"getColor_fg\",    &CharMappedDisplay::getColor_fg)\n\t\t.define_method(\"getColor_bg\",    &CharMappedDisplay::getColor_bg)\n\t\t.define_method(\"setColor_fg\",    &CharMappedDisplay::setColor_fg)\n\t\t.define_method(\"setColor_bg\",    &CharMappedDisplay::setColor_bg)\n\t\t\n\t\t.define_method(\"getNumCharsX\",   &CharMappedDisplay::getNumCharsX)\n\t\t.define_method(\"getNumCharsY\",   &CharMappedDisplay::getNumCharsY)\n\t\t\n\t\t\n\t\t.define_method(\"flushColors_bg\", &CharMappedDisplay::flushColors_bg)\n\t\t.define_method(\"flushColors_fg\", &CharMappedDisplay::flushColors_fg)\n\t\t.define_method(\"flush\",\n\t\t\t&CharMappedDisplay::flush\n\t\t)\n\t\t.define_method(\"autoUpdateColor_fg\", \n\t\t\t&CharMappedDisplay::autoUpdateColor_fg\n\t\t)\n\t\t.define_method(\"autoUpdateColor_bg\", \n\t\t\t&CharMappedDisplay::autoUpdateColor_bg\n\t\t)\n\t\t\n\t\t.define_method(\"fgText_getShader\",\n\t\t\t&CharMappedDisplay::fgText_getShader\n\t\t)\n\t\t.define_method(\"fgText_getTexture\",\n\t\t\t&CharMappedDisplay::fgText_getTexture\n\t\t)\n\t\t\n\t\t.define_method(\"getBgColorPixels\",\n\t\t\t&CharMappedDisplay::getBgColorPixels\n\t\t)\n\t\t.define_method(\"getFgColorPixels\",\n\t\t\t&CharMappedDisplay::getFgColorPixels\n\t\t)\n\t\t\n\t\t\n\t\t.define_method(\"bgMesh_draw\",\n\t\t\t&CharMappedDisplay::bgMesh_draw\n\t\t)\n\t;\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\tModule rb_mOFX = define_module_under(rb_mRubyOF, \"OFX\");\n\t\n\tData_Type<ofxMidiOut> rb_c_ofxMidiOut =\n\t\tdefine_class_under<ofxMidiOut>(rb_mOFX, \"MidiOut\");\n\t\n\trb_c_ofxMidiOut\n\t\t.define_constructor(Constructor<ofxMidiOut>())\n\t\t.define_method(\"sendNoteOn\",   &ofxMidiOut::sendNoteOn)\n\t\t.define_method(\"sendNoteOff\",  &ofxMidiOut::sendNoteOff)\n\t\t.define_method(\"listOutPorts\", &ofxMidiOut::listOutPorts)\n\t\t\n\t\t// .define_method(\"openPort\",     &ofxMidiOut::openPort)\n\t\t.define_method(\"openPort_uint\",\n\t\t\tstatic_cast< bool (ofxMidiOut::*)\n\t\t\t(unsigned int portNumber)\n\t\t\t>(&ofxMidiOut::openPort)\n\t\t)\n\t\t.define_method(\"openPort_string\",\n\t\t\tstatic_cast< bool (ofxMidiOut::*)\n\t\t\t(std::string deviceName)\n\t\t\t>(&ofxMidiOut::openPort)\n\t\t)\n\t;\n\t\n\t\n\tData_Type<ofxMidiMessage> rb_c_ofxMidiMessage =\n\t\tdefine_class_under<ofxMidiMessage>(rb_mOFX, \"MidiMessage\");\n\t\n\trb_c_ofxMidiMessage\n\t\t.define_constructor(Constructor<ofxMidiMessage>())\n\t\t\n\t\t.define_method(\"getStatus\", &ofxMidiMessage__get_status)\n\t\t\n\t\t.define_method(\"channel\",   &ofxMidiMessage__get_channel)\n\t\t.define_method(\"pitch\",     &ofxMidiMessage__get_pitch)\n\t\t.define_method(\"velocity\",  &ofxMidiMessage__get_velocity)\n\t\t.define_method(\"value\",     &ofxMidiMessage__get_value)\n\t\t\n\t\t.define_method(\"deltatime\", &ofxMidiMessage__get_deltatime)\n\t\t\n\t\t.define_method(\"portNum\",   &ofxMidiMessage__get_portNum)\n\t\t.define_method(\"portName\",  &ofxMidiMessage__get_portName)\n\t\t\n\t\t.define_method(\"get_num_bytes\",  &ofxMidiMessage__get_num_bytes)\n\t\t.define_method(\"get_byte\",       &ofxMidiMessage__get_byte)\n\t;\n\t\n\t\n\t// TODO: write glue code to access these fields:\n\t\n\t\n\t// ofxMidiOut midiOut\n\t\n\t\n\t\n\t\n\t// glm uses functions not methods\n\t// https://openframeworks.cc/documentation/glm/\n\t\n\t// can get members of vector either as x and y, or with array-style access\n\t\n\tModule rb_mGLM    = define_module(\"GLM\");\n\t\n\tData_Type<glm::tvec2<float>> rb_cVec2_float =\n\t\tdefine_class_under<glm::tvec2<float>>(rb_mGLM, \"Vec2_float\");\n\t\n\trb_cVec2_float\n\t\t.define_method(\"get_component\",   &glm_tvec2_float_get_component)\n\t\t.define_method(\"set_component\",   &glm_tvec2_float_set_component)\n\t;\n}\n\n\n// \n// ext/openFrameworks/libs/glm/include/glm/detail/type_vec2.hpp\n// \nfloat glm_tvec2_float_get_component(glm::tvec2<float>& p, int i){\n\treturn p[i];\n}\n\nvoid  glm_tvec2_float_set_component(glm::tvec2<float>& p, int i, float value){\n\tp[i] = value;\n}\n\n\n// \n// ext/openFrameworks/addons/ofxMidi/src/ofxMidiMessage.h\n// \n\nint ofxMidiMessage__get_status(ofxMidiMessage self){\n\t// do not need to explictly state array size\n\t// src: https://stackoverflow.com/questions/32918448/is-it-bad-to-not-define-a-static-array-size-in-a-class-but-rather-to-let-it-au\n\tstatic const MidiStatus STATUS_IDS[] = {\n\t\tMIDI_UNKNOWN,\n\t\t\n\t\t// channel voice messages\n\t\tMIDI_NOTE_OFF           ,\n\t\tMIDI_NOTE_ON            ,\n\t\tMIDI_CONTROL_CHANGE     ,\n\t\tMIDI_PROGRAM_CHANGE     ,\n\t\tMIDI_PITCH_BEND         ,\n\t\tMIDI_AFTERTOUCH         ,\n\t\tMIDI_POLY_AFTERTOUCH    ,\n\t\t\n\t\t// system messages\n\t\tMIDI_SYSEX              ,\n\t\tMIDI_TIME_CODE          ,\n\t\tMIDI_SONG_POS_POINTER   ,\n\t\tMIDI_SONG_SELECT        ,\n\t\tMIDI_TUNE_REQUEST       ,\n\t\tMIDI_SYSEX_END          ,\n\t\tMIDI_TIME_CLOCK         ,\n\t\tMIDI_START              ,\n\t\tMIDI_CONTINUE           ,\n\t\tMIDI_STOP               ,\n\t\tMIDI_ACTIVE_SENSING     ,\n\t\tMIDI_SYSTEM_RESET       \n\t};\n\t\n\t\n\tMidiStatus status = self.status;\n\t\n\tint ary_size = sizeof(STATUS_IDS)/sizeof(STATUS_IDS[0]);\n\tfor(int i=0; i < ary_size; i++){\n\t\tif(status == STATUS_IDS[i]){\n\t\t\treturn i;\n\t\t}\n\t}\n\t\n\t\n\treturn -1; // return -1 on error\n}\n\nint ofxMidiMessage__get_channel(ofxMidiMessage self){\n\treturn self.channel;\n}\nint ofxMidiMessage__get_pitch(ofxMidiMessage self){\n\treturn self.pitch;\n}\nint ofxMidiMessage__get_velocity(ofxMidiMessage self){\n\treturn self.velocity;\n}\nint ofxMidiMessage__get_value(ofxMidiMessage self){\n\treturn self.value;\n}\n\ndouble ofxMidiMessage__get_deltatime(ofxMidiMessage self){\n\treturn self.deltatime;\n}\n\nint ofxMidiMessage__get_portNum(ofxMidiMessage self){\n\treturn self.portNum;\n}\nstd::string ofxMidiMessage__get_portName(ofxMidiMessage self){\n\treturn self.portName;\n}\n\n\nint ofxMidiMessage__get_num_bytes(ofxMidiMessage self){\n\treturn self.bytes.size();\n}\n\nunsigned char ofxMidiMessage__get_byte(ofxMidiMessage self, int i){\n\treturn self.bytes[i];\n}\n",
			"file": "ext/c_extension/callbacks.cpp",
			"file_size": 17005,
			"file_write_time": 132347613189675730,
			"settings":
			{
				"buffer_size": 17149,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/3d/of3dPrimitives.cpp",
			"settings":
			{
				"buffer_size": 39273,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/3d/of3dPrimitives.h",
			"settings":
			{
				"buffer_size": 15968,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/3d/ofNode.cpp",
			"settings":
			{
				"buffer_size": 19200,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/3d/ofNode.h",
			"settings":
			{
				"buffer_size": 20593,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofGLProgrammableRenderer.cpp",
			"settings":
			{
				"buffer_size": 88399,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofGLProgrammableRenderer.h",
			"settings":
			{
				"buffer_size": 12059,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 40007 files for \"ofloadmatrix\"\n\n/home/ravenskrag/Desktop/gem_structure/bin/projects/event_ordering/ext/addons_app/testApp/bin/testApp_debug:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/bin/projects/grapevine_midi/ext/addons_app/testApp/bin/testApp_debug:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/bin/projects/livecode2/ext/addons_app/testApp/bin/testApp_debug:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/bin/projects/youtube/ext/addons_app/testApp/bin/testApp_debug:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/oF_apps/testApp/bin/testApp_debug:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxImGui/example-demo/bin/example-demo:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/apps/projectGenerator/commandLine/bin/projectGenerator:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/CHANGELOG.md:\n 2275  / Android empty example inherits from ofxAndroidApp + adds android methods\n 2276  + auto register android touch events\n 2277: + ofMultMatrix(), ofLoadMatrix(), ofLoadIdentityMatrix()\n 2278  \n 2279  ---------------------------------------------------------------\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/graphics/ofGraphics.cpp:\n  339  \n  340  //----------------------------------------------------------\n  341: void ofLoadMatrix (const glm::mat4 & m){\n  342  \tofGetCurrentRenderer()->loadMatrix(m);\n  343  }\n  344  \n  345  //----------------------------------------------------------\n  346: void ofLoadMatrix (const float *m){\n  347  \tofGetCurrentRenderer()->loadMatrix(m);\n  348  }\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/graphics/ofGraphics.h:\n 1155  \n 1156  void ofLoadIdentityMatrix (void);\n 1157: void ofLoadMatrix (const glm::mat4 & m);   // Andreas: I've included both a mat and a float* version here,\n 1158: void ofLoadMatrix (const float *m);     // ideally we would always use mat4, but in a lot of temporary\n 1159  void ofMultMatrix (const glm::mat4 & m);  // mat objects when interacting with non-OF code\n 1160  void ofMultMatrix (const float *m);\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/projectGenerator-linux64/resources/app/app/projectGenerator:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.0/addons/ofxImGui/example-demo/bin/example-demo:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.0/apps/projectGenerator/commandLine/bin/projectGenerator:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.0/CHANGELOG.md:\n 1854  / Android empty example inherits from ofxAndroidApp + adds android methods\n 1855  + auto register android touch events\n 1856: + ofMultMatrix(), ofLoadMatrix(), ofLoadIdentityMatrix()\n 1857  \n 1858  ---------------------------------------------------------------\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.0/libs/openFrameworks/graphics/ofGraphics.cpp:\n  339  \n  340  //----------------------------------------------------------\n  341: void ofLoadMatrix (const glm::mat4 & m){\n  342  \tofGetCurrentRenderer()->loadMatrix(m);\n  343  }\n  344  \n  345  //----------------------------------------------------------\n  346: void ofLoadMatrix (const float *m){\n  347  \tofGetCurrentRenderer()->loadMatrix(m);\n  348  }\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.0/libs/openFrameworks/graphics/ofGraphics.h:\n 1155  \n 1156  void ofLoadIdentityMatrix (void);\n 1157: void ofLoadMatrix (const glm::mat4 & m);   // Andreas: I've included both a mat and a float* version here,\n 1158: void ofLoadMatrix (const float *m);     // ideally we would always use mat4, but in a lot of temporary\n 1159  void ofMultMatrix (const glm::mat4 & m);  // mat objects when interacting with non-OF code\n 1160  void ofMultMatrix (const float *m);\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/addons/ofxImGui/example-demo/bin/example-demo:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/apps/projectGenerator/commandLine/bin/projectGenerator:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/CHANGELOG.md:\n 2015  / Android empty example inherits from ofxAndroidApp + adds android methods\n 2016  + auto register android touch events\n 2017: + ofMultMatrix(), ofLoadMatrix(), ofLoadIdentityMatrix()\n 2018  \n 2019  ---------------------------------------------------------------\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/communication/firmataExample/bin/firmataExample:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/communication/firmataExample/bin/firmataExample_debug:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/communication/networkTcpClientExample/bin/networkTcpClientExample:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/communication/networkTcpClientExample/bin/networkTcpClientExample_debug:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/communication/networkTcpServerExample/bin/networkTcpServerExample:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/communication/networkTcpServerExample/bin/networkTcpServerExample_debug:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/communication/networkUdpReceiverExample/bin/networkUdpReceiverExample:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/communication/networkUdpReceiverExample/bin/networkUdpReceiverExample_debug:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/communication/networkUdpSenderExample/bin/networkUdpSenderExample:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/communication/networkUdpSenderExample/bin/networkUdpSenderExample_debug:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/communication/oscChatSystemExample/bin/oscChatSystemExample:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/communication/oscChatSystemExample/bin/oscChatSystemExample_debug:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/communication/oscReceiveExample/bin/oscReceiveExample:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/communication/oscReceiveExample/bin/oscReceiveExample_debug:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/communication/oscSenderExample/bin/oscSenderExample:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/communication/oscSenderExample/bin/oscSenderExample_debug:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/communication/serialExample/bin/serialExample:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/communication/serialExample/bin/serialExample_debug:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/computer_vision/kinectExample/bin/kinectExample:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/computer_vision/kinectExample/bin/kinectExample_debug:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/computer_vision/opencvExample/bin/opencvExample:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/computer_vision/opencvExample/bin/opencvExample_debug:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/computer_vision/opencvHaarFinderExample/bin/opencvHaarFinderExample:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/computer_vision/opencvHaarFinderExample/bin/opencvHaarFinderExample_debug:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/events/advancedEventsExample/bin/advancedEventsExample:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/events/advancedEventsExample/bin/advancedEventsExample_debug:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/events/allEventsExample/bin/allEventsExample:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/events/allEventsExample/bin/allEventsExample_debug:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/events/customEventExample/bin/customEventExample:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/events/customEventExample/bin/customEventExample_debug:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/events/simpleEventsExample/bin/simpleEventsExample:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/events/simpleEventsExample/bin/simpleEventsExample_debug:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/events/simpleTimerEventExample/bin/simpleTimerEventExample:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/events/simpleTimerEventExample/bin/simpleTimerEventExample_debug:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/graphics/blendingExample/bin/blendingExample:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/graphics/blendingExample/bin/blendingExample_debug:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/graphics/colorExample/bin/colorExample:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/graphics/colorExample/bin/colorExample_debug:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/graphics/colorsExtendedExample/bin/colorsExtendedExample:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/graphics/colorsExtendedExample/bin/colorsExtendedExample_debug:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/graphics/floatingPointImageExample/bin/floatingPointImageExample:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/graphics/floatingPointImageExample/bin/floatingPointImageExample_debug:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/graphics/fontsExample/bin/fontsExample:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/graphics/fontsExample/bin/fontsExample_debug:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/graphics/fontShapesExample/bin/fontShapesExample:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/graphics/fontShapesExample/bin/fontShapesExample_debug:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/graphics/graphicsExample/bin/graphicsExample:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/graphics/graphicsExample/bin/graphicsExample_debug:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/graphics/imageSubsectionExample/bin/imageSubsectionExample:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/graphics/imageSubsectionExample/bin/imageSubsectionExample_debug:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/graphics/lutFilterExample/bin/lutFilterExample:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/graphics/lutFilterExample/bin/lutFilterExample_debug:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/graphics/polygonExample/bin/polygonExample:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/graphics/polygonExample/bin/polygonExample_debug:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/graphics/polylineBlobsExample/bin/polylineBlobsExample:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/graphics/polylineBlobsExample/bin/polylineBlobsExample_debug:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/graphics/rectangleAlignmentAndScalingExample/bin/rectangleAlignmentAndScalingExample:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/graphics/rectangleAlignmentAndScalingExample/bin/rectangleAlignmentAndScalingExample_debug:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/graphics/simpleColorKeyExample/bin/simpleColorKeyExample:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/graphics/simpleColorKeyExample/bin/simpleColorKeyExample_debug:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/graphics/vectorGraphicsExample/bin/vectorGraphicsExample:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/graphics/vectorGraphicsExample/bin/vectorGraphicsExample_debug:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/examples/input_output/clipboardExample/bin/clipboardExample:\n    <binary>\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/libs/openFrameworks/graphics/ofGraphics.cpp:\n  339  \n  340  //----------------------------------------------------------\n  341: void ofLoadMatrix (const glm::mat4 & m){\n  342  \tofGetCurrentRenderer()->loadMatrix(m);\n  343  }\n  344  \n  345  //----------------------------------------------------------\n  346: void ofLoadMatrix (const float *m){\n  347  \tofGetCurrentRenderer()->loadMatrix(m);\n  348  }\n\n/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.1_nightly/libs/openFrameworks/graphics/ofGraphics.h:\n 1155  \n 1156  void ofLoadIdentityMatrix (void);\n 1157: void ofLoadMatrix (const glm::mat4 & m);   // Andreas: I've included both a mat and a float* version here,\n 1158: void ofLoadMatrix (const float *m);     // ideally we would always use mat4, but in a lot of temporary\n 1159  void ofMultMatrix (const glm::mat4 & m);  // mat objects when interacting with non-OF code\n 1160  void ofMultMatrix (const float *m);\n\n/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/Graphics.cpp:\n  265  \t\t\n  266  \t\t// .define_method(\n  267: \t\t// \t\"ofLoadMatrix\",\n  268: \t\t// \twrap_matrix_op(&ofLoadMatrix)\n  269  \t\t// )\n  270  \t\t.define_method(\n\n/home/ravenskrag/Desktop/gem_structure/vendor/OpenFrameworks/of_v0.10.0_linux64gcc6_release.tar.gz:\n    File too large, skipping\n\n/home/ravenskrag/Desktop/gem_structure/vendor/OpenFrameworks/of_v0.11.0_linux64gcc6_release.tar.gz:\n    File too large, skipping\n\n275 matches across 85 files\n",
			"settings":
			{
				"buffer_size": 15712,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/graphics/ofGraphics.h",
			"settings":
			{
				"buffer_size": 46238,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/graphics/ofGraphics.cpp",
			"settings":
			{
				"buffer_size": 42941,
				"line_ending": "Unix"
			}
		},
		{
			"file": "ext/c_extension/callbacks.h",
			"settings":
			{
				"buffer_size": 1213,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/ofx_extensions.rb",
			"settings":
			{
				"buffer_size": 2815,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/New Folder (2)/writing/003 research papers/2020.05.10 p3 a modern curses-like graphics interface/notes__ofTrueTypeFont_defaultShaderBinding.cpp",
			"settings":
			{
				"buffer_size": 6446,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "--",
			"settings":
			{
				"buffer_size": 2,
				"line_ending": "Unix",
				"name": "--"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/math/ofMath.cpp",
			"settings":
			{
				"buffer_size": 7496,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/math/ofMath.h",
			"settings":
			{
				"buffer_size": 24058,
				"line_ending": "Unix"
			}
		},
		{
			"file": "ext/c_extension/constants/data_path.h",
			"settings":
			{
				"buffer_size": 96,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/rubyOF.cpp",
			"settings":
			{
				"buffer_size": 10425,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/Graphics.cpp",
			"settings":
			{
				"buffer_size": 6814,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/Graphics.h",
			"settings":
			{
				"buffer_size": 136,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/GraphicsAdvanced.cpp",
			"settings":
			{
				"buffer_size": 9298,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/GraphicsAdvanced.h",
			"settings":
			{
				"buffer_size": 117,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/image.cpp",
			"settings":
			{
				"buffer_size": 4083,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/TrueTypeFont.cpp",
			"settings":
			{
				"buffer_size": 6950,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/true_type_font.rb",
			"settings":
			{
				"buffer_size": 6548,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/graphics/ofTrueTypeFont.cpp",
			"settings":
			{
				"buffer_size": 43969,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/graphics/ofTrueTypeFont.h",
			"settings":
			{
				"buffer_size": 15100,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/3d/ofMesh.h",
			"settings":
			{
				"buffer_size": 26765,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/3d/ofMesh.inl",
			"settings":
			{
				"buffer_size": 81004,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/launcher.cpp",
			"settings":
			{
				"buffer_size": 7868,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/launcher.h",
			"settings":
			{
				"buffer_size": 1155,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "--",
			"settings":
			{
				"buffer_size": 2,
				"line_ending": "Unix",
				"name": "--"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/shaders/phong.vert",
			"settings":
			{
				"buffer_size": 1129,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/shaders/phong.frag",
			"settings":
			{
				"buffer_size": 10309,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/windowing/multiWindowOneAppExample/src/main.cpp",
			"settings":
			{
				"buffer_size": 860,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/communication/serialExample/src/ofApp.cpp",
			"settings":
			{
				"buffer_size": 3616,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/communication/serialExample/src/ofApp.h",
			"settings":
			{
				"buffer_size": 974,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxMidi/midiOutputExample/src/ofApp.cpp",
			"settings":
			{
				"buffer_size": 6509,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxMidi/midiOutputExample/src/ofApp.h",
			"settings":
			{
				"buffer_size": 791,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxMidi/src/ofxMidiIn.cpp",
			"settings":
			{
				"buffer_size": 3188,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxMidi/src/ofxMidiIn.h",
			"settings":
			{
				"buffer_size": 3751,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxMidi/src/ofxMidiConstants.h",
			"settings":
			{
				"buffer_size": 2019,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxMidi/src/ofxMidiMessage.h",
			"settings":
			{
				"buffer_size": 2379,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxMidi/src/ofxMidiMessage.cpp",
			"settings":
			{
				"buffer_size": 4308,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxMidi/src/desktop/ofxRtMidiIn.cpp",
			"settings":
			{
				"buffer_size": 4695,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxMidi/src/ofxBaseMidi.h",
			"settings":
			{
				"buffer_size": 3692,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxMidi/src/ofxBaseMidi.cpp",
			"settings":
			{
				"buffer_size": 6953,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxMidi/src/ofxMidiOut.h",
			"settings":
			{
				"buffer_size": 5428,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxMidi/src/ofxMidiOut.cpp",
			"settings":
			{
				"buffer_size": 6300,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxMidi/src/ofxMidi.h",
			"settings":
			{
				"buffer_size": 1998,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.0/libs/openFrameworks/app/ofAppGlutWindow.cpp",
			"settings":
			{
				"buffer_size": 25246,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.0/libs/openFrameworks/app/ofAppGlutWindow.h",
			"settings":
			{
				"buffer_size": 2393,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/app/ofAppRunner.h",
			"settings":
			{
				"buffer_size": 4512,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/app/ofAppRunner.cpp",
			"settings":
			{
				"buffer_size": 14053,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/app/ofMainLoop.h",
			"settings":
			{
				"buffer_size": 1642,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/app/ofMainLoop.cpp",
			"settings":
			{
				"buffer_size": 11178,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 750.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"wrap",
				"Word Wrap: Toggle"
			],
			[
				"low",
				"Convert Case: Lower Case"
			],
			[
				"upper ",
				"Convert Case: Upper Case"
			],
			[
				"ruby",
				"Set Syntax: Ruby"
			],
			[
				"lower",
				"Convert Case: Lower Case"
			],
			[
				"disabl",
				"Package Control: Disable Package"
			],
			[
				"enable",
				"Package Control: Enable Package"
			],
			[
				"expor",
				"Export to HTML: Show Export Menu"
			],
			[
				"enable pack",
				"Package Control: Enable Package"
			],
			[
				"disab",
				"Package Control: Disable Package"
			],
			[
				"pagke li",
				"Package Control: List Packages"
			],
			[
				"packag list",
				"Package Control: List Packages"
			],
			[
				"package list",
				"Package Control: List Packages"
			],
			[
				"c++",
				"Set Syntax: C++"
			],
			[
				"syntax glsl",
				"Set Syntax: GLSL"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"rub",
				"Set Syntax: Ruby"
			],
			[
				"synt rub",
				"Set Syntax: Ruby"
			],
			[
				"auto",
				"Toggle AutoSave: current file only"
			],
			[
				"install pa",
				"Package Control: Install Package"
			],
			[
				"gig",
				"Git GUI Clients: Gitg"
			],
			[
				"make",
				"Set Syntax: Makefile"
			],
			[
				"sort",
				"Sort Lines"
			],
			[
				"yaml",
				"Set Syntax: YAML"
			],
			[
				"krake",
				"Git GUI Clients: GitKraken"
			],
			[
				"commit",
				"Git: Commit"
			],
			[
				"gitg",
				"Git GUI Clients: Gitg"
			],
			[
				"g",
				"Git GUI Clients: Gitg"
			],
			[
				"view as",
				"SublimeHighlight: view as HTML"
			],
			[
				"convert to html",
				"SublimeHighlight: convert to HTML"
			],
			[
				"convert",
				"SublimeHighlight: convert to RTF"
			],
			[
				"package insta",
				"Package Control: Install Package"
			],
			[
				"packge remove",
				"Package Control: Remove Package"
			],
			[
				"list ",
				"Package Control: List Packages"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"enable ",
				"Package Control: Enable Package"
			],
			[
				"disa",
				"Package Control: Disable Package"
			],
			[
				"add repo",
				"Package Control: Add Repository"
			],
			[
				"packgae",
				"Package Control: List Packages"
			],
			[
				"package",
				"Package Control: Disable Package"
			],
			[
				"html",
				"Set Syntax: HTML"
			],
			[
				"gitgui",
				"Git GUI Clients: Gitg"
			],
			[
				"makefil",
				"Set Syntax: Makefile"
			],
			[
				"ging",
				"Git GUI Clients: Gitg"
			],
			[
				"yam",
				"Set Syntax: YAML"
			],
			[
				"pacage",
				"Package Control: Enable Package"
			],
			[
				"amke",
				"Set Syntax: Makefile"
			],
			[
				"makefile",
				"Set Syntax: Makefile"
			],
			[
				"objec",
				"Set Syntax: Objective-C"
			],
			[
				"lua",
				"Set Syntax: Lua"
			],
			[
				"pyth",
				"Set Syntax: Python"
			],
			[
				"makef",
				"Set Syntax: Makefile"
			],
			[
				"packag",
				"Package Control: Install Package"
			],
			[
				"irb",
				"SublimeREPL: Ruby IRB (deprecated)"
			],
			[
				"ruby ",
				"SublimeREPL: Ruby"
			],
			[
				"python",
				"SublimeREPL: Python"
			],
			[
				"r oc",
				"SublimeREPL: Octave"
			],
			[
				"repl o",
				"SublimeREPL: Octave"
			],
			[
				"octav",
				"SublimeREPL: Octave"
			],
			[
				"repl ruby",
				"SublimeREPL: Ruby"
			],
			[
				"repl ru",
				"SublimeREPL: Ruby"
			],
			[
				"repl",
				"SublimeREPL: Octave"
			],
			[
				"repl rub",
				"SublimeREPL: Ruby"
			],
			[
				"repl j",
				"SublimeREPL: Clojure"
			],
			[
				"mal",
				"Set Syntax: MATLAB"
			],
			[
				"matl",
				"Set Syntax: MATLAB"
			],
			[
				"keyb",
				"Preferences: Key Bindings - User"
			],
			[
				"mat",
				"Set Syntax: MATLAB"
			],
			[
				"package en",
				"Package Control: Upgrade Package"
			],
			[
				"package dis",
				"Package Control: Disable Package"
			],
			[
				"matlab",
				"Set Syntax: MATLAB"
			],
			[
				"repl oca",
				"SublimeREPL: Octave"
			],
			[
				"repl octa",
				"SublimeREPL: Octave"
			],
			[
				"install p",
				"Package Control: Install Package"
			],
			[
				"package in",
				"Package Control: Install Package"
			],
			[
				"text",
				"Set Syntax: Plain Text"
			],
			[
				"mark",
				"Set Syntax: Markdown"
			],
			[
				"todo",
				"Show TODOs: Project and open files"
			],
			[
				"wra",
				"Word Wrap: Toggle"
			],
			[
				"pla",
				"Set Syntax: Plain Text"
			],
			[
				"pack",
				"Package Control: Disable Package"
			],
			[
				"tod",
				"Show TODOs: Project and open files"
			],
			[
				"to",
				"Show TODOs: Project and open files"
			],
			[
				"",
				"About"
			],
			[
				"pac",
				"Package Control: List Packages"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"log",
				"Git: Log Current File"
			],
			[
				"st",
				"Git: Status"
			],
			[
				"stat",
				"Git: Status"
			],
			[
				"pre",
				"Markdown Preview: preview in Browser"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"pr",
				"Markdown Preview: preview in Browser"
			],
			[
				"previe",
				"Markdown Preview: preview in Browser"
			],
			[
				"snipp",
				"Snippet: if … end"
			],
			[
				"snip",
				"Snippet: YAML.load(file)"
			],
			[
				"prefer",
				"Preferences: Settings - User"
			],
			[
				"key",
				"Preferences: Key Bindings - User"
			],
			[
				"vie",
				"Markdown Preview: preview in Browser"
			],
			[
				"pa",
				"Package Control: List Packages"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"reve",
				"File: Revert"
			],
			[
				"markdown",
				"Markdown Preview: preview in Sublime Text"
			],
			[
				"view",
				"Markdown Preview: preview in Browser"
			],
			[
				"prev",
				"Markdown Preview: preview in Browser"
			],
			[
				"smark",
				"Set Syntax: Markdown"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"brow",
				"Preferences: Browse Packages"
			],
			[
				"bro",
				"Preferences: Browse Packages"
			],
			[
				"git pu",
				"Git: Push"
			],
			[
				"fet",
				"Git: Fetch"
			],
			[
				"com",
				"Git: Commit"
			],
			[
				"add",
				"Git: Add Current File"
			],
			[
				"syntax te",
				"Set Syntax: Textile"
			],
			[
				"lo",
				"Git: Log All"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"oto",
				"Show TODOs: Open files only"
			],
			[
				"show",
				"Show TODOs: Project and open files"
			],
			[
				"list",
				"Package Control: List Packages"
			],
			[
				"pcaka",
				"Package Control: Install Package"
			],
			[
				"pcak",
				"Package Control: Discover Packages"
			],
			[
				"anno",
				"Git: Toggle Annotations"
			]
		],
		"width": 1062.0
	},
	"console":
	{
		"height": 259.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/ravenskrag/Desktop/gem_structure",
		"/home/ravenskrag/Desktop/gem_structure/bin",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/grapevine_midi",
		"/home/ravenskrag/Desktop/gem_structure/ext",
		"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF"
	],
	"file_history":
	[
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/grapevine_midi/lib/scheduler.rb",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/graphics/ofPixels.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/graphics/ofPixels.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/types/ofColor.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/types/ofColor.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxGui/src/ofxPanel.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxGui/src/ofxPanel.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxGui/src/ofxGuiGroup.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxGui/src/ofxGuiGroup.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxGui/src/ofxBaseGui.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxGui/src/ofxBaseGui.h",
		"/home/ravenskrag/Desktop/gem_structure/lib/rubyOF.rb",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/grapevine_midi/lib/live_code_GLSL.rb",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/event_ordering/ext/c_extension/app.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxGui/src/ofxColorPicker.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxGui/src/ofxColorPicker.cpp",
		"/home/ravenskrag/.config/sublime-text-3/Packages/User/SublimeHighlight.sublime-settings",
		"/home/ravenskrag/.config/sublime-text-3/Packages/Highlight/SublimeHighlight.sublime-settings",
		"/home/ravenskrag/.config/sublime-text-3/Packages/auto-save/README.md",
		"/home/ravenskrag/.config/sublime-text-3/Packages/Highlight/README.md",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/boost/include/boost/container/allocator_traits.hpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/graphics/ofTrueTypeFont.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/graphics/ofTrueTypeFont.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/3d/ofMesh.inl",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/3d/ofMesh.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/graphics/ofGraphics.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofGLProgrammableRenderer.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofGLProgrammableRenderer.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/graphics/ofGraphics.h",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/grapevine_midi/lib/nonblocking_error_output.rb",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/grapevine_midi/lib/live_code.rb",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/livecode2/lib/live_code_loader.rb",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/database/ext/callbacks/callbacks.cpp",
		"/home/ravenskrag/Desktop/gem_structure/cpp_filt_buffer.txt",
		"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/Mesh.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofShader.cpp",
		"/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/version.rb",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/livecode2/lib/view_visualize_controller.rb",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/grapevine_midi/bin/data/char_display.frag",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/grapevine_midi/bin/data/char_display.vert",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/3d/3DPrimitivesExample/src/ofApp.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/app/ofAppGLFWWindow.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofTexture.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofGLUtils.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofGLBaseTypes.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofVboMesh.cpp",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/grapevine_midi/ext/c_extension/callbacks.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/app/ofMainLoop.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/app/ofMainLoop.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/app/ofAppRunner.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/app/ofAppRunner.cpp",
		"/home/ravenskrag/Desktop/gem_structure/vendor/apothecary/apothecary/formulas/tess2/Makefile",
		"/home/ravenskrag/Desktop/gem_structure/.gitignore",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/events/simpleTimerEventExample/src/ofApp.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/events/ofEvents.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/communication/serialExample/src/ofApp.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/utils/ofUtils.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/rubyOF.cpp",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/grapevine_midi/ext/c_extension/app.h",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/grapevine_midi/ext/addons_app/testApp/src/main.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/utils/ofLog.h",
		"/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/window.rb",
		"/home/ravenskrag/Desktop/gem_structure/ext/New Folder/of_v0.11.0_linux64gcc6_release/INSTALL.md",
		"/home/ravenskrag/Desktop/gem_structure/ext/New Folder/of_v0.11.0_linux64gcc6_release/scripts/linux/compileOF.sh",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/livecode2/ext/addons_app/testApp/src/main.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/windowing/multiWindowOneAppExample/src/ofApp.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/windowing/multiWindowOneAppExample/src/main.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/events/allEventsExample/allEventsExample.qbs",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/hunspell/ext/callbacks/callbacks.cpp",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/boilerplate/ext/window/constants/data_path.h",
		"/home/ravenskrag/Desktop/gem_structure/bin/main.rb",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/grapevine_midi/config/build_variables.rb",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/grapevine_midi/imgui.ini",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/grapevine_midi/bin/data/output.log",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/grapevine_midi/bin/data/history.log",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/grapevine_midi/bin/data/data.yml",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/grapevine_midi/lib/main.rb",
		"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/rubyOF.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofShader.h",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/sketch/lib/repl.rb",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/youtube/lib/live/loader/loader.rb",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/youtube/lib/window.rb",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/events/ofEvents.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/input_output/dragDropExample/src/ofApp.cpp",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/sketch/lib/live_coding/inspection_mixin.rb",
		"/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/point.rb",
		"/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/true_type_font.rb",
		"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/TrueTypeFont.cpp",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/livecode2/lib/window.rb",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxMidi/src/desktop/ofxRtMidiIn.h",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/grapevine_midi/lib/input_handler.rb",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/grapevine_midi/lib/sequence_memory.rb",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxMidi/src/ofxMidiMessage.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/glm/include/glm/detail/type_vec2.hpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/glm/include/glm/vec2.hpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/Graphics.cpp",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/grapevine_midi/bin/data/window_geometry.yaml",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/round_tripping/lib/window.rb",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/round_tripping/lib/main.rb",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/round_tripping/ext/window/app.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/Fbo.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofFbo.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/Fbo.h",
		"/home/ravenskrag/Desktop/gem_structure/build/window_guard.rb",
		"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/launcher.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/launcher.cpp",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/grapevine_midi/ext/c_extension/app_factory.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/app_factory.h",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/round_tripping/ext/callbacks/callbacks.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/ofMain.h",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/grapevine_midi/ext/c_extension/extconf_variables.yaml",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/events/simpleEventsExample/src/ofApp.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/events/simpleEventsExample/src/Circle.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/events/simpleEventsExample/src/Circle.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/events/simpleEventsExample/simpleEventsExample.qbs",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/events/ofEvent.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/events/ofEventUtils.h",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/grapevine_midi/ext/addons_app/testApp/src/ofApp.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/app/ofBaseApp.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/app/ofBaseApp.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.0/libs/openFrameworks/events/ofEvent.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.0/examples/windowing/noWindowExample/noWindowExample.qbs",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxMidi/midiInputExample/addons.make",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxMidi/midiInputExample/src/ofApp.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxMidi/midiInputExample/src/ofApp.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxMidi/src/ofxMidi.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxMidi/src/ofxMidiOut.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxMidi/src/ofxMidiIn.h"
	],
	"find":
	{
		"height": 104.0
	},
	"find_in_files":
	{
		"height": 264.0,
		"where_history":
		[
			"/home/ravenskrag/Desktop/gem_structure/",
			"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF",
			"",
			"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF,/home/ravenskrag/Desktop/gem_structure/bin/projects/grapevine_midi",
			"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF",
			"",
			"*.rb",
			"",
			"/home/ravenskrag/Desktop/gem_structure/,*.cpp",
			"/home/ravenskrag/Desktop/gem_structure/",
			"/home/ravenskrag/Desktop/gem_structure/,*.rb",
			"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/",
			"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons",
			"",
			"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF",
			"/home/ravenskrag/Desktop/gem_structure,.*cpp",
			"/home/ravenskrag/Desktop/gem_structure,*.rb",
			"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks",
			"/home/ravenskrag/Desktop/gem_structure/bin/,*.rb",
			"/home/ravenskrag/Desktop/gem_structure/bin/**/*.rb",
			"/home/ravenskrag/Desktop/gem_structure/bin",
			"/home/ravenskrag/Desktop/gem_structure/run",
			"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"ofmap",
			"vertices",
			"verti",
			"stringquads",
			"text_mesh",
			"print",
			"align_display_bg",
			"array",
			"setcolor_",
			"setColor_fg",
			"setcolor",
			"dt",
			"getBgColorPixels",
			"display.flush",
			"max_bar_length_chars",
			"max_time_budget",
			"subdivisions_per_bar",
			"test 7",
			"@section_count",
			"=>",
			"window_size",
			"history_size",
			"reload",
			"@update_scheduler.",
			"timepoints_per_log",
			"log_length",
			"@update_scheduler =",
			"@update_schedule",
			"end_of_first_loop",
			"idx_most_recent_full_cycle",
			"scheduler =",
			"scheduler",
			"draw_durations",
			"history_size",
			"bar_graph",
			"bar_graph =",
			"bar_graph",
			"time_budget_ms",
			"budgets",
			" ",
			"test7_once",
			"=>",
			"], ",
			", ",
			"[[",
			"], ",
			"DEBUG",
			"@display",
			"log",
			"Scheduler_v2",
			"ofloadmatrix",
			"matrix",
			"matri",
			"msec",
			"ofback",
			"ofLoadMatrix",
			"node",
			"move",
			"shader->",
			"alias",
			"int",
			"draw",
			".",
			"offset",
			"ofShader_bindUniforms",
			"bgMesh_draw",
			"fgText_getTexture",
			"shader.",
			"shader",
			"Shader",
			"shader",
			"#",
			"@text_mesh",
			"@text_meshc",
			"text_mesh",
			"@draw_scheduler",
			"scheduler.",
			"scheduler.section",
			"scheduler.",
			"ofBackground",
			"of",
			"auto",
			"background",
			"clear",
			"bgmesh_draw",
			"exit",
			"bgMesh_draw",
			"windowLoop",
			"ofMainLoop",
			"mainLoop()",
			"mainloop(",
			"mainloop",
			"ofRunMainLoop",
			"ofrunmai",
			"ofRunApp",
			"@first_draw",
			"@debug",
			"test 1",
			"--> start update",
			"draw duration: ",
			"<-- end update",
			"[\"",
			"running update",
			"<-- end update",
			"[\"",
			"test 1",
			"running update",
			"[\"",
			"<-- end update\ndraw durat",
			"\n<-- end update",
			"[\"",
			"running update",
			"[\"test 1\", 16000]",
			"--> start update",
			"<-- end update",
			"[\"test 1\", 16000]",
			"--> start update\n[\"test 1\", 16000]",
			"--> start update",
			"[\"test 1\", 16000]",
			"scheduler.",
			"draw duration",
			" (+ ",
			"duration",
			" (+ ",
			";\n\n+",
			"(+ ",
			"\", ",
			"16000]"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"o",
			" "
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 10,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/home/ravenskrag/Desktop/gem_structure/Gemfile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1036,
						"regions":
						{
						},
						"selection":
						[
							[
								796,
								796
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 59,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Gemfile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 291,
						"regions":
						{
						},
						"selection":
						[
							[
								261,
								261
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										260,
										261
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/single_quote.png",
										"region.greenish"
									]
								},
								"open":
								{
									"1":
									[
										250,
										251
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "ext/addons_app/addons.make",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 34,
						"regions":
						{
						},
						"selection":
						[
							[
								34,
								34
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Makefile/Makefile.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 69,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/home/ravenskrag/Desktop/gem_structure/common.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4704,
						"regions":
						{
						},
						"selection":
						[
							[
								1132,
								1132
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 960.0,
						"zoom_level": 1.0
					},
					"stack_index": 49,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/button_event_codes.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2340,
						"regions":
						{
						},
						"selection":
						[
							[
								870,
								870
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 46,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/home/ravenskrag/Desktop/gem_structure/Rakefile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 29603,
						"regions":
						{
						},
						"selection":
						[
							[
								141,
								141
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										140,
										141
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/single_quote.png",
										"region.greenish"
									]
								},
								"open":
								{
									"1":
									[
										131,
										132
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 14.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/home/ravenskrag/Desktop/gem_structure/build/build.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3792,
						"regions":
						{
						},
						"selection":
						[
							[
								3168,
								3168
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										3767,
										3770
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/dot.png",
										"region.yellowish brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										2890,
										2892
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2766.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 7,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2,
						"regions":
						{
						},
						"selection":
						[
							[
								2,
								2
							]
						],
						"settings":
						{
							"auto_name": "--",
							"bracket_highlighter.busy": false,
							"rainbowth.lispy": false,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 50,
					"type": "text"
				},
				{
					"buffer": 8,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 732,
						"regions":
						{
						},
						"selection":
						[
							[
								732,
								732
							]
						],
						"settings":
						{
							"auto_name": "TODO: gc hits are bad. need to optizime char displ",
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "lib/window.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3899,
						"regions":
						{
						},
						"selection":
						[
							[
								1425,
								1425
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										3895,
										3898
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/dot.png",
										"region.yellowish brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										555,
										560
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2295.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "lib/core.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 38813,
						"regions":
						{
						},
						"selection":
						[
							[
								32540,
								32540
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
									"1":
									[
										32558,
										32561
									]
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 29175.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "lib/scheduler.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4888,
						"regions":
						{
						},
						"selection":
						[
							[
								4424,
								4424
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										4487,
										4490
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/dot.png",
										"region.yellowish brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										4195,
										4197
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 23.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 12,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2,
						"regions":
						{
						},
						"selection":
						[
							[
								2,
								2
							]
						],
						"settings":
						{
							"auto_name": "--",
							"bracket_highlighter.busy": false,
							"rainbowth.lispy": false,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 22,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "lib/char_mapped_display.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7895,
						"regions":
						{
						},
						"selection":
						[
							[
								5325,
								5325
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										5396,
										5399
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/dot.png",
										"region.yellowish brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										5195,
										5197
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6179.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "lib/live_code.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4983,
						"regions":
						{
						},
						"selection":
						[
							[
								695,
								695
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										4977,
										4980
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/dot.png",
										"region.yellowish brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										328,
										333
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 23,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "lib/looper_pedal.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3408,
						"regions":
						{
						},
						"selection":
						[
							[
								1286,
								1286
							]
						],
						"settings":
						{
							"annotation_comments":
							{
								"annotations":
								{
								},
								"count": 0
							},
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1329,
										1332
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/dot.png",
										"region.yellowish brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										1208,
										1211
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "lib/helpers.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2830,
						"regions":
						{
						},
						"selection":
						[
							[
								2341,
								2341
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										2683,
										2686
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/dot.png",
										"region.yellowish brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										2311,
										2314
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 96.0,
						"zoom_level": 1.0
					},
					"stack_index": 36,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "ext/c_extension/app.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2285,
						"regions":
						{
						},
						"selection":
						[
							[
								1773,
								1773
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										2282,
										2283
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										487,
										488
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1431.0,
						"zoom_level": 1.0
					},
					"stack_index": 34,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "ext/c_extension/app.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15979,
						"regions":
						{
						},
						"selection":
						[
							[
								618,
								618
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
									"1":
									[
										441,
										442
									]
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 99.0,
						"zoom_level": 1.0
					},
					"stack_index": 28,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "ext/c_extension/callbacks.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17149,
						"regions":
						{
						},
						"selection":
						[
							[
								2234,
								2234
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										2236,
										2237
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										2230,
										2231
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax",
							"tab_size": 3,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 960.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/3d/of3dPrimitives.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 39273,
						"regions":
						{
						},
						"selection":
						[
							[
								7712,
								7712
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										7725,
										7726
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										7712,
										7713
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/sublime-languages/Better C++/CCpp.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 7555.0,
						"zoom_level": 1.0
					},
					"stack_index": 24,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/3d/of3dPrimitives.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15968,
						"regions":
						{
						},
						"selection":
						[
							[
								527,
								527
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1974,
										1975
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										208,
										209
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/sublime-languages/Better C++/CCpp.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 32,
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/3d/ofNode.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19200,
						"regions":
						{
						},
						"selection":
						[
							[
								18657,
								18657
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										18656,
										18657
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										18501,
										18502
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/sublime-languages/Better C++/CCpp.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 21187.0,
						"zoom_level": 1.0
					},
					"stack_index": 30,
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/3d/ofNode.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 20593,
						"regions":
						{
						},
						"selection":
						[
							[
								18291,
								18291
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
									"1":
									[
										20590,
										20591
									]
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/sublime-languages/Better C++/CCpp.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 15415.0,
						"zoom_level": 1.0
					},
					"stack_index": 31,
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofGLProgrammableRenderer.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 88399,
						"regions":
						{
						},
						"selection":
						[
							[
								60908,
								60908
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/sublime-languages/Better C++/CCpp.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 57847.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofGLProgrammableRenderer.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12059,
						"regions":
						{
						},
						"selection":
						[
							[
								4692,
								4692
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										4693,
										4694
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										4692,
										4693
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/sublime-languages/Better C++/CCpp.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3159.0,
						"zoom_level": 1.0
					},
					"stack_index": 27,
					"type": "text"
				},
				{
					"buffer": 26,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15712,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										1084,
										1096
									],
									[
										1394,
										1406
									],
									[
										1574,
										1586
									],
									[
										1824,
										1836
									],
									[
										1938,
										1950
									],
									[
										2799,
										2811
									],
									[
										3115,
										3127
									],
									[
										3295,
										3307
									],
									[
										3551,
										3563
									],
									[
										3665,
										3677
									],
									[
										4417,
										4429
									],
									[
										14412,
										14424
									],
									[
										14592,
										14604
									],
									[
										14856,
										14868
									],
									[
										14970,
										14982
									],
									[
										15326,
										15338
									],
									[
										15370,
										15382
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								1680,
								1680
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 1,
							"rainbowth.lispy": false,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 995.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/graphics/ofGraphics.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 46238,
						"regions":
						{
						},
						"selection":
						[
							[
								41166,
								41166
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/sublime-languages/Better C++/CCpp.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 39639.0,
						"zoom_level": 1.0
					},
					"stack_index": 26,
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/graphics/ofGraphics.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 42941,
						"regions":
						{
						},
						"selection":
						[
							[
								10174,
								10174
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/sublime-languages/Better C++/CCpp.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 10423.0,
						"zoom_level": 1.0
					},
					"stack_index": 25,
					"type": "text"
				},
				{
					"buffer": 29,
					"file": "ext/c_extension/callbacks.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1213,
						"regions":
						{
						},
						"selection":
						[
							[
								569,
								569
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/sublime-languages/Better C++/CCpp.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 29,
					"type": "text"
				},
				{
					"buffer": 30,
					"file": "lib/ofx_extensions.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2815,
						"regions":
						{
						},
						"selection":
						[
							[
								974,
								974
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1867,
										1870
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/dot.png",
										"region.yellowish brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										359,
										364
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 35,
					"type": "text"
				},
				{
					"buffer": 31,
					"file": "/home/ravenskrag/Desktop/New Folder (2)/writing/003 research papers/2020.05.10 p3 a modern curses-like graphics interface/notes__ofTrueTypeFont_defaultShaderBinding.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6446,
						"regions":
						{
						},
						"selection":
						[
							[
								69,
								69
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 58,
					"type": "text"
				},
				{
					"buffer": 32,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2,
						"regions":
						{
						},
						"selection":
						[
							[
								2,
								2
							]
						],
						"settings":
						{
							"auto_name": "--",
							"bracket_highlighter.busy": false,
							"rainbowth.lispy": false,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 65,
					"type": "text"
				},
				{
					"buffer": 33,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/math/ofMath.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7496,
						"regions":
						{
						},
						"selection":
						[
							[
								2212,
								2212
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										2212,
										2213
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										2122,
										2123
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/sublime-languages/Better C++/CCpp.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2208.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 34,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/math/ofMath.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 24058,
						"regions":
						{
						},
						"selection":
						[
							[
								6810,
								6810
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/sublime-languages/Better C++/CCpp.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5303.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 35,
					"file": "ext/c_extension/constants/data_path.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 96,
						"regions":
						{
						},
						"selection":
						[
							[
								96,
								96
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 66,
					"type": "text"
				},
				{
					"buffer": 36,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/rubyOF.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10425,
						"regions":
						{
						},
						"selection":
						[
							[
								9696,
								9696
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
									"1":
									[
										9695,
										9696
									]
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 6071.0,
						"zoom_level": 1.0
					},
					"stack_index": 33,
					"type": "text"
				},
				{
					"buffer": 37,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/Graphics.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6814,
						"regions":
						{
						},
						"selection":
						[
							[
								3762,
								3762
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										3762,
										3763
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										3740,
										3741
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 23.0,
						"zoom_level": 1.0
					},
					"stack_index": 47,
					"type": "text"
				},
				{
					"buffer": 38,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/Graphics.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 136,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/sublime-languages/Better C++/CCpp.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 48,
					"type": "text"
				},
				{
					"buffer": 39,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/GraphicsAdvanced.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9298,
						"regions":
						{
						},
						"selection":
						[
							[
								6301,
								6301
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5367.0,
						"zoom_level": 1.0
					},
					"stack_index": 53,
					"type": "text"
				},
				{
					"buffer": 40,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/GraphicsAdvanced.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 117,
						"regions":
						{
						},
						"selection":
						[
							[
								51,
								51
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										50,
										51
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/double_quote.png",
										"region.greenish"
									]
								},
								"open":
								{
									"1":
									[
										43,
										44
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 54,
					"type": "text"
				},
				{
					"buffer": 41,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/image.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4083,
						"regions":
						{
						},
						"selection":
						[
							[
								3191,
								3191
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										4079,
										4080
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										1594,
										1595
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3970.0,
						"zoom_level": 1.0
					},
					"stack_index": 51,
					"type": "text"
				},
				{
					"buffer": 42,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/TrueTypeFont.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6950,
						"regions":
						{
						},
						"selection":
						[
							[
								4982,
								4982
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										6473,
										6474
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										3364,
										3365
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4826.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"type": "text"
				},
				{
					"buffer": 43,
					"file": "/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/true_type_font.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6548,
						"regions":
						{
						},
						"selection":
						[
							[
								5108,
								5108
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										5177,
										5180
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/dot.png",
										"region.yellowish brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										5041,
										5044
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4547.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"type": "text"
				},
				{
					"buffer": 44,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/graphics/ofTrueTypeFont.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 43969,
						"regions":
						{
						},
						"selection":
						[
							[
								6010,
								6010
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/sublime-languages/Better C++/CCpp.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4440.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 45,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/graphics/ofTrueTypeFont.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15100,
						"regions":
						{
						},
						"selection":
						[
							[
								6529,
								6529
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
									"1":
									[
										4789,
										4790
									]
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/sublime-languages/Better C++/CCpp.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2688.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 46,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/3d/ofMesh.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 26765,
						"regions":
						{
						},
						"selection":
						[
							[
								24396,
								24396
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
									"1":
									[
										24913,
										24914
									]
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/sublime-languages/Better C++/CCpp.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 20640.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 47,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/3d/ofMesh.inl",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 81004,
						"regions":
						{
						},
						"selection":
						[
							[
								3848,
								3848
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										3915,
										3916
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										3845,
										3846
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/sublime-languages/Better C++/CCpp.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5155.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 48,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/launcher.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7868,
						"regions":
						{
						},
						"selection":
						[
							[
								2417,
								2417
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
									"1":
									[
										237,
										238
									]
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2.0,
						"zoom_level": 1.0
					},
					"stack_index": 61,
					"type": "text"
				},
				{
					"buffer": 49,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/launcher.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1155,
						"regions":
						{
						},
						"selection":
						[
							[
								335,
								335
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1151,
										1152
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										206,
										207
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 68,
					"type": "text"
				},
				{
					"buffer": 50,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2,
						"regions":
						{
						},
						"selection":
						[
							[
								2,
								2
							]
						],
						"settings":
						{
							"auto_name": "--",
							"bracket_highlighter.busy": false,
							"rainbowth.lispy": false,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 67,
					"type": "text"
				},
				{
					"buffer": 51,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/shaders/phong.vert",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1129,
						"regions":
						{
						},
						"selection":
						[
							[
								559,
								559
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1125,
										1126
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										37,
										38
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/OpenGL Shading Language (GLSL)/GLSL.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 63,
					"type": "text"
				},
				{
					"buffer": 52,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/shaders/phong.frag",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10309,
						"regions":
						{
						},
						"selection":
						[
							[
								9297,
								9297
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										9297,
										9298
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										9225,
										9226
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/OpenGL Shading Language (GLSL)/GLSL.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5088.0,
						"zoom_level": 1.0
					},
					"stack_index": 64,
					"type": "text"
				},
				{
					"buffer": 53,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/windowing/multiWindowOneAppExample/src/main.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 860,
						"regions":
						{
						},
						"selection":
						[
							[
								816,
								816
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										836,
										837
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										816,
										817
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 44,
					"type": "text"
				},
				{
					"buffer": 54,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/communication/serialExample/src/ofApp.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3616,
						"regions":
						{
						},
						"selection":
						[
							[
								1256,
								1256
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1843,
										1844
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										972,
										973
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 55,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/communication/serialExample/src/ofApp.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 974,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/sublime-languages/Better C++/CCpp.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 56,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxMidi/midiOutputExample/src/ofApp.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6509,
						"regions":
						{
						},
						"selection":
						[
							[
								743,
								743
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										850,
										851
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										409,
										410
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 45,
					"type": "text"
				},
				{
					"buffer": 57,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxMidi/midiOutputExample/src/ofApp.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 791,
						"regions":
						{
						},
						"selection":
						[
							[
								490,
								490
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										788,
										789
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										391,
										392
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 62,
					"type": "text"
				},
				{
					"buffer": 58,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxMidi/src/ofxMidiIn.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3188,
						"regions":
						{
						},
						"selection":
						[
							[
								2683,
								2683
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1752.0,
						"zoom_level": 1.0
					},
					"stack_index": 74,
					"type": "text"
				},
				{
					"buffer": 59,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxMidi/src/ofxMidiIn.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3751,
						"regions":
						{
						},
						"selection":
						[
							[
								3746,
								3746
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										3748,
										3749
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										1251,
										1252
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3.0,
						"zoom_level": 1.0
					},
					"stack_index": 60,
					"type": "text"
				},
				{
					"buffer": 60,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxMidi/src/ofxMidiConstants.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2019,
						"regions":
						{
						},
						"selection":
						[
							[
								1121,
								1121
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1873,
										1874
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										1052,
										1053
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 576.0,
						"zoom_level": 1.0
					},
					"stack_index": 56,
					"type": "text"
				},
				{
					"buffer": 61,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxMidi/src/ofxMidiMessage.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2379,
						"regions":
						{
						},
						"selection":
						[
							[
								1079,
								1079
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										2329,
										2330
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										1032,
										1033
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 288.0,
						"zoom_level": 1.0
					},
					"stack_index": 52,
					"type": "text"
				},
				{
					"buffer": 62,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxMidi/src/ofxMidiMessage.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4308,
						"regions":
						{
						},
						"selection":
						[
							[
								2145,
								2145
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										2589,
										2590
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										1976,
										1977
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/sublime-languages/Better C++/CCpp.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1702.0,
						"zoom_level": 1.0
					},
					"stack_index": 55,
					"type": "text"
				},
				{
					"buffer": 63,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxMidi/src/desktop/ofxRtMidiIn.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4695,
						"regions":
						{
						},
						"selection":
						[
							[
								4042,
								4042
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3594.0,
						"zoom_level": 1.0
					},
					"stack_index": 70,
					"type": "text"
				},
				{
					"buffer": 64,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxMidi/src/ofxBaseMidi.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3692,
						"regions":
						{
						},
						"selection":
						[
							[
								1426,
								1426
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1480,
										1481
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										1426,
										1427
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 866.0,
						"zoom_level": 1.0
					},
					"stack_index": 71,
					"type": "text"
				},
				{
					"buffer": 65,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxMidi/src/ofxBaseMidi.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6953,
						"regions":
						{
						},
						"selection":
						[
							[
								2022,
								2022
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										2076,
										2077
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										2022,
										2023
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1794.0,
						"zoom_level": 1.0
					},
					"stack_index": 73,
					"type": "text"
				},
				{
					"buffer": 66,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxMidi/src/ofxMidiOut.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5428,
						"regions":
						{
						},
						"selection":
						[
							[
								573,
								573
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 72,
					"type": "text"
				},
				{
					"buffer": 67,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxMidi/src/ofxMidiOut.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6300,
						"regions":
						{
						},
						"selection":
						[
							[
								2780,
								2780
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2786.0,
						"zoom_level": 1.0
					},
					"stack_index": 57,
					"type": "text"
				},
				{
					"buffer": 68,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxMidi/src/ofxMidi.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1998,
						"regions":
						{
						},
						"selection":
						[
							[
								507,
								507
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										879,
										880
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										505,
										506
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 39,
					"type": "text"
				},
				{
					"buffer": 69,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.0/libs/openFrameworks/app/ofAppGlutWindow.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 25246,
						"regions":
						{
						},
						"selection":
						[
							[
								11340,
								11340
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										11339,
										11340
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										11249,
										11250
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/sublime-languages/Better C++/CCpp.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 12515.0,
						"zoom_level": 1.0
					},
					"stack_index": 38,
					"type": "text"
				},
				{
					"buffer": 70,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks_v10.0/libs/openFrameworks/app/ofAppGlutWindow.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2393,
						"regions":
						{
						},
						"selection":
						[
							[
								1373,
								1373
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										2389,
										2390
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										223,
										224
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/sublime-languages/Better C++/CCpp.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 480.0,
						"zoom_level": 1.0
					},
					"stack_index": 37,
					"type": "text"
				},
				{
					"buffer": 71,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/app/ofAppRunner.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4512,
						"regions":
						{
						},
						"selection":
						[
							[
								836,
								836
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										836,
										837
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										835,
										836
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/sublime-languages/Better C++/CCpp.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 43,
					"type": "text"
				},
				{
					"buffer": 72,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/app/ofAppRunner.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14053,
						"regions":
						{
						},
						"selection":
						[
							[
								1434,
								1434
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										2595,
										2596
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										1407,
										1408
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/sublime-languages/Better C++/CCpp.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 919.0,
						"zoom_level": 1.0
					},
					"stack_index": 42,
					"type": "text"
				},
				{
					"buffer": 73,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/app/ofMainLoop.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1642,
						"regions":
						{
						},
						"selection":
						[
							[
								599,
								599
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										611,
										612
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										580,
										581
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/sublime-languages/Better C++/CCpp.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 480.0,
						"zoom_level": 1.0
					},
					"stack_index": 41,
					"type": "text"
				},
				{
					"buffer": 74,
					"file": "/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/app/ofMainLoop.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11178,
						"regions":
						{
						},
						"selection":
						[
							[
								5834,
								5834
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/sublime-languages/Better C++/CCpp.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4855.0,
						"zoom_level": 1.0
					},
					"stack_index": 40,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 49.0
	},
	"input":
	{
		"height": 67.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 323.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 96.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "qbs debug",
	"project": "grapevine synth interop project.sublime-project",
	"replace":
	{
		"height": 90.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"ofmath",
				"ext/openFrameworks/libs/openFrameworks/math/ofMath.cpp"
			],
			[
				"call",
				"bin/projects/grapevine_midi/ext/c_extension/callbacks.cpp"
			],
			[
				"ofmesh",
				"ext/openFrameworks/libs/openFrameworks/3d/ofMesh.h"
			],
			[
				"oftruety",
				"ext/openFrameworks/libs/openFrameworks/graphics/ofTrueTypeFont.cpp"
			],
			[
				"oftruet",
				"ext/openFrameworks/libs/openFrameworks/graphics/ofTrueTypeFont.cpp"
			],
			[
				"schedul",
				"bin/projects/grapevine_midi/lib/scheduler.rb"
			],
			[
				"gl program rende",
				"ext/openFrameworks/libs/openFrameworks/gl/ofGLProgrammableRenderer.cpp"
			],
			[
				"ofnode",
				"ext/openFrameworks/libs/openFrameworks/3d/ofNode.cpp"
			],
			[
				"of3dprimi",
				"ext/openFrameworks/libs/openFrameworks/3d/of3dPrimitives.cpp"
			],
			[
				"of program rend",
				"ext/openFrameworks/libs/openFrameworks/gl/ofGLProgrammableRenderer.cpp"
			],
			[
				"",
				"untitled"
			],
			[
				"ofxbasegui",
				"ext/openFrameworks/addons/ofxGui/src/ofxBaseGui.cpp"
			],
			[
				"ofxguigrou",
				"ext/openFrameworks/addons/ofxGui/src/ofxGuiGroup.cpp"
			],
			[
				"ofxpanel",
				"ext/openFrameworks/addons/ofxGui/src/ofxPanel.cpp"
			],
			[
				"ofwindow",
				"ext/openFrameworks_v10.0/libs/openFrameworks/app/ofAppGlutWindow.cpp"
			],
			[
				"ofcolor",
				"ext/openFrameworks/libs/openFrameworks/types/ofColor.cpp"
			],
			[
				"ofpix",
				"ext/openFrameworks/libs/openFrameworks/graphics/ofPixels.cpp"
			],
			[
				"live",
				"bin/projects/grapevine_midi/lib/live_code.rb"
			],
			[
				"program render",
				"ext/openFrameworks/libs/openFrameworks/gl/ofGLProgrammableRenderer.cpp"
			],
			[
				"build",
				"build/build.rb"
			],
			[
				"gemfile",
				"Gemfile"
			],
			[
				"truetypefont.rb",
				"lib/rubyOF/true_type_font.rb"
			],
			[
				"oftrue",
				"ext/openFrameworks/libs/openFrameworks/graphics/ofTrueTypeFont.cpp"
			],
			[
				"oftruetypefo",
				"ext/openFrameworks/libs/openFrameworks/graphics/ofTrueTypeFont.cpp"
			],
			[
				"ofxcolorpick",
				"ext/openFrameworks/addons/ofxGui/src/ofxColorPicker.cpp"
			],
			[
				"rake",
				"Rakefile"
			],
			[
				"ofmesh.h",
				"ext/openFrameworks/libs/openFrameworks/3d/ofMesh.h"
			],
			[
				"mesh",
				"ext/rubyOF/Mesh.h"
			],
			[
				"ofshader",
				"ext/openFrameworks/libs/openFrameworks/gl/ofShader.cpp"
			],
			[
				"ver",
				"lib/rubyOF/version.rb"
			],
			[
				"glprogram",
				"ext/openFrameworks/libs/openFrameworks/gl/ofGLProgrammableRenderer.cpp"
			],
			[
				"glfwwindow",
				"ext/openFrameworks/libs/openFrameworks/app/ofAppGLFWWindow.cpp"
			],
			[
				"oftexture",
				"ext/openFrameworks/libs/openFrameworks/gl/ofTexture.cpp"
			],
			[
				"ofmesh.cpp",
				"ext/openFrameworks/libs/openFrameworks/gl/ofVboMesh.cpp"
			],
			[
				".git",
				".gitignore"
			],
			[
				"frameworks true type",
				"ext/openFrameworks/libs/openFrameworks/graphics/ofTrueTypeFont.cpp"
			],
			[
				"true type font",
				"ext/rubyOF/TrueTypeFont.cpp"
			],
			[
				"rubyofcpp",
				"ext/rubyOF/rubyOF.cpp"
			],
			[
				"oflog.h",
				"ext/openFrameworks/libs/openFrameworks/utils/ofLog.h"
			],
			[
				"version",
				"lib/rubyOF/version.rb"
			],
			[
				"window",
				"lib/rubyOF/window.rb"
			],
			[
				"ofmainloop",
				"ext/openFrameworks/libs/openFrameworks/app/ofMainLoop.cpp"
			],
			[
				"examples events ",
				"ext/openFrameworks/examples/events/allEventsExample/allEventsExample.qbs"
			],
			[
				"launcher.",
				"ext/rubyOF/launcher.cpp"
			],
			[
				"midi data path",
				"bin/projects/grapevine_midi/ext/c_extension/constants/data_path.h"
			],
			[
				"main",
				"bin/main.rb"
			],
			[
				"chardis",
				"bin/projects/grapevine_midi/bin/data/char_display.frag"
			],
			[
				"rubyof.rb",
				"lib/rubyOF.rb"
			],
			[
				"true",
				"ext/openFrameworks/libs/openFrameworks/graphics/ofTrueTypeFont.cpp"
			],
			[
				"repl",
				"bin/projects/sketch/lib/repl.rb"
			],
			[
				"openframeworks truetype",
				"ext/openFrameworks/libs/openFrameworks/graphics/ofTrueTypeFont.cpp"
			],
			[
				"truety",
				"ext/rubyOF/TrueTypeFont.cpp"
			],
			[
				"grap",
				"ext/rubyOF/Graphics.cpp"
			],
			[
				"true type rb",
				"lib/rubyOF/true_type_font.rb"
			],
			[
				"truetycpp",
				"ext/rubyOF/TrueTypeFont.cpp"
			],
			[
				"midi gem",
				"bin/projects/grapevine_midi/Gemfile"
			],
			[
				"view visual",
				"bin/projects/livecode2/lib/view_visualize_controller.rb"
			],
			[
				"ofxmidi",
				"ext/openFrameworks/addons/ofxMidi/src/ofxMidi.h"
			],
			[
				"bin main",
				"bin/main.rb"
			],
			[
				"main midi",
				"bin/projects/grapevine_midi/lib/main.rb"
			],
			[
				"truty",
				"lib/rubyOF/true_type_font.rb"
			],
			[
				"true ty",
				"ext/rubyOF/TrueTypeFont.cpp"
			],
			[
				"ttf",
				"lib/rubyOF/true_type_font.rb"
			],
			[
				"tvec2",
				"ext/openFrameworks/libs/glm/include/glm/detail/type_vec2.hpp"
			],
			[
				"ofxmidimessage.h",
				"ext/openFrameworks/addons/ofxMidi/src/ofxMidiMessage.h"
			],
			[
				"type vec2hpp",
				"ext/openFrameworks/libs/glm/include/glm/detail/type_vec2.hpp"
			],
			[
				"vec2hpp",
				"ext/openFrameworks/libs/glm/include/glm/vec2.hpp"
			],
			[
				"graphic",
				"ext/rubyOF/Graphics.cpp"
			],
			[
				"button",
				"lib/rubyOF/button_event_codes.rb"
			],
			[
				"offbo.h",
				"ext/openFrameworks/libs/openFrameworks/gl/ofFbo.h"
			],
			[
				"window.yaml",
				"bin/projects/grapevine_midi/bin/data/window_geometry.yaml"
			],
			[
				"ofmain",
				"ext/openFrameworks/libs/openFrameworks/ofMain.h"
			],
			[
				"midi callback",
				"bin/projects/grapevine_midi/ext/c_extension/callbacks.cpp"
			],
			[
				"window.rb",
				"lib/rubyOF/window.rb"
			],
			[
				"main.rb",
				"bin/main.rb"
			],
			[
				"appfacto",
				"ext/rubyOF/app_factory.h"
			],
			[
				"simpleeventsexample",
				"ext/openFrameworks/examples/events/simpleEventsExample/simpleEventsExample.qbs"
			],
			[
				"ofeventutils",
				"ext/openFrameworks/libs/openFrameworks/events/ofEventUtils.h"
			],
			[
				"ofevent",
				"ext/openFrameworks/libs/openFrameworks/events/ofEvent.h"
			],
			[
				"ofxmidin.h",
				"ext/openFrameworks/addons/ofxMidi/src/ofxMidiIn.h"
			],
			[
				"ofeventutils.h",
				"ext/openFrameworks/libs/openFrameworks/events/ofEventUtils.h"
			],
			[
				"ofbasea",
				"ext/openFrameworks/libs/openFrameworks/app/ofBaseApp.cpp"
			],
			[
				"midiout.h",
				"ext/openFrameworks/addons/ofxMidi/src/ofxMidiOut.h"
			],
			[
				"ofxmidiin.h",
				"ext/openFrameworks/addons/ofxMidi/src/ofxMidiIn.h"
			],
			[
				"ofxmidiouth",
				"ext/openFrameworks/addons/ofxMidi/src/ofxMidiOut.h"
			],
			[
				"ofxmidi midiinputexampl",
				"ext/openFrameworks/addons/ofxMidi/midiInputExample/addons.make"
			],
			[
				"common",
				"common.rb"
			],
			[
				"windog",
				"build/window_guard.rb"
			],
			[
				"rectan",
				"lib/rubyOF/rectangle.rb"
			],
			[
				"basewin",
				"ext/openFrameworks/libs/openFrameworks/app/ofAppBaseWindow.h"
			],
			[
				"openframeworks window",
				"ext/openFrameworks/libs/openFrameworks/app/ofAppGlutWindow.cpp"
			],
			[
				"poly",
				"bin/projects/youtube/lib/monkey_patches/Chipmunk/Shape/Poly.rb"
			],
			[
				"rect",
				"bin/projects/youtube/lib/monkey_patches/Chipmunk/Shape/Rect.rb"
			],
			[
				"font ",
				"bin/projects/youtube/lib/serialization/RubyOF/font.rb"
			],
			[
				"tty",
				"ext/rubyOF/TrueTypeFont.h"
			],
			[
				"trty",
				"ext/rubyOF/TrueTypeFont.cpp"
			],
			[
				"color",
				"lib/rubyOF/color.rb"
			],
			[
				"truetyp.r",
				"lib/rubyOF/true_type_font.rb"
			],
			[
				"window ",
				"build/window_guard.rb"
			],
			[
				"text",
				"lib/entities/text.rb"
			],
			[
				"entit",
				"lib/entities/entity.rb"
			],
			[
				"space",
				"lib/space.rb"
			],
			[
				"win",
				"lib/window.rb"
			],
			[
				"conf",
				"ext/addons_app/testApp/config.make"
			],
			[
				"appfac",
				"ext/rubyOF/app_factory.h"
			],
			[
				"appf",
				"ext/rubyOF/app_factory.h"
			],
			[
				".gitmo",
				".gitmodules"
			],
			[
				"setting",
				"bin/projects/youtube/bin/data/settings.xml"
			],
			[
				"settings.xml",
				"bin/projects/youtube/bin/data/settings.xml"
			],
			[
				"extimage",
				"ext/rubyOF/image.cpp"
			],
			[
				"addons/ofxinputfield",
				"ext/openFrameworks/addons/ofxGui/src/ofxInputField.cpp"
			],
			[
				"ofxinputfi",
				"ext/openFrameworks/addons/ofxGui/src/ofxInputField.cpp"
			],
			[
				"ofxguivalupl",
				"ext/openFrameworks/addons/ofxGuiExtended/src/controls/ofxGuiValuePlotter.cpp"
			],
			[
				"ofxguiextended",
				"ext/openFrameworks/addons/ofxGuiExtended/src/ofxGuiExtended.h"
			],
			[
				"ofxguiextedadvancedguiofapp",
				"ext/openFrameworks/addons/ofxGuiExtended/exampleAdvancedGui/src/ofApp.cpp"
			],
			[
				"ofapp",
				"ext/oF_apps/testApp/src/ofApp.cpp"
			],
			[
				"oftess",
				"ext/openFrameworks/libs/openFrameworks/graphics/ofTessellator.cpp"
			],
			[
				"ofxbasegu",
				"ext/openFrameworks/addons/ofxGui/src/ofxBaseGui.cpp"
			],
			[
				"buildvar",
				"bin/projects/boilerplate/config/build_variables.rb"
			],
			[
				"extload",
				"build/extension_loader.rb"
			],
			[
				"build_vari",
				"bin/projects/boilerplate/config/build_variables.rb"
			],
			[
				"libmain",
				"bin/projects/boilerplate/lib/main.rb"
			],
			[
				"appfa",
				"ext/rubyOF/app_factory.h"
			],
			[
				"extc",
				"ext/rubyOF/extconf.rb"
			],
			[
				"helper",
				"rake/helper_functions.rb"
			],
			[
				"staticlib",
				"ext/oF_apps/testApp/Makefile.static_lib"
			],
			[
				"appfact",
				"ext/rubyOF/app_factory.h"
			],
			[
				"youtubeextconf",
				"bin/projects/youtube/ext/window/extconf.rb"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 1000.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Experiments/oF_Test/oF_Test.sublime-project"
			],
			[
				"th",
				"/home/ravenskrag/Documents/Sublime/ThoughtTrace.sublime-project"
			],
			[
				"ete",
				"/home/ravenskrag/Documents/Projects/Eternity.sublime-project"
			],
			[
				"e",
				"/home/ravenskrag/Documents/Projects/Eternity.sublime-project"
			],
			[
				"et",
				"/home/ravenskrag/Documents/Projects/Eternity.sublime-project"
			],
			[
				"gamn",
				"/home/ravenskrag/Documents/Projects/GameDesignNotes.sublime-project"
			],
			[
				"oni",
				"/home/ravenskrag/Documents/Projects/Oni.sublime-project"
			],
			[
				"on",
				"/home/ravenskrag/Documents/Projects/Oni.sublime-project"
			],
			[
				"321",
				"/home/ravenskrag/Documents/Projects/CS321_Project.sublime-project"
			],
			[
				"go",
				"/home/ravenskrag/Documents/Projects/Gosu.sublime-project"
			],
			[
				"42",
				"/home/ravenskrag/Documents/Projects/CS425_OgreProject.sublime-project"
			]
		],
		"width": 760.0
	},
	"select_symbol":
	{
		"height": 488.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"wrap",
				"wrap"
			],
			[
				"keyboard",
				"keyboard_cb"
			],
			[
				"key",
				"keys"
			],
			[
				"setupopeng",
				"ofSetupOpenGL"
			],
			[
				"ofsetupop",
				"ofSetupOpenGL"
			]
		],
		"width": 492.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": false,
	"side_bar_visible": true,
	"side_bar_width": 593.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
