{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"alph",
				"alphabets"
			],
			[
				"exc",
				"exception"
			],
			[
				"bat",
				"bad_termination"
			],
			[
				"pixels",
				"setFromPixels\tvoid setFromPixels(const ofPixels_<unsigned char> &pixels)"
			],
			[
				"load",
				"load\tbool load(const std::filesystem::path &fileName, const ofImageLoadSettings &settings)"
			],
			[
				"exp",
				"export_build_variables"
			],
			[
				"downlo",
				"download_libs"
			],
			[
				"ts",
				"target_string"
			],
			[
				"open",
				"openFrameworks"
			],
			[
				"pro",
				"project"
			],
			[
				"proj",
				"project_name"
			],
			[
				"nam",
				"name"
			],
			[
				"conf",
				"config"
			],
			[
				"OFB",
				"OF_BUILD_VARIABLE_FILE"
			],
			[
				"root",
				"REPO_ROOT"
			],
			[
				"Fil",
				"File\tFile.open(\"..\") { |file| .. }"
			],
			[
				"exten",
				"ofx_extension_name"
			],
			[
				"repo",
				"REPO_ROOT"
			],
			[
				"expand",
				"expand_path"
			],
			[
				"onl",
				"only_so"
			],
			[
				"sketch",
				"sketch_dump"
			],
			[
				"dump",
				"dump_so"
			],
			[
				"cate",
				"category_dir"
			],
			[
				"trail",
				"trail_dt"
			],
			[
				"es",
				"exit_status"
			],
			[
				"have_",
				"have_library"
			],
			[
				"gstream",
				"gstreamer"
			],
			[
				"polib",
				"poco_libs_dir"
			],
			[
				"build_",
				"build_tess2"
			],
			[
				"depe",
				"dependencies"
			],
			[
				"ext",
				"extconf"
			],
			[
				"oF",
				"oF_project"
			],
			[
				"clb",
				"c_library"
			],
			[
				"work",
				"work_dir"
			],
			[
				"temp",
				"temp_ext"
			],
			[
				"mk",
				"mySketch"
			],
			[
				"make",
				"Makefile"
			],
			[
				"bu",
				"build"
			],
			[
				"bur",
				"build_library"
			],
			[
				"clib",
				"clean_library"
			],
			[
				"ce",
				"1.coerce"
			],
			[
				"visua",
				"visualizations"
			],
			[
				"test_",
				"test_package"
			],
			[
				"prev",
				"prev_tick"
			],
			[
				"poss",
				"possible_targets"
			],
			[
				"const",
				"constraint_target"
			],
			[
				"data",
				"data_dump"
			],
			[
				"rec",
				"resources"
			],
			[
				"Hash",
				"HashWrapper"
			],
			[
				"remo",
				"removal_flag"
			],
			[
				"con",
				"constraint"
			],
			[
				"paramet",
				"parameterization"
			],
			[
				"visu",
				"visualization"
			],
			[
				"vis",
				"visualization"
			],
			[
				"necessary",
				"necessary_pairs"
			],
			[
				"cont",
				"constraint_type"
			],
			[
				"nece",
				"necessary_pairs"
			],
			[
				"entit",
				"entities"
			],
			[
				"inti",
				"initialize"
			],
			[
				"ent",
				"entities"
			],
			[
				"segment",
				"segment_query"
			],
			[
				"compo",
				"components"
			],
			[
				"query",
				"query_data"
			],
			[
				"origi",
				"original_color"
			],
			[
				"active",
				"active_cascade"
			],
			[
				"var",
				"var_name"
			],
			[
				"projec",
				"project_directory"
			],
			[
				"other",
				"other_stuff"
			],
			[
				"unpa",
				"unpack_with_class_name"
			],
			[
				"compon",
				"component"
			],
			[
				"qu",
				"query_components"
			],
			[
				"styl",
				"style_components"
			],
			[
				"names",
				"named_styles"
			],
			[
				"comp",
				"component"
			],
			[
				"full",
				"full_path"
			],
			[
				"sc",
				"style_component"
			],
			[
				"primary",
				"primary_style"
			],
			[
				"casc",
				"cascade_list"
			],
			[
				"enti",
				"entity_id"
			],
			[
				"component",
				"component_data"
			],
			[
				"componen",
				"component"
			],
			[
				"collec",
				"collection"
			],
			[
				"activ",
				"active_list"
			],
			[
				"write",
				"write_data"
			],
			[
				"wri",
				"write_data"
			],
			[
				"par",
				"packed_array"
			],
			[
				"compd",
				"component_data"
			],
			[
				"each_",
				"each_with_index"
			],
			[
				"all",
				"all_style_objects"
			],
			[
				"style",
				"style_component"
			],
			[
				"righc",
				"right_callbacks"
			],
			[
				"lftc",
				"left_callbacks"
			],
			[
				"butt",
				"mouse_button"
			],
			[
				"actt",
				"active_action"
			],
			[
				"ti",
				"text_input"
			],
			[
				"acc",
				"active_action"
			],
			[
				"acti",
				"active_action"
			],
			[
				"mous",
				"mouse_button"
			],
			[
				"button",
				"button_phase"
			],
			[
				"hit",
				"hitbox_color"
			],
			[
				"clone",
				"clone_factory"
			],
			[
				"old",
				"old_text"
			],
			[
				"prot",
				"prototype"
			],
			[
				"regist",
				"register_prototype"
			],
			[
				"inp",
				"text_input"
			],
			[
				"text",
				"text_input"
			],
			[
				"est",
				"estimated_i"
			],
			[
				"first",
				"first_guess"
			],
			[
				"esti",
				"estimated_i"
			],
			[
				"meas",
				"measured_offset"
			],
			[
				"disp",
				"measured_displacement"
			],
			[
				"caret",
				"caret_pos"
			],
			[
				"dir",
				"dirty"
			],
			[
				"no",
				"normalized_anchor"
			],
			[
				"nw",
				"new_height"
			],
			[
				"plac",
				"place_to_look"
			],
			[
				"original",
				"original_width"
			],
			[
				"na",
				"normalized_anchor"
			],
			[
				"ad",
				"anchor_delta"
			],
			[
				"anp",
				"anchor_pre"
			],
			[
				"top_ri",
				"top_right"
			],
			[
				"instance",
				"instance_eval"
			],
			[
				"meta",
				"meta_eval"
			],
			[
				"Input",
				"InputSystem"
			],
			[
				"revent",
				"released_events"
			],
			[
				"parti",
				"partition"
			],
			[
				"lev",
				"launched_events"
			],
			[
				"KbLeft",
				"KbLeftControl"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "project file time ordering\n\noF_core_setup\noF_deps\nc_extension_build_system\ncpp_wrapper                (this project)",
			"settings":
			{
				"buffer_size": 116,
				"line_ending": "Unix",
				"name": "project file time ordering"
			}
		},
		{
			"file": ".gitignore",
			"settings":
			{
				"buffer_size": 1446,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "ext/oF_apps/testApp/config.make",
			"settings":
			{
				"buffer_size": 6543,
				"line_ending": "Unix"
			}
		},
		{
			"file": "ext/oF_apps/testApp/addons.make",
			"settings":
			{
				"buffer_size": 7,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "common.rb",
			"settings":
			{
				"buffer_size": 3085,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "Rakefile",
			"settings":
			{
				"buffer_size": 27254,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "rake /home/ravenskrag/Desktop/gem_structure/ext/oF_apps/testApp/oF_build_variables.yaml\n    /home/ravenskrag/Desktop/gem_structure/ext/oF_apps/testApp/Makefile.static_lib\n    /home/ravenskrag/Desktop/gem_structure/ext/oF_apps/testApp/addons.make\n    /home/ravenskrag/Desktop/gem_structure/Rakefile\n    /home/ravenskrag/Desktop/gem_structure/common.rb\nrake build\n    oF:build\n    oF_project:build\n    oF_project:export_build_variables\n    oF_project:static_lib:build\n    c_extension:build\nrake build_and_run\n    build\n    run\nrake build_cpp\n    oF:build\n    oF_project:build\nrake c_extension:build\n    lib/rubyOF/rubyOF.so\nrake clean\n    oF_project:clean\nrake clobber\n    clean\n    oF_deps:clobber\n    oF:clean\nrake debug\n    ruby:debug\nrake debug_project\n    oF:build\n    oF_project:build\n    oF_project:debug\nrake examine\nrake lib/rubyOF/rubyOF.so\n    oF_project:build\n    ext/rubyOF/extconf.rb\n    /home/ravenskrag/Desktop/gem_structure/Rakefile\nrake oF:build\nrake oF:clean\nrake oF:compilePG\n    build\nrake oF:download_libs\nrake oF:project_generator\nrake oF:rebuild\nrake oF_deps:clean\n    kiss:clean\n    tess2:clean\nrake oF_deps:clobber\n    kiss:clobber\n    tess2:clobber\nrake oF_deps:inject\n    kiss:package\n    tess2:package\nrake oF_deps:kiss:build\nrake oF_deps:kiss:clean\nrake oF_deps:kiss:clobber\n    clean\nrake oF_deps:kiss:package\n    build\nrake oF_deps:revert\nrake oF_deps:tess2:build\n    /home/ravenskrag/Desktop/gem_structure/Rakefile\nrake oF_deps:tess2:clean\nrake oF_deps:tess2:clobber\nrake oF_deps:tess2:package\n    build\nrake oF_project:build\nrake oF_project:clean\nrake oF_project:debug\nrake oF_project:examine\nrake oF_project:explore\n    export_build_variables\nrake oF_project:export_build_variables\n    /home/ravenskrag/Desktop/gem_structure/ext/oF_apps/testApp/oF_build_variables.yaml\nrake oF_project:rebuild\nrake oF_project:run\nrake oF_project:static_lib:build\nrake oF_project:static_lib:clean\nrake ruby:debug\nrake ruby:run\nrake run\n    ruby:run\nrake setup\n    oF_deps:inject\n    oF:build\n    oF_project:build\n",
			"settings":
			{
				"buffer_size": 2028,
				"line_ending": "Unix",
				"name": "rake /home/ravenskrag/Desktop/gem_structure/ext/oF"
			}
		},
		{
			"file": "ext/oF_apps/testApp/Makefile.static_lib",
			"settings":
			{
				"buffer_size": 4473,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "ext/oF_apps/testApp/oF_build_variables.yaml",
			"settings":
			{
				"buffer_size": 77983,
				"line_ending": "Unix"
			}
		},
		{
			"file": "ext/rubyOF/extconf.rb",
			"settings":
			{
				"buffer_size": 7825,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "ext/rubyOF/Makefile",
			"settings":
			{
				"buffer_size": 12484,
				"line_ending": "Unix"
			}
		},
		{
			"file": "compile_commands.json",
			"settings":
			{
				"buffer_size": 25577,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "---",
			"settings":
			{
				"buffer_size": 3,
				"line_ending": "Unix",
				"name": "---"
			}
		},
		{
			"file": "ext/openFrameworks/examples/gl/pointsAsTexturesExample/src/ofApp.cpp",
			"settings":
			{
				"buffer_size": 4523,
				"line_ending": "Unix"
			}
		},
		{
			"file": "ext/openFrameworks/libs/openFrameworks/graphics/ofImage.h",
			"settings":
			{
				"buffer_size": 28280,
				"line_ending": "Unix"
			}
		},
		{
			"file": "ext/openFrameworks/examples/input_output/imageLoaderExample/src/ofApp.cpp",
			"settings":
			{
				"buffer_size": 3109,
				"line_ending": "Unix"
			}
		},
		{
			"file": "ext/openFrameworks/examples/input_output/imageLoaderExample/src/ofApp.h",
			"settings":
			{
				"buffer_size": 664,
				"line_ending": "Unix"
			}
		},
		{
			"file": "ext/openFrameworks/examples/input_output/imageLoaderExample/src/main.cpp",
			"settings":
			{
				"buffer_size": 344,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "---",
			"settings":
			{
				"buffer_size": 3,
				"line_ending": "Unix",
				"name": "---"
			}
		},
		{
			"contents": "want to move over code from old oF app / ruby wrapper\n\nneed to establish a pathway in teh build file\nsuch that you can clean / build along this pathway\nwithout clobbering too much of the existant work\n(optimize rebuild time)\n\n(don't clobber the core or anything dumb)",
			"settings":
			{
				"buffer_size": 267,
				"line_ending": "Unix",
				"name": "want to move over code from old oF app / ruby wrap"
			}
		},
		{
			"file": "ext/rubyOF/launcher.cpp",
			"settings":
			{
				"buffer_size": 3170,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "ext/rubyOF/launcher.h",
			"settings":
			{
				"buffer_size": 1580,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "ext/oF_apps/testApp/src/ofApp.cpp",
			"settings":
			{
				"buffer_size": 2038,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "ext/oF_apps/testApp/src/ofApp.h",
			"settings":
			{
				"buffer_size": 574,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "ext/rubyOF/rb_app.cpp",
			"settings":
			{
				"buffer_size": 9913,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "ext/rubyOF/rb_app.h",
			"settings":
			{
				"buffer_size": 1333,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/rubyOF.rb",
			"settings":
			{
				"buffer_size": 9543,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "bin/projects/template/lib/main.rb",
			"settings":
			{
				"buffer_size": 10483,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/.rvm/gems/ruby-2.4.0/gems/rice-2.1.1/rice/protect.ipp",
			"settings":
			{
				"buffer_size": 46919,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "---",
			"settings":
			{
				"buffer_size": 3,
				"line_ending": "Unix",
				"name": "---"
			}
		},
		{
			"file": "ext/rubyOF/rice.h",
			"settings":
			{
				"buffer_size": 129,
				"line_ending": "Unix"
			}
		},
		{
			"file": "ext/rubyOF/rubyOF.cpp",
			"settings":
			{
				"buffer_size": 10957,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "ext/rubyOF/rubyOF.h",
			"settings":
			{
				"buffer_size": 933,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "ext/rubyOF/Graphics.cpp",
			"settings":
			{
				"buffer_size": 5329,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "ext/rubyOF/Graphics.h",
			"settings":
			{
				"buffer_size": 136,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "ext/rubyOF/Fbo.cpp",
			"settings":
			{
				"buffer_size": 6629,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "ext/rubyOF/Fbo.h",
			"settings":
			{
				"buffer_size": 87,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "ext/rubyOF/TrueTypeFont.cpp",
			"settings":
			{
				"buffer_size": 4391,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "ext/rubyOF/TrueTypeFont.h",
			"settings":
			{
				"buffer_size": 2406,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "ext/openFrameworks/libs/openFrameworks/graphics/ofTrueTypeFont.cpp",
			"settings":
			{
				"buffer_size": 45571,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "ext/openFrameworks/libs/openFrameworks/graphics/ofTrueTypeFont.h",
			"settings":
			{
				"buffer_size": 14304,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "\n\"I use fc-list command to view the list of fonts installed.\"\n   Rpant, answered Sep 19 '16 at 5:00 (edited Oct 9 '16 at 7:40 by Anwar)\n\nsrc: https://askubuntu.com/questions/353307/how-to-locate-a-font-in-ubuntu\n\n\n\nravenskrag@ravensnest:~$ fc-list\n/usr/share/fonts/truetype/lato/Lato-Medium.ttf: Lato,Lato Medium:style=Medium,Regular\n/usr/share/fonts/truetype/oxygen/OxygenMono-Regular.ttf: Oxygen Mono:style=Regular\n/home/ravenskrag/.fonts/typecatcher/Open Sans_600italic.ttf: Open Sans,Open Sans Semibold:style=Semibold Italic,Italic\n/usr/share/fonts/truetype/tlwg/TlwgTypo-Bold.ttf: Tlwg Typo:style=Bold\n/usr/share/fonts/truetype/lato/Lato-SemiboldItalic.ttf: Lato,Lato Semibold:style=Semibold Italic,Italic\n/usr/share/fonts/truetype/dejavu/DejaVuSerif-Bold.ttf: DejaVu Serif:style=Bold\n/usr/share/fonts/truetype/noto/NotoSansThai-Regular.ttf: Noto Sans Thai:style=Regular\n/usr/share/fonts/truetype/tlwg/TlwgTypewriter-BoldOblique.ttf: Tlwg Typewriter:style=Bold Oblique\n/home/ravenskrag/.fonts/DroidSerif-Bold.ttf: Droid Serif:style=Bold\n/usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf: DejaVu Sans Mono:style=Book\n/usr/share/fonts/truetype/noto/NotoSansCypriot-Regular.ttf: Noto Sans Cypriot:style=Regular\n/usr/share/fonts/truetype/padauk/Padauk-bold.ttf: Padauk,áá­áá¯á¶á¸áá²,á??á?¬á??á?¯á?¶á?¸á??á??\n/usr/share/fonts/truetype/noto/NotoSansTeluguUI-Bold.ttf: Noto Sans Telugu UI:style=Bold\n/usr/share/fonts/opentype/noto/NotoSansCJK-Bold.ttc: Noto Sans CJK JP,Noto Sans CJK JP Bold:style=Bold,Regular\n/usr/share/fonts/opentype/stix-word/STIX-BoldItalic.otf: STIX:style=Bold Italic\n/usr/share/fonts/opentype/stix/STIXIntegralsUp-Bold.otf: STIXIntegralsUp:style=Bold\n/usr/share/fonts/truetype/noto/NotoSansLisu-Regular.ttf: Noto Sans Lisu:style=Regular\n/usr/share/fonts/truetype/noto/NotoSansThaiUI-Bold.ttf: Noto Sans Thai UI:style=Bold\n/usr/share/fonts/truetype/noto/NotoSansTamilUI-Regular.ttf: Noto Sans Tamil UI:style=Regular\n/usr/share/fonts/truetype/noto/NotoSansMongolian-Regular.ttf: Noto Sans Mongolian:style=Regular\n/usr/share/fonts/opentype/stix/STIXIntegralsUpD-Regular.otf: STIXIntegralsUpD:style=Regular\n/usr/share/fonts/truetype/dejavu/DejaVuSansCondensed-Oblique.ttf: DejaVu Sans,DejaVu Sans Condensed:style=Condensed Oblique,Oblique\n/usr/share/fonts/truetype/noto/NotoSansLimbu-Regular.ttf: Noto Sans Limbu:style=Regular\n/usr/share/fonts/truetype/tlwg/Garuda.ttf: Garuda:style=Regular\n/usr/share/fonts/truetype/lato/Lato-LightItalic.ttf: Lato,Lato Light:style=Light Italic,Italic\n/usr/share/fonts/truetype/noto/NotoSansUgaritic-Regular.ttf: Noto Sans Ugaritic:style=Regular\n/usr/share/fonts/X11/Type1/c0649bt_.pfb: Bitstream Charter:style=Italic\n/usr/share/fonts/truetype/noto/NotoSansKhmer-Bold.ttf: Noto Sans Khmer:style=Bold\n/usr/share/fonts/truetype/noto/NotoSansArmenian-Bold.ttf: Noto Sans Armenian:style=Bold\n/usr/share/fonts/truetype/noto/NotoSansGujarati-Bold.ttf: Noto Sans Gujarati:style=Bold\n/usr/share/fonts/truetype/freefont/FreeSansBold.ttf: FreeSans:style=Bold,получерен,negreta,tučné,fed,Fett,Έντονα,Negrita,Lihavoitu,Gras,Félkövér,Grassetto,Vet,Halvfet,Pogrubiony,Negrito,gros,Полужирный,Fet,Kalın,huruf tebal,жирний,Krepko,treknraksts,pusjuodis,đậm,Lodia,धृष्ट\n/usr/share/fonts/truetype/freefont/FreeSans.ttf: FreeSans:style=Regular,нормален,Normal,obyčejné,Mittel,µεσαία,Normaali,Normál,Medio,Gemiddeld,Odmiana Zwykła,Обычный,Normálne,menengah,прямій,Navadno,vidējs,normalusis,vừa,Arrunta,सामान्य\n/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Italic.ttf: Liberation Sans Narrow:style=Italic\n/usr/share/fonts/truetype/noto/NotoSansGujaratiUI-Regular.ttf: Noto Sans Gujarati UI:style=Regular\n/usr/share/fonts/truetype/noto/NotoSansOriya-Regular.ttf: Noto Sans Oriya:style=Regular\n/usr/share/fonts/truetype/noto/NotoSansThaiUI-Regular.ttf: Noto Sans Thai UI:style=Regular\n/usr/share/fonts/truetype/dejavu/DejaVuSerifCondensed-BoldItalic.ttf: DejaVu Serif,DejaVu Serif Condensed:style=Condensed Bold Italic,Bold Italic\n/usr/share/fonts/truetype/dejavu/DejaVuSans-ExtraLight.ttf: DejaVu Sans,DejaVu Sans Light:style=ExtraLight\n/usr/share/fonts/type1/gsfonts/n021024l.pfb: Nimbus Roman No9 L:style=Medium Italic\n/usr/share/fonts/truetype/kacst/KacstFarsi.ttf: KacstFarsi:style=Medium\n/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf: DejaVu Sans:style=Book\n/usr/share/fonts/truetype/noto/NotoNaskhArabic-Bold.ttf: Noto Naskh Arabic:style=Bold\n/usr/share/fonts/X11/Type1/c0419bt_.pfb: Courier 10 Pitch:style=Regular\n/usr/share/fonts/opentype/stix/STIXNonUnicode-BoldItalic.otf: STIXNonUnicode:style=Bold Italic\n/usr/share/fonts/truetype/noto/NotoSerifTelugu-Regular.ttf: Noto Serif Telugu:style=Regular\n/usr/share/fonts/opentype/stix/STIXSizeTwoSym-Bold.otf: STIXSizeTwoSym:style=Bold\n/usr/share/fonts/truetype/noto/NotoSansCuneiform-Regular.ttf: Noto Sans Cuneiform:style=Regular\n/usr/share/fonts/opentype/stix/STIXVariants-Bold.otf: STIXVariants:style=Bold\n/usr/share/fonts/truetype/freefont/FreeSerifBoldItalic.ttf: FreeSerif:style=Bold Italic,получерен курсивен,negreta cursiva,tučné kurzíva,fed kursiv,Fett-Kursiv,Negrita Cursiva,Lihavoitu Kursivoi,Gras Italique,Félkövér dőlt,Grassetto Corsivo,Vet Cursief,Halvfet Kursiv,Pogrubiona kursywa,Negrito Itálico,gros cursiv,Обычный Курсив,Tučná kurzíva,Fet Kursiv,ตัวเอียงหนา,Kalın İtalik,huruf tebal kursif,жирний курсив,Polkrepko Pežeče,treknais kursīvs,pusjuodis kursyvas,nghiêng đậm,Lodi etzana,धृष्ट-तिरछा\n/usr/share/fonts/opentype/stix/STIXIntegralsSm-Bold.otf: STIXIntegralsSm:style=Bold\n/usr/share/fonts/truetype/lato/Lato-Italic.ttf: Lato:style=Italic\n/usr/share/fonts/truetype/kacst/mry_KacstQurn.ttf: mry_KacstQurn:style=Regular\n/usr/share/fonts/truetype/tlwg/TlwgTypist.ttf: Tlwg Typist:style=Regular\n/usr/share/fonts/truetype/kacst-one/KacstOne-Bold.ttf: KacstOne:style=Bold\n/usr/share/fonts/truetype/noto/NotoSansDevanagariUI-Regular.ttf: Noto Sans Devanagari UI:style=Regular\n/usr/share/fonts/type1/gsfonts/n021004l.pfb: Nimbus Roman No9 L:style=Medium\n/usr/share/fonts/truetype/noto/NotoSansSyriacEastern-Regular.ttf: Noto Sans Syriac Eastern:style=Regular\n/usr/share/fonts/truetype/freefont/FreeMonoBoldOblique.ttf: FreeMono:style=Bold Oblique,получерен наклонен,Negreta cursiva,tučné kurzíva,fed kursiv,Fett-Kursiv,Έντονα Πλάγια,Negrita Cursiva,Lihavoitu Kursivoi,Gras Italique,Félkövér dőlt,Grassetto Corsivo,Vet Cursief,Halvfet Kursiv,Pogrubiona kursywa,Negrito Itálico,gros oblic,Полужирный Курсив,Tučná kurzíva,Fet Kursiv,Kalın İtalik,huruf tebal miring,жирний похилий,polkrepko ležeče,treknais slīpraksts,pusjuodis pasvirasis,Lodi etzana,धृष्ट-तिरछा\n/usr/share/fonts/truetype/liberation/LiberationSans-Regular.ttf: Liberation Sans:style=Regular\n/usr/share/fonts/opentype/noto/NotoSansCJK-Bold.ttc: Noto Sans Mono CJK KR,Noto Sans Mono CJK KR Bold:style=Bold,Regular\n/usr/share/fonts/truetype/dejavu/DejaVuSerifCondensed.ttf: DejaVu Serif,DejaVu Serif Condensed:style=Condensed,Book\n/usr/share/fonts/truetype/noto/NotoSerifTamil-Bold.ttf: Noto Serif Tamil:style=Bold\n/usr/share/fonts/truetype/dejavu/DejaVuSerifCondensed-Italic.ttf: DejaVu Serif,DejaVu Serif Condensed:style=Condensed Italic,Italic\n/usr/share/fonts/truetype/noto/NotoSansUI-Italic.ttf: Noto Sans UI:style=Italic\n/home/ravenskrag/.fonts/typecatcher/Open Sans_800italic.ttf: Open Sans,Open Sans Extrabold:style=Extrabold Italic,Italic\n/usr/share/fonts/truetype/noto/NotoSansTibetan-Regular.ttf: Noto Sans Tibetan:style=Regular\n/usr/share/fonts/type1/gsfonts/p052023l.pfb: URW Palladio L:style=Italic\n/usr/share/fonts/type1/gsfonts/n022003l.pfb: Nimbus Mono L:style=Regular\n/usr/share/fonts/truetype/liberation/LiberationMono-BoldItalic.ttf: Liberation Mono:style=Bold Italic\n/usr/share/fonts/truetype/hack/Hack-Regular.ttf: Hack:style=Regular\n/usr/share/fonts/opentype/noto/NotoSansCJK-Black.ttc: Noto Sans CJK TC,Noto Sans CJK TC Black:style=Black,Regular\n/usr/share/fonts/truetype/tlwg/Loma-Oblique.ttf: Loma:style=Oblique\n/usr/share/fonts/truetype/noto/NotoSansTifinagh-Regular.ttf: Noto Sans Tifinagh:style=Regular\n/usr/share/fonts/opentype/noto/NotoSansCJK-Black.ttc: Noto Sans CJK KR,Noto Sans CJK KR Black:style=Black,Regular\n/usr/share/fonts/truetype/hack/Hack-Bold.ttf: Hack:style=Bold\n/usr/share/fonts/truetype/noto/NotoSerifTamil-Regular.ttf: Noto Serif Tamil:style=Regular\n/usr/share/fonts/opentype/stix/STIXNonUnicode-Italic.otf: STIXNonUnicode:style=Italic\n/usr/share/fonts/truetype/noto/NotoSansMyanmar-Bold.ttf: Noto Sans Myanmar:style=Bold\n/usr/share/fonts/truetype/ubuntu-font-family/UbuntuMono-R.ttf: Ubuntu Mono:style=Regular\n/usr/share/fonts/truetype/liberation/LiberationSerif-Italic.ttf: Liberation Serif:style=Italic\n/usr/share/fonts/type1/gsfonts/z003034l.pfb: URW Chancery L:style=Medium Italic\n/usr/share/fonts/opentype/noto/NotoSansCJK-Bold.ttc: Noto Sans Mono CJK JP,Noto Sans Mono CJK JP Bold:style=Bold,Regular\n/usr/share/fonts/truetype/noto/NotoSansGujaratiUI-Bold.ttf: Noto Sans Gujarati UI:style=Bold\n/usr/share/fonts/X11/Type1/c0633bt_.pfb: Bitstream Charter:style=Bold Italic\n/usr/share/fonts/truetype/kacst/KacstDigital.ttf: KacstDigital:style=Medium\n/usr/share/fonts/truetype/tlwg/TlwgTypo-Oblique.ttf: Tlwg Typo:style=Oblique\n/usr/share/fonts/truetype/noto/NotoSansSaurashtra-Regular.ttf: Noto Sans Saurashtra:style=Regular\n/usr/share/fonts/X11/Type1/c0648bt_.pfb: Bitstream Charter:style=Regular\n/home/ravenskrag/.fonts/typecatcher/Noto Sans_700.ttf: Noto Sans:style=Bold\n/usr/share/fonts/truetype/kacst/KacstPen.ttf: KacstPen:style=Medium\n/usr/share/fonts/truetype/liberation/LiberationMono-Bold.ttf: Liberation Mono:style=Bold\n/home/ravenskrag/.fonts/typecatcher/Open Sans_700italic.ttf: Open Sans:style=Bold Italic\n/usr/share/fonts/truetype/noto/NotoSerifBengali-Bold.ttf: Noto Serif Bengali:style=Bold\n/usr/share/fonts/truetype/ttf-dejavu/DejaVuSerif.ttf: DejaVu Serif:style=Book\n/usr/share/fonts/truetype/tlwg/Laksaman-Italic.ttf: Laksaman:style=Italic\n/usr/share/fonts/opentype/noto/NotoSansCJK-Medium.ttc: Noto Sans CJK JP,Noto Sans CJK JP Medium:style=Medium,Regular\n/usr/share/fonts/truetype/tlwg/Kinnari-Italic.ttf: Kinnari:style=Italic\n/home/ravenskrag/.fonts/typecatcher/Open Sans_800.ttf: Open Sans,Open Sans Extrabold:style=Extrabold,Regular\n/usr/share/fonts/truetype/noto/NotoSansRunic-Regular.ttf: Noto Sans Runic:style=Regular\n/usr/share/fonts/truetype/nanum/NanumBarunGothic.ttf: NanumBarunGothic,나눔바른고딕:style=Regular\n/usr/share/fonts/opentype/noto/NotoSansCJK-Regular.ttc: Noto Sans CJK JP,Noto Sans CJK JP Regular:style=Regular\n/usr/share/fonts/truetype/tlwg/TlwgMono-Bold.ttf: Tlwg Mono:style=Bold\n/usr/share/fonts/truetype/noto/NotoSansNewTaiLue-Regular.ttf: Noto Sans New Tai Lue:style=Regular\n/usr/share/fonts/truetype/lato/Lato-MediumItalic.ttf: Lato,Lato Medium:style=Medium Italic,Italic\n/usr/share/fonts/truetype/noto/NotoSansKannadaUI-Regular.ttf: Noto Sans Kannada UI:style=Regular\n/usr/share/fonts/truetype/noto/NotoKufiArabic-Regular.ttf: Noto Kufi Arabic:style=Regular\n/usr/share/fonts/type1/gsfonts/c059013l.pfb: Century Schoolbook L:style=Roman\n/usr/share/fonts/truetype/noto/NotoSansInscriptionalParthian-Regular.ttf: Noto Sans Inscriptional Parthian:style=Regular\n/usr/share/fonts/truetype/tlwg/Waree.ttf: Waree:style=Regular\n/usr/share/fonts/opentype/noto/NotoSansCJK-Light.ttc: Noto Sans CJK KR,Noto Sans CJK KR Light:style=Light,Regular\n/home/ravenskrag/.fonts/DroidSansMono.ttf: Droid Sans Mono:style=Regular\n/home/ravenskrag/.fonts/typecatcher/Open Sans_italic.ttf: Open Sans:style=Italic\n/usr/share/fonts/truetype/noto/NotoSansOriyaUI-Bold.ttf: Noto Sans Oriya UI:style=Bold\n/usr/share/fonts/truetype/noto/NotoSerifGujarati-Bold.ttf: Noto Serif Gujarati:style=Bold\n/usr/share/fonts/truetype/tlwg/Kinnari-Oblique.ttf: Kinnari:style=Oblique\n/usr/share/fonts/truetype/tlwg/Umpush-BoldOblique.ttf: Umpush:style=Bold Oblique\n/usr/share/fonts/opentype/stix/STIXIntegralsD-Regular.otf: STIXIntegralsD:style=Regular\n/usr/share/fonts/truetype/lato/Lato-Black.ttf: Lato,Lato Black:style=Black,Regular\n/usr/share/fonts/truetype/noto/NotoSerifArmenian-Regular.ttf: Noto Serif Armenian:style=Regular\n/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Regular.ttf: Liberation Sans Narrow:style=Regular\n/usr/share/fonts/truetype/noto/NotoSansBalinese-Regular.ttf: Noto Sans Balinese:style=Regular\n/usr/share/fonts/truetype/noto/NotoSans-Bold.ttf: Noto Sans:style=Bold\n/usr/share/fonts/truetype/tlwg/Umpush-Oblique.ttf: Umpush:style=Oblique\n/usr/share/fonts/truetype/noto/NotoSerifKhmer-Regular.ttf: Noto Serif Khmer:style=Regular\n/usr/share/fonts/type1/gsfonts/d050000l.pfb: Dingbats:style=Regular\n/usr/share/fonts/truetype/dejavu/DejaVuSerif-BoldItalic.ttf: DejaVu Serif:style=Bold Italic\n/usr/share/fonts/truetype/noto/NotoSansJavanese-Regular.ttf: Noto Sans Javanese:style=Regular\n/usr/share/fonts/truetype/tlwg/Sawasdee-Bold.ttf: Sawasdee:style=Bold\n/home/ravenskrag/.fonts/typecatcher/Noto Serif_700italic.ttf: Noto Serif:style=Bold Italic\n/usr/share/fonts/opentype/noto/NotoSansCJK-Black.ttc: Noto Sans CJK SC,Noto Sans CJK SC Black:style=Black,Regular\n/usr/share/fonts/truetype/noto/NotoSerifMalayalam-Regular.ttf: Noto Serif Malayalam:style=Regular\n/usr/share/fonts/truetype/noto/NotoSansLinearB-Regular.ttf: Noto Sans Linear B:style=Regular\n/usr/share/fonts/truetype/noto/NotoSansKannada-Bold.ttf: Noto Sans Kannada:style=Bold\n/usr/share/fonts/truetype/kacst/KacstScreen.ttf: KacstScreen:style=Medium,KacstScreen\n/usr/share/fonts/truetype/noto/NotoSansLycian-Regular.ttf: Noto Sans Lycian:style=Regular\n/usr/share/fonts/truetype/noto/NotoSansThai-Bold.ttf: Noto Sans Thai:style=Bold\n/usr/share/fonts/truetype/kacst/KacstArt.ttf: KacstArt:style=Medium\n/usr/share/fonts/opentype/noto/NotoSansCJK-Bold.ttc: Noto Sans Mono CJK TC,Noto Sans Mono CJK TC Bold:style=Bold,Regular\n/usr/share/fonts/truetype/noto/NotoSansShavian-Regular.ttf: Noto Sans Shavian:style=Regular\n/usr/share/fonts/truetype/noto/NotoSansBengali-Bold.ttf: Noto Sans Bengali:style=Bold\n/usr/share/fonts/opentype/stix-word/STIX-Regular.otf: STIX:style=Regular\n/usr/share/fonts/opentype/stix/STIXSizeThreeSym-Bold.otf: STIXSizeThreeSym:style=Bold\n/usr/share/fonts/type1/gsfonts/n021023l.pfb: Nimbus Roman No9 L:style=Regular Italic\n/usr/share/fonts/truetype/noto/NotoSansYi-Regular.ttf: Noto Sans Yi:style=Regular\n/usr/share/fonts/truetype/fonts-guru-extra/Saab.ttf: Saab:style=Regular\n/usr/share/fonts/opentype/stix/STIXIntegralsD-Bold.otf: STIXIntegralsD:style=Bold\n/usr/share/fonts/X11/Type1/c0611bt_.pfb: Courier 10 Pitch:style=Bold Italic\n/usr/share/fonts/opentype/stix/STIXIntegralsUpD-Bold.otf: STIXIntegralsUpD:style=Bold\n/usr/share/fonts/truetype/noto/NotoSansOlChiki-Regular.ttf: Noto Sans Ol Chiki:style=Regular\n/usr/share/fonts/truetype/ttf-dejavu/DejaVuSans.ttf: DejaVu Sans:style=Book\n/usr/share/fonts/truetype/noto/NotoSansLydian-Regular.ttf: Noto Sans Lydian:style=Regular\n/usr/share/fonts/opentype/stix/STIXNonUnicode-Regular.otf: STIXNonUnicode:style=Regular\n/usr/share/fonts/truetype/noto/NotoSansTagalog-Regular.ttf: Noto Sans Tagalog:style=Regular\n/usr/share/fonts/truetype/noto/NotoSansOsmanya-Regular.ttf: Noto Sans Osmanya:style=Regular\n/usr/share/fonts/truetype/noto/NotoSansHanunoo-Regular.ttf: Noto Sans Hanunoo:style=Regular\n/usr/share/fonts/truetype/noto/NotoSansBamum-Regular.ttf: Noto Sans Bamum:style=Regular\n/usr/share/fonts/type1/gsfonts/n019063l.pfb: Nimbus Sans L:style=Regular Condensed Italic\n/usr/share/fonts/truetype/noto/NotoSansDevanagari-Bold.ttf: Noto Sans Devanagari:style=Bold\n/usr/share/fonts/opentype/noto/NotoSansCJK-Regular.ttc: Noto Sans CJK KR,Noto Sans CJK KR Regular:style=Regular\n/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Oblique.ttf: DejaVu Sans Mono:style=Oblique\n/usr/share/fonts/truetype/nanum/NanumGothic.ttf: NanumGothic,나눔고딕:style=Regular\n/usr/share/fonts/truetype/noto/NotoSansKhmerUI-Bold.ttf: Noto Sans Khmer UI:style=Bold\n/usr/share/fonts/truetype/noto/NotoSansEthiopic-Regular.ttf: Noto Sans Ethiopic:style=Regular\n/usr/share/fonts/truetype/dejavu/DejaVuSerifCondensed-Bold.ttf: DejaVu Serif,DejaVu Serif Condensed:style=Condensed Bold,Bold\n/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf: DejaVu Sans:style=Bold\n/usr/share/fonts/truetype/tlwg/Norasi-BoldItalic.ttf: Norasi:style=Bold Italic\n/usr/share/fonts/truetype/noto/NotoSansOriya-Bold.ttf: Noto Sans Oriya:style=Bold\n/usr/share/fonts/truetype/noto/NotoSansGeorgian-Regular.ttf: Noto Sans Georgian:style=Regular\n/usr/share/fonts/truetype/liberation/LiberationSerif-Bold.ttf: Liberation Serif:style=Bold\n/usr/share/fonts/truetype/dejavu/DejaVuSansMono-BoldOblique.ttf: DejaVu Sans Mono:style=Bold Oblique\n/usr/share/fonts/truetype/tlwg/Laksaman-Bold.ttf: Laksaman:style=Bold\n/usr/share/fonts/truetype/tlwg/Purisa-Bold.ttf: Purisa:style=Bold\n/home/ravenskrag/.fonts/typecatcher/Noto Sans_700italic.ttf: Noto Sans:style=Bold Italic\n/usr/share/fonts/type1/gsfonts/a010013l.pfb: URW Gothic L:style=Book\n/usr/share/fonts/opentype/stix/STIXNonUnicode-Bold.otf: STIXNonUnicode:style=Bold\n/usr/share/fonts/opentype/stix/STIXIntegralsUp-Regular.otf: STIXIntegralsUp:style=Regular\n/usr/share/fonts/opentype/noto/NotoSansCJK-Light.ttc: Noto Sans CJK SC,Noto Sans CJK SC Light:style=Light,Regular\n/usr/share/fonts/truetype/noto/NotoSansLaoUI-Bold.ttf: Noto Sans Lao UI:style=Bold\n/usr/share/fonts/truetype/tlwg/Waree-Oblique.ttf: Waree:style=Oblique\n/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOS.ttf: Khmer OS:style=Regular\n/usr/share/fonts/truetype/lato/Lato-Light.ttf: Lato,Lato Light:style=Light,Regular\n/usr/share/fonts/truetype/noto/NotoSansGurmukhiUI-Regular.ttf: Noto Sans Gurmukhi UI:style=Regular\n/usr/share/fonts/truetype/noto/NotoSansGurmukhi-Regular.ttf: Noto Sans Gurmukhi:style=Regular\n/usr/share/fonts/truetype/liberation/LiberationMono-Regular.ttf: Liberation Mono:style=Regular\n/usr/share/fonts/truetype/noto/NotoSans-Italic.ttf: Noto Sans:style=Italic\n/usr/share/fonts/opentype/stix/STIXIntegralsUpSm-Bold.otf: STIXIntegralsUpSm:style=Bold\n/usr/share/fonts/truetype/noto/NotoSansKharoshthi-Regular.ttf: Noto Sans Kharoshthi:style=Regular\n/usr/share/fonts/truetype/noto/NotoSansArmenian-Regular.ttf: Noto Sans Armenian:style=Regular\n/usr/share/fonts/truetype/noto/NotoSansRejang-Regular.ttf: Noto Sans Rejang:style=Regular\n/usr/share/fonts/truetype/tlwg/Norasi-BoldOblique.ttf: Norasi:style=Bold Oblique\n/usr/share/fonts/truetype/lato/Lato-Regular.ttf: Lato:style=Regular\n/usr/share/fonts/opentype/noto/NotoSansCJK-Medium.ttc: Noto Sans CJK KR,Noto Sans CJK KR Medium:style=Medium,Regular\n/usr/share/fonts/truetype/ancient-scripts/Symbola_hint.ttf: Symbola:style=Regular\n/usr/share/fonts/opentype/noto/NotoSansCJK-Bold.ttc: Noto Sans Mono CJK SC,Noto Sans Mono CJK SC Bold:style=Bold,Regular\n/usr/share/fonts/truetype/noto/NotoSansMeeteiMayek-Regular.ttf: Noto Sans Meetei Mayek:style=Regular\n/usr/share/fonts/truetype/ttf-dejavu/DejaVuSansMono-Bold.ttf: DejaVu Sans Mono:style=Bold\n/usr/share/fonts/truetype/tlwg/Garuda-Bold.ttf: Garuda:style=Bold\n/usr/share/fonts/truetype/noto/NotoSansDevanagariUI-Bold.ttf: Noto Sans Devanagari UI:style=Bold\n/usr/share/fonts/type1/gsfonts/n019064l.pfb: Nimbus Sans L:style=Bold Condensed Italic\n/usr/share/fonts/truetype/liberation/LiberationSans-Italic.ttf: Liberation Sans:style=Italic\n/usr/share/fonts/opentype/noto/NotoSansCJK-Regular.ttc: Noto Sans Mono CJK JP,Noto Sans Mono CJK JP Regular:style=Regular\n/usr/share/fonts/truetype/noto/NotoSerif-Regular.ttf: Noto Serif:style=Regular\n/usr/share/fonts/truetype/tlwg/Loma.ttf: Loma:style=Regular\n/usr/share/fonts/truetype/tlwg/TlwgTypist-Oblique.ttf: Tlwg Typist:style=Oblique\n/usr/share/fonts/truetype/dejavu/DejaVuSansCondensed-BoldOblique.ttf: DejaVu Sans,DejaVu Sans Condensed:style=Condensed Bold Oblique,Bold Oblique\n/usr/share/fonts/opentype/stix/STIXGeneral-Bold.otf: STIXGeneral:style=Bold\n/usr/share/fonts/truetype/fonts-japanese-gothic.ttf: TakaoPGothic,Takao Pゴシック:style=Regular\n/usr/share/fonts/truetype/noto/NotoSansTaiViet-Regular.ttf: Noto Sans Tai Viet:style=Regular\n/usr/share/fonts/type1/gsfonts/p052004l.pfb: URW Palladio L:style=Bold\n/usr/share/fonts/truetype/ubuntu-font-family/Ubuntu-RI.ttf: Ubuntu:style=Italic\n/usr/share/fonts/truetype/noto/NotoSansBuhid-Regular.ttf: Noto Sans Buhid:style=Regular\n/usr/share/fonts/truetype/noto/NotoSansThaana-Bold.ttf: Noto Sans Thaana:style=Bold\n/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOSsys.ttf: Khmer OS System:style=Regular\n/usr/share/fonts/truetype/noto/NotoSansTamil-Bold.ttf: Noto Sans Tamil:style=Bold\n/usr/share/fonts/truetype/oxygen/Oxygen-Sans.ttf: Oxygen\\-Sans:style=Sans-Book\n/usr/share/fonts/truetype/noto/NotoSansNKo-Regular.ttf: Noto Sans NKo:style=Regular\n/usr/share/fonts/truetype/noto/NotoSansDeseret-Regular.ttf: Noto Sans Deseret:style=Regular\n/usr/share/fonts/truetype/lato/Lato-ThinItalic.ttf: Lato,Lato Thin:style=Thin Italic,Italic\n/usr/share/fonts/opentype/noto/NotoSansCJK-Bold.ttc: Noto Sans CJK TC,Noto Sans CJK TC Bold:style=Bold,Regular\n/usr/share/fonts/truetype/noto/NotoSansSyriacEstrangela-Regular.ttf: Noto Sans Syriac Estrangela:style=Regular\n/usr/share/fonts/truetype/nanum/NanumBarunGothicBold.ttf: NanumBarunGothic,나눔바른고딕:style=Bold\n/usr/share/fonts/truetype/tlwg/Purisa-BoldOblique.ttf: Purisa:style=Bold Oblique\n/usr/share/fonts/opentype/noto/NotoSansCJK-DemiLight.ttc: Noto Sans CJK JP,Noto Sans CJK JP DemiLight:style=DemiLight,Regular\n/usr/share/fonts/opentype/noto/NotoSansCJK-Thin.ttc: Noto Sans CJK JP,Noto Sans CJK JP Thin:style=Thin,Regular\n/usr/share/fonts/opentype/stix/STIXVariants-Regular.otf: STIXVariants:style=Regular\n/usr/share/fonts/truetype/noto/NotoSansInscriptionalPahlavi-Regular.ttf: Noto Sans Inscriptional Pahlavi:style=Regular\n/usr/share/fonts/truetype/noto/NotoSansCham-Regular.ttf: Noto Sans Cham:style=Regular\n/usr/share/fonts/truetype/liberation/LiberationSerif-BoldItalic.ttf: Liberation Serif:style=Bold Italic\n/usr/share/fonts/truetype/dejavu/DejaVuSansCondensed.ttf: DejaVu Sans,DejaVu Sans Condensed:style=Condensed,Book\n/usr/share/fonts/opentype/stix/STIXGeneral-Regular.otf: STIXGeneral:style=Regular\n/usr/share/fonts/truetype/noto/NotoSansLepcha-Regular.ttf: Noto Sans Lepcha:style=Regular\n/usr/share/fonts/truetype/noto/NotoSansLao-Regular.ttf: Noto Sans Lao:style=Regular\n/usr/share/fonts/opentype/noto/NotoSansCJK-Light.ttc: Noto Sans CJK JP,Noto Sans CJK JP Light:style=Light,Regular\n/usr/share/fonts/truetype/freefont/FreeSerif.ttf: FreeSerif:style=Regular,нормален,normal,obyčejné,Mittel,µεσαία,Normaali,Normál,Normale,Gemiddeld,odmiana zwykła,Обычный,Normálne,ปกติ,menengah,прямій,Navadno,vidējs,normalusis,عادی,vừa,Arrunta,सामान्य\n/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Bold.ttf: Tlwg Typewriter:style=Bold\n/usr/share/fonts/type1/gsfonts/n022023l.pfb: Nimbus Mono L:style=Regular Oblique\n/usr/share/fonts/truetype/tlwg/TlwgTypo.ttf: Tlwg Typo:style=Regular\n/usr/share/fonts/truetype/abyssinica/AbyssinicaSIL-R.ttf: Abyssinica SIL:style=Regular\n/usr/share/fonts/truetype/freefont/FreeMonoOblique.ttf: FreeMono:style=Oblique,наклонен,cursiva,kurzíva,kursiv,Πλάγια,Kursivoitu,Italique,Dőlt,Corsivo,Cursief,Kursywa,Itálico,oblic,Курсив,İtalik,huruf miring,похилий,ležeče,slīpraksts,pasvirasis,nghiêng,Etzana,तिरछा\n/usr/share/fonts/truetype/noto/NotoSerif-Italic.ttf: Noto Serif:style=Italic\n/usr/share/fonts/opentype/stix/STIXSizeTwoSym-Regular.otf: STIXSizeTwoSym:style=Regular\n/usr/share/fonts/truetype/tlwg/Norasi-Bold.ttf: Norasi:style=Bold\n/home/ravenskrag/.fonts/typecatcher/Noto Sans_regular.ttf: Noto Sans:style=Regular\n/usr/share/fonts/truetype/tlwg/Sawasdee-Oblique.ttf: Sawasdee:style=Oblique\n/usr/share/fonts/truetype/noto/NotoSansMyanmarUI-Regular.ttf: Noto Sans Myanmar UI:style=Regular\n/usr/share/fonts/truetype/tlwg/Kinnari-Bold.ttf: Kinnari:style=Bold\n/usr/share/fonts/truetype/noto/NotoSerifGeorgian-Regular.ttf: Noto Serif Georgian:style=Regular\n/usr/share/fonts/truetype/noto/NotoSansKhmerUI-Regular.ttf: Noto Sans Khmer UI:style=Regular\n/usr/share/fonts/truetype/noto/NotoSansMalayalamUI-Bold.ttf: Noto Sans Malayalam UI:style=Bold\n/usr/share/fonts/truetype/noto/NotoSansOldTurkic-Regular.ttf: Noto Sans Old Turkic:style=Regular\n/usr/share/fonts/truetype/noto/NotoSansEgyptianHieroglyphs-Regular.ttf: Noto Sans Egyptian Hieroglyphs:style=Regular\n/usr/share/fonts/truetype/noto/NotoSerifLao-Bold.ttf: Noto Serif Lao:style=Bold\n/usr/share/fonts/opentype/noto/NotoSansCJK-Thin.ttc: Noto Sans CJK KR,Noto Sans CJK KR Thin:style=Thin,Regular\n/usr/share/fonts/type1/gsfonts/a010015l.pfb: URW Gothic L:style=Demi\n/usr/share/fonts/truetype/noto/NotoSansOriyaUI-Regular.ttf: Noto Sans Oriya UI:style=Regular\n/usr/share/fonts/truetype/tlwg/Umpush-Light.ttf: Umpush:style=Light\n/usr/share/fonts/truetype/noto/NotoSansDevanagari-Regular.ttf: Noto Sans Devanagari:style=Regular\n/usr/share/fonts/opentype/noto/NotoSansCJK-Regular.ttc: Noto Sans Mono CJK KR,Noto Sans Mono CJK KR Regular:style=Regular\n/usr/share/fonts/truetype/tlwg/Waree-BoldOblique.ttf: Waree:style=Bold Oblique\n/home/ravenskrag/.fonts/typecatcher/Open Sans_300.ttf: Open Sans,Open Sans Light:style=Light,Regular\n/usr/share/fonts/truetype/ubuntu-font-family/Ubuntu-R.ttf: Ubuntu:style=Regular\n/usr/share/fonts/truetype/dejavu/DejaVuSansCondensed-Bold.ttf: DejaVu Sans,DejaVu Sans Condensed:style=Condensed Bold,Bold\n/usr/share/fonts/truetype/liberation/LiberationSansNarrow-BoldItalic.ttf: Liberation Sans Narrow:style=Bold Italic\n/usr/share/fonts/opentype/stix-word/STIX-Bold.otf: STIX:style=Bold\n/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Bold.ttf: DejaVu Sans Mono:style=Bold\n/usr/share/fonts/truetype/freefont/FreeSansBoldOblique.ttf: FreeSans:style=Bold Oblique,получерен наклонен,negreta cursiva,tučné kurzíva,fed kursiv,Fett-Kursiv,Έντονη Πλάγια,Negrita Cursiva,Lihavoitu Kursivoi,Gras Italique,Félkövér dőlt,Grassetto Corsivo,Vet Cursief,Halvfet Kursiv,Pogrubiona kursywa,Negrito Itálico,gros oblic,Обычный Курсив,Tučná kurzíva,Fet Kursiv,Kalın İtalik,huruf tebal miring,жирний похилий,polkrepko ležeče,treknais  slīpraksts,pusjuodis pasvirasis,nghiêng đậm,Lodi etzana,धृष्ट-तिरछा\n/usr/share/fonts/truetype/tlwg/Garuda-Oblique.ttf: Garuda:style=Oblique\n/usr/share/fonts/truetype/ubuntu-font-family/Ubuntu-C.ttf: Ubuntu Condensed:style=Regular\n/usr/share/fonts/opentype/noto/NotoSansCJK-Thin.ttc: Noto Sans CJK SC,Noto Sans CJK SC Thin:style=Thin,Regular\n/usr/share/fonts/type1/gsfonts/n019043l.pfb: Nimbus Sans L:style=Regular Condensed\n/usr/share/fonts/truetype/dejavu/DejaVuSans-Oblique.ttf: DejaVu Sans:style=Oblique\n/usr/share/fonts/truetype/kacst/KacstDecorative.ttf: KacstDecorative:style=Medium\n/usr/share/fonts/truetype/sinhala/lklug.ttf: LKLUG:style=Regular\n/usr/share/fonts/opentype/noto/NotoSansCJK-Bold.ttc: Noto Sans CJK SC,Noto Sans CJK SC Bold:style=Bold,Regular\n/usr/share/fonts/truetype/ttf-dejavu/DejaVuSerif-Bold.ttf: DejaVu Serif:style=Bold\n/usr/share/fonts/truetype/noto/NotoSansMalayalamUI-Regular.ttf: Noto Sans Malayalam UI:style=Regular\n/usr/share/fonts/truetype/noto/NotoSansBuginese-Regular.ttf: Noto Sans Buginese:style=Regular\n/usr/share/fonts/type1/gsfonts/n019044l.pfb: Nimbus Sans L:style=Bold Condensed\n/usr/share/fonts/truetype/padauk/Padauk-book.ttf: Padauk Book,áá­áá¯á¶á¸áá²,á??á?¬á??á?¯á?¶á?¸á??á??\n",
			"settings":
			{
				"buffer_size": 27172,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "(gdb) info args \nfontname = \"/home/ravenskrag/Desktop/gem_structure/ext/oF_apps/testApp/bin/data/TakaoPGothic\"\n(gdb) info locals \nfilename = \"/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf\"\npattern = 0xbcced0\nret = 1\nresult = FcResultMatch\nfontMatch = 0xc0c520\nfile = 0xc235e0 \"\\320\\307\\300\"\n(gdb) info line \nLine 442 of \"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/graphics/ofTrueTypeFont.cpp\"\n   starts at address 0x7ffff77fbf99 <linuxFontPathByName(std::__cxx11::string const&)+1075>\n   and ends at 0x7ffff77fbfb2 <linuxFontPathByName(std::__cxx11::string const&)+1100>.\n\n(gdb) info breakpoints \nNum     Type           Disp Enb Address            What\n1       breakpoint     keep y   0x00007ffff77fc132 in loadFontFace(boost::filesystem::path const&, FT_Face&, boost::filesystem::path&) \n                                                   at /home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/graphics/ofTrueTypeFont.cpp:450\n\tbreakpoint already hit 1 time\n2       breakpoint     keep y   0x00007ffff77fc70a in loadFontFace(boost::filesystem::path const&, FT_Face&, boost::filesystem::path&) \n                                                   at /home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/graphics/ofTrueTypeFont.cpp:501\n3       breakpoint     keep y   0x00007ffff77fc315 in loadFontFace(boost::filesystem::path const&, FT_Face&, boost::filesystem::path&) \n                                                   at /home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/graphics/ofTrueTypeFont.cpp:462\n\tbreakpoint already hit 1 time\n4       breakpoint     keep y   0x00007ffff77fbb8f in linuxFontPathByName(std::__cxx11::string const&) \n                                                   at /home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/graphics/ofTrueTypeFont.cpp:413\n\tbreakpoint already hit 1 time\n5       breakpoint     keep y   0x00007ffff77fbf99 in linuxFontPathByName(std::__cxx11::string const&) \n                                                   at /home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/graphics/ofTrueTypeFont.cpp:442\n\tbreakpoint already hit 1 time\n6       breakpoint     keep y   0x00007ffff77fbe28 in linuxFontPathByName(std::__cxx11::string const&) \n                                                   at /home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/graphics/ofTrueTypeFont.cpp:432\n\tbreakpoint already hit 1 time\n",
			"settings":
			{
				"buffer_size": 2549,
				"line_ending": "Unix",
				"name": "(gdb) info args"
			}
		},
		{
			"contents": "// /home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/graphics/ofTrueTypeFont.cpp\nstatic std::string linuxFontPathByName(const std::string& fontname){\n\n...\n\n\n// line 431 .. 434\n\tFcChar8\t*file;\n\tif (FcPatternGetString (fontMatch, FC_FILE, 0, &file) == FcResultMatch){\n\t\tfilename = (const char*)file;\n\t}else{",
			"settings":
			{
				"buffer_size": 333,
				"line_ending": "Unix"
			}
		},
		{
			"file": "ext/openFrameworks/libs/openFrameworks/utils/ofUtils.cpp",
			"settings":
			{
				"buffer_size": 35429,
				"line_ending": "Unix"
			}
		},
		{
			"file": "ext/openFrameworks/libs/openFrameworks/utils/ofUtils.h",
			"settings":
			{
				"buffer_size": 33920,
				"line_ending": "Unix"
			}
		},
		{
			"file": "ext/openFrameworks/libs/openFrameworks/ofMain.h",
			"settings":
			{
				"buffer_size": 2392,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "---",
			"settings":
			{
				"buffer_size": 3,
				"line_ending": "Unix",
				"name": "---"
			}
		},
		{
			"file": "lib/rubyOF/freezable.rb",
			"settings":
			{
				"buffer_size": 837,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "NOTE: getting segfault when ruby code throws exception. make sure that the c++ layer is correctly insulated, so it can exit properly at the next earliest convenience when Ruby-level errors / exceptions occur.",
			"settings":
			{
				"buffer_size": 208,
				"line_ending": "Unix",
				"name": "NOTE: getting segfault when ruby code throws excep"
			}
		},
		{
			"file": "/home/ravenskrag/Projects/2_Personal/Current/RubyCPP/Oni/lib/projects/Scope/bin/main.rb",
			"settings":
			{
				"buffer_size": 10738,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "ext/openFrameworks/libs/openFrameworks/app/ofAppGLFWWindow.cpp",
			"settings":
			{
				"buffer_size": 49487,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 750.0,
		"last_filter": "yaml",
		"selected_items":
		[
			[
				"yaml",
				"Set Syntax: YAML"
			],
			[
				"gig",
				"Git GUI Clients: Gitg"
			],
			[
				"amke",
				"Set Syntax: Makefile"
			],
			[
				"make",
				"Set Syntax: Makefile"
			],
			[
				"comm",
				"Git: Commit"
			],
			[
				"disa",
				"Package Control: Disable Package"
			],
			[
				"package",
				"Package Control: Enable Package"
			],
			[
				"commi",
				"Git: Commit"
			],
			[
				"com",
				"Git: Commit"
			],
			[
				"gitg",
				"Git GUI Clients: Gitg"
			],
			[
				"commit",
				"Git: Commit"
			],
			[
				"add",
				"Git: Add Current File"
			],
			[
				"git comm",
				"Git: Commit"
			],
			[
				"git add",
				"Git: Add Current File"
			],
			[
				"kra",
				"Git GUI Clients: GitKraken"
			],
			[
				"kr",
				"Git GUI Clients: GitKraken"
			],
			[
				"kraken",
				"Git GUI Clients: GitKraken"
			],
			[
				"makefil",
				"Set Syntax: Makefile"
			],
			[
				"ging",
				"Git GUI Clients: Gitg"
			],
			[
				"ruby",
				"Set Syntax: Ruby"
			],
			[
				"rub",
				"SublimeREPL: Ruby"
			],
			[
				"yam",
				"Set Syntax: YAML"
			],
			[
				"pacage",
				"Package Control: Enable Package"
			],
			[
				"g",
				"Git GUI Clients: Gitg"
			],
			[
				"makefile",
				"Set Syntax: Makefile"
			],
			[
				"c++",
				"Set Syntax: Objective-C++"
			],
			[
				"objec",
				"Set Syntax: Objective-C"
			],
			[
				"lua",
				"Set Syntax: Lua"
			],
			[
				"pyth",
				"Set Syntax: Python"
			],
			[
				"makef",
				"Set Syntax: Makefile"
			],
			[
				"packag",
				"Package Control: Install Package"
			],
			[
				"irb",
				"SublimeREPL: Ruby IRB (deprecated)"
			],
			[
				"ruby ",
				"SublimeREPL: Ruby"
			],
			[
				"python",
				"SublimeREPL: Python"
			],
			[
				"r oc",
				"SublimeREPL: Octave"
			],
			[
				"repl o",
				"SublimeREPL: Octave"
			],
			[
				"octav",
				"SublimeREPL: Octave"
			],
			[
				"repl ruby",
				"SublimeREPL: Ruby"
			],
			[
				"repl ru",
				"SublimeREPL: Ruby"
			],
			[
				"repl",
				"SublimeREPL: Octave"
			],
			[
				"repl rub",
				"SublimeREPL: Ruby"
			],
			[
				"repl j",
				"SublimeREPL: Clojure"
			],
			[
				"mal",
				"Set Syntax: MATLAB"
			],
			[
				"matl",
				"Set Syntax: MATLAB"
			],
			[
				"keyb",
				"Preferences: Key Bindings - User"
			],
			[
				"mat",
				"Set Syntax: MATLAB"
			],
			[
				"package en",
				"Package Control: Upgrade Package"
			],
			[
				"package dis",
				"Package Control: Disable Package"
			],
			[
				"matlab",
				"Set Syntax: MATLAB"
			],
			[
				"repl oca",
				"SublimeREPL: Octave"
			],
			[
				"repl octa",
				"SublimeREPL: Octave"
			],
			[
				"install p",
				"Package Control: Install Package"
			],
			[
				"package in",
				"Package Control: Install Package"
			],
			[
				"text",
				"Set Syntax: Plain Text"
			],
			[
				"mark",
				"Set Syntax: Markdown"
			],
			[
				"todo",
				"Show TODOs: Project and open files"
			],
			[
				"wra",
				"Word Wrap: Toggle"
			],
			[
				"pla",
				"Set Syntax: Plain Text"
			],
			[
				"pack",
				"Package Control: Disable Package"
			],
			[
				"tod",
				"Show TODOs: Project and open files"
			],
			[
				"to",
				"Show TODOs: Project and open files"
			],
			[
				"",
				"About"
			],
			[
				"pac",
				"Package Control: List Packages"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"log",
				"Git: Log Current File"
			],
			[
				"st",
				"Git: Status"
			],
			[
				"stat",
				"Git: Status"
			],
			[
				"pre",
				"Markdown Preview: preview in Browser"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"pr",
				"Markdown Preview: preview in Browser"
			],
			[
				"previe",
				"Markdown Preview: preview in Browser"
			],
			[
				"snipp",
				"Snippet: if … end"
			],
			[
				"snip",
				"Snippet: YAML.load(file)"
			],
			[
				"prefer",
				"Preferences: Settings - User"
			],
			[
				"key",
				"Preferences: Key Bindings - User"
			],
			[
				"vie",
				"Markdown Preview: preview in Browser"
			],
			[
				"pa",
				"Package Control: List Packages"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"reve",
				"File: Revert"
			],
			[
				"markdown",
				"Markdown Preview: preview in Sublime Text"
			],
			[
				"view",
				"Markdown Preview: preview in Browser"
			],
			[
				"prev",
				"Markdown Preview: preview in Browser"
			],
			[
				"smark",
				"Set Syntax: Markdown"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"brow",
				"Preferences: Browse Packages"
			],
			[
				"bro",
				"Preferences: Browse Packages"
			],
			[
				"git pu",
				"Git: Push"
			],
			[
				"fet",
				"Git: Fetch"
			],
			[
				"syntax te",
				"Set Syntax: Textile"
			],
			[
				"lo",
				"Git: Log All"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"oto",
				"Show TODOs: Open files only"
			],
			[
				"show",
				"Show TODOs: Project and open files"
			],
			[
				"list",
				"Package Control: List Packages"
			],
			[
				"pcaka",
				"Package Control: Install Package"
			],
			[
				"pcak",
				"Package Control: Discover Packages"
			],
			[
				"anno",
				"Git: Toggle Annotations"
			]
		],
		"width": 1014.0
	},
	"console":
	{
		"height": 259.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/ravenskrag/Desktop/gem_structure",
		"/home/ravenskrag/Desktop/gem_structure/ext"
	],
	"file_history":
	[
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/app/ofAppRunner.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/oF_apps/testApp/Makefile.static_lib.debug",
		"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/rice.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxEmscripten/src/ofxEmscriptenSoundPlayer.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/utils/ofLog.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/utils/ofLog.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/oF_apps/testApp/Makefile",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/app/ofBaseApp.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/oF_apps/testApp/oF_build_variables.yaml",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/.gitignore",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/input_output/clipboardExample/src/ofApp.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/input_output/clipboardExample/src/ofApp.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/strings/stdRegulaExpressionExample/src/ofApp.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/strings/sortingExample/src/ofApp.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/strings/stdRegulaExpressionExample/src/ofApp.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/strings/sortingExample/src/ofApp.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/strings/regularExpressionExample/src/ofApp.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/strings/regularExpressionExample/src/ofApp.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/strings/ofLogExample/src/ofApp.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/strings/ofLogExample/src/ofApp.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/strings/conversionExample/src/ofApp.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/strings/conversionExample/src/ofApp.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/events/advancedEventsExample/src/eventsObject.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/compile_commands.json",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/graphics/ofTrueTypeFont.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/oF_apps/testApp/src/main.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofTexture.h",
		"/home/ravenskrag/Desktop/gem_structure/compile_commands.json",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/graphics/ofImage.cpp",
		"/home/ravenskrag/Projects/2_Personal/Current/RubyCPP/Oni/lib/projects/template/main.rb",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/gl/pointsAsTexturesExample/src/ofApp.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/utils/ofFileUtils.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/utils/ofFileUtils.h",
		"/home/ravenskrag/Projects/2_Personal/Current/RubyCPP/Oni/lib/projects/ThoughtTrace/bin/main.rb",
		"/home/ravenskrag/Projects/2_Personal/Current/RubyCPP/Oni/ext/oni/cpp/lib/Graphics.cpp",
		"/home/ravenskrag/Projects/2_Personal/Current/RubyCPP/Oni/ext/oni/cpp/lib/Graphics.h",
		"/home/ravenskrag/Projects/2_Personal/Current/RubyCPP/Oni/ext/oni/cpp/lib/TrueTypeFont.cpp",
		"/home/ravenskrag/Projects/2_Personal/Current/RubyCPP/Oni/ext/oni/cpp/lib/TrueTypeFont.h",
		"/home/ravenskrag/Projects/2_Personal/Current/RubyCPP/Oni/ext/oni/cpp/lib/Fbo.h",
		"/home/ravenskrag/Projects/2_Personal/Current/RubyCPP/Oni/ext/oni/cpp/lib/Fbo.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/glm/include/glm/glm.hpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofFbo.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofFbo.h",
		"/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/freezable.rb",
		"/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/version.rb",
		"/home/ravenskrag/Desktop/gem_structure/lib/rubyOF.rb",
		"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/extconf.rb",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/apps/projectGenerator/scripts/linux/buildPG.sh",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/apps/projectGenerator/commandLine/Makefile",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworksCompiled/project/Makefile",
		"/home/ravenskrag/Projects/2_Personal/Current/RubyCPP/Oni/ext/oni/cpp/testApp/Makefile.static_lib",
		"/home/ravenskrag/Desktop/gem_structure/ext/oF_apps/testApp/config.make",
		"/home/ravenskrag/Desktop/gem_structure/ext/oF_apps/testApp/obj/linux64/Release/src/main.d",
		"/home/ravenskrag/Desktop/gem_structure/README.md",
		"/home/ravenskrag/Desktop/gem_structure/ext/of_apps/README.txt",
		"/home/ravenskrag/Desktop/gem_structure/ext/oF_apps/README.txt",
		"/home/ravenskrag/Projects/2_Personal/Current/RubyCPP/Oni/build_libs/common.rb",
		"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/app.h",
		"/home/ravenskrag/Projects/2_Personal/Current/RubyCPP/Oni/ext/oni/cpp/testApp/src/ofApp.h",
		"/home/ravenskrag/Projects/2_Personal/Current/RubyCPP/Oni/ext/oni/cpp/testApp/src/ofApp.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/oF_apps/testApp/raw_oF_variables.yaml",
		"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/Fbo.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworksCompiled/project/makefileCommon/config.shared.mk",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/scripts/linux/download_libs.sh",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/scripts/dev/download_libs.sh",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/scripts/android/download_libs.sh",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/scripts/linux/compileOF.sh",
		"/home/ravenskrag/Desktop/gem_structure/build/common.rb",
		"/home/ravenskrag/Desktop/gem_structure/build/Rakefile",
		"/home/ravenskrag/Desktop/gem structure/.gitignore",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/.gitmodules",
		"/home/ravenskrag/Desktop/gem_structure/.gitmodules",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/.git",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/scripts/apothecary/.git",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/apps/projectGenerator/.git",
		"/home/ravenskrag/Desktop/gem_structure/.git/index",
		"/home/ravenskrag/Desktop/gem structure/ext/openFrameworks/apps/projectGenerator/commandLine/Makefile",
		"/home/ravenskrag/Desktop/gem structure/ext/openFrameworks/apps/projectGenerator/scripts/linux/buildPG.sh",
		"/home/ravenskrag/Desktop/gem structure/ext/openFrameworks/README.md",
		"/home/ravenskrag/Desktop/gem structure/ext/openFrameworks/apps/projectGenerator/commandLine/readme.md",
		"/home/ravenskrag/Desktop/gem structure/ext/rubyOF/extconf.rb",
		"/home/ravenskrag/Desktop/gem structure/build/Rakefile",
		"/home/ravenskrag/Desktop/gem structure/ext/of_apps/README.txt",
		"/home/ravenskrag/Desktop/gem structure/README.md",
		"/home/ravenskrag/Desktop/gem structure/lib/rubyOF.rb",
		"/home/ravenskrag/Desktop/gem structure/lib/ruby_of/version.rb",
		"/home/ravenskrag/Desktop/gem structure/configurator.rb",
		"/home/ravenskrag/Desktop/gem structure/config.yaml",
		"/home/ravenskrag/Code/Source/OpenFrameworks/of_v0.9.3_linux64_release/apps/projectGenerator/commandLine/readme.md",
		"/home/ravenskrag/Code/Source/OpenFrameworks/of_v0.9.3_linux64_release/apps/projectGenerator/commandLine/Makefile",
		"/home/ravenskrag/Desktop/gem structure/bin/apps/README.txt",
		"/home/ravenskrag/Desktop/gem structure/docs/notes.txt",
		"/home/ravenskrag/Desktop/gem structure/lib/ruby_of.rb",
		"/home/ravenskrag/Desktop/gem structure/lib/ruby_of/freezable.rb",
		"/home/ravenskrag/Desktop/gem structure/lib/ruby_of/meta.rb",
		"/home/ravenskrag/Desktop/gem structure/ext/openFrameworks/CHANGELOG.md",
		"/home/ravenskrag/Code/Source/OpenFrameworks/git_repo/libs/openFrameworks/math/ofVec2f.h",
		"/home/ravenskrag/Code/Source/OpenFrameworks/git_repo/addons/ofxiOS/src/app/ofAppiOSWindow.mm",
		"/home/ravenskrag/Code/Source/OpenFrameworks/new/openFrameworks/CHANGELOG.md",
		"/home/ravenskrag/Code/Source/OpenFrameworks/new/openFrameworks/CODE_OF_CONDUCT.md",
		"/home/ravenskrag/Applications/0_ local launchers/Cytoscape-0.desktop",
		"/home/ravenskrag/Experiments/OpenFrameworks/of_v0.9.3_libs/custom/poco/poco-1.7.4-all/build/rules/compile",
		"/home/ravenskrag/Experiments/OpenFrameworks/of_v0.9.3_libs/custom/poco/poco-1.7.4-all/build/config/Linux",
		"/home/ravenskrag/Experiments/OpenFrameworks/of_v0.9.3_libs/custom/poco/poco-1.7.4-all/Makefile",
		"/home/ravenskrag/Experiments/OpenFrameworks/of_v0.9.3_linux64_release/libs/openFrameworksCompiled/project/makefileCommon/compile.project.mk",
		"/home/ravenskrag/Experiments/OpenFrameworks/of_v0.9.3_linux64_release/libs/openFrameworksCompiled/project/makefileCommon/config.project.mk",
		"/home/ravenskrag/Experiments/OpenFrameworks/of_v0.9.3_linux64_release/libs/openFrameworksCompiled/project/makefileCommon/config.shared.mk",
		"/home/ravenskrag/Experiments/OpenFrameworks/of_v0.9.3_linux64_release/scripts/linux/compileOF.sh",
		"/home/ravenskrag/Experiments/OpenFrameworks/of_v0.9.3_linux64_release/libs/openFrameworksCompiled/project/linux64/config.linux64.default.mk",
		"/home/ravenskrag/Experiments/RubyCPP/oF_ruby_build_system.sublime-workspace",
		"/home/ravenskrag/Experiments/OpenFrameworks/of_v0.9.3_libs/custom/poco/poco-1.7.4-all/README",
		"/home/ravenskrag/Experiments/OpenFrameworks/of_v0.9.3_linux64_release/libs/openFrameworksCompiled/project/makefileCommon/compile.core.mk",
		"/home/ravenskrag/Experiments/OpenFrameworks/of_v0.9.3_linux64_release/libs/openFrameworksCompiled/project/Makefile",
		"/home/ravenskrag/Experiments/OpenFrameworks/of_v0.9.3_linux64_release/INSTALL.md",
		"/home/ravenskrag/Experiments/RubyCPP/project_files/oF_ruby_build_system.sublime-project",
		"/home/ravenskrag/Experiments/RubyCPP/project_files/oF_ruby_build_system.sublime-workspace",
		"/home/ravenskrag/Experiments/RubyCPP/project_files/oF_ruby_core.sublime-project",
		"/home/ravenskrag/Experiments/RubyCPP/project_files/oF_ruby_core.sublime-workspace",
		"/home/ravenskrag/Code/Source/OpenFrameworks/of_v0.9.3_libs/custom/kiss/README",
		"/home/ravenskrag/Experiments/OpenFrameworks/of_v0.9.3_linux64_release/addons/obj/linux64/Release/.compiler_flags",
		"/home/ravenskrag/Experiments/OpenFrameworks/of_v0.9.3_linux64_release/addons/obj/linux64/Debug/.compiler_flags",
		"/home/ravenskrag/Experiments/RubyCPP/Oni/ext/oni/cpp/oF_Test/mySketch/Makefile",
		"/home/ravenskrag/Experiments/RubyCPP/Oni/ext/oni/cpp/oF_Test/mySketch/config.make",
		"/home/ravenskrag/Experiments/RubyCPP/Oni/ext/oni/cpp/oF_Test/mySketch/Makefile.static_lib",
		"/home/ravenskrag/Experiments/RubyCPP/Oni/ext/oni/cpp/oF_Test/mySketch/addons.make",
		"/home/ravenskrag/Experiments/RubyCPP/Oni/ext/oni/cpp/mySketch/Makefile",
		"/home/ravenskrag/Experiments/RubyCPP/Oni/ext/oni/mkmf.log",
		"/home/ravenskrag/Experiments/RubyCPP/Oni/oF_build_variables.yaml"
	],
	"find":
	{
		"height": 64.0
	},
	"find_in_files":
	{
		"height": 170.0,
		"where_history":
		[
			"",
			"<open files>",
			"<open folders>",
			"",
			"<open files>",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"puts",
			"f",
			"settings",
			"exception_guard",
			"guard",
			" \n",
			"def",
			"ofexit",
			"ofExit",
			":debug",
			"GLFW",
			"not initialized",
			"The GLFW library is not initialized",
			"ofrunmainloop",
			"ofRunApp",
			"mSelf.call",
			"name",
			"fontname",
			"name",
			"anti",
			"size",
			".",
			"define_method",
			"\"",
			"define_method",
			"load_from",
			"load",
			"ofAlphabet",
			"static const std::initializer_list<ofUnicode::range> ",
			"static const std::initializer_list<ofUnicode::range>",
			"bar",
			"UnicodeRanges",
			"settings",
			"japanes",
			"alphabet",
			"ofalphabet",
			"alphabet",
			"alphabets",
			"alphabe",
			"clang_db",
			":debug",
			"debug",
			"make ",
			"gdb",
			"binar",
			"getLineHeight",
			"pagent",
			"Hello World",
			"liberation serif",
			"takaop",
			"liberation serif",
			"_fontname",
			"slash",
			"trailing",
			"<<",
			"operator",
			"RunRelease",
			"swap_makefile",
			"makfile",
			"debug",
			"target_LIBS",
			".a",
			"//",
			"s1",
			"settings",
			"settings_mFont",
			"hello again",
			"of_project_add",
			"of_addon",
			"of_project_objs",
			"of_project_ob",
			"extension",
			"static_",
			"static",
			"static_lib",
			"testing",
			"on_exit",
			"shutdown",
			".methods",
			"settings",
			"log",
			"hello world",
			"bLoadedOk",
			" //",
			"range",
			"\n\t",
			"Latin;\n",
			";",
			"static const",
			"settings",
			"ofTtfSettings",
			"cout",
			"rb_app",
			"Fo",
			"foo",
			"ofTrueTypeFont_load_from_struct",
			"\"file\": ",
			"namespace of_project",
			"of_project",
			"oF_project:build",
			"export_build_variables",
			"oF_project_build_timestamp",
			"ofPushMatrix",
			"regenerate",
			"ofLoadImage",
			"load",
			"loadimage",
			"@font",
			"load_from",
			"load",
			"Oni",
			"rb_mOni",
			"fbo_allocate_from",
			"rb_mOni",
			"Rice",
			"RICE",
			"Rice",
			"re-enable",
			"cp ",
			"cp",
			"mv",
			"fbo",
			"path_to_file",
			"x_pos",
			"ofxpanel",
			"-rpath",
			"-path",
			"PLATFORM"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			" \n",
			"module ThoughtTrace\n\n\n# Controls overall execution flow for all input systems.\n# Like a main method for the entire input system.\n# \n# As it is a \"main\", this class is more a portion of ThoughtTrace proper,\n# rather than something than can be externalized.\n# This is reflected in the module chosen to hold this class.\nclass InputManager\n\t# TODO: control mouseover effects from this class as well\n\t\n\tattr_reader :mouse, :buttons\n\t\n\tdef initialize(window, space, camera)\n\t\t@space = space\n\t\t@camera = camera\n\t\t\n\t\t\n\t\t# TODO: properly implement mouse.\n\t\t@mouse = InputSystem::Mouse.new window\n\t\t\n\t\t@selection = [] # TODO: create actual selection collection. Array is placeholder. May work, may not. Haven't actually thought about it at all.\n\t\t\n\t\t@text_input = ThoughtTrace::TextInput.new\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t# manages many input events\n\t\t# input events correspond to button presses\n\t\t# those buttons can be keyboard keys, mouse buttons, or gamepad buttons\n\t\t@buttons = InputSystem::ButtonParser.new\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t# hold actions flow controllers, so that input manager can direct action UI drawing\n\t\t# need to draw actions so that they can show polymorphic interface information\n\t\t# NOTE: storing actions this way means that the button parser doesn't have to know anything about the input system.\n\t\t@actions = Array.new\n\t\t\n\t\t# NOTE: Action names and Event names may not necessarily have the same requirements.\n\t\t\t# Action names\n\t\t\t\t# Control what sort of action will be fired\n\t\t\t\t# Like methods, specifics are resolved with polymorphism\n\t\t\t# Event names\n\t\t\t\t# unique ID for this specific Event\n\t\t\t\t# must be distinct among keyboard, mouse, joystick etc events\n\t\t\t\t# each Event is one combination of (name, binding, callback)\n\t\t\t\t# thus, it is possible for many events to trigger one Action\n\t\t\t\t# because you want multiple bindings on one Action\n\t\t\t\t# (thing mouse bindings vs keyboard, rather than multiple keyboard shortcuts)\n\t\t\n\t\t\n\t\t# action_flow = ThoughtTrace::ActionFlowController.new(@space, @selection, @stash)\n\t\t# # TODO: register action names in action flow controller\n\t\t# action_flow.bindings[categorization][phase] = action_name\n\t\t# # NOTE: There's no warning if you try to assign an action name to a phase that does not exist. This is really dangerous, and had me hunting bugs in a bunch of the wrong places.\n\t\t\n\t\t# \tevent_name = :click\n\t\t# \tcallbacks = InputSystem::MouseActionController.new @mouse, action_flow\n\t\t# event = InputSystem::ButtonEvent.new event_name, callbacks\n\t\t# event.bind_to keys:[Gosu::MsLeft], modifiers:[]\n\t\t\n\t\t# @buttons.register event\n\t\t\n\t\t\n\t\t\n\t\t\n\t\taction_flow = ThoughtTrace::ActionFlowController.new(@space, @selection, @text_input)\n\t\tcallbacks = InputSystem::MouseActionController.new @mouse, action_flow\n\t\t\n\t\t\tevent = InputSystem::ButtonEvent.new :click, callbacks\n\t\t\tevent.bind_to keys:[Gosu::MsLeft], modifiers:[]\n\t\t\t\n\t\t\taction_flow.bindings[:existing][:click] = :edit\n\t\t\taction_flow.bindings[:existing][:drag] = :move\n\t\t\t\n\t\t\taction_flow.bindings[:empty][:click] = :spawn_text \n\t\t\t# action_flow.bindings[:empty][:drag] = :move\n\t\t\n\t\t@actions << action_flow\n\t\t@buttons.register event\n\t\t\n\t\t\n\t\t\n\t\taction_flow = ThoughtTrace::ActionFlowController.new(@space, @selection, @text_input)\n\t\tcallbacks = InputSystem::MouseActionController.new @mouse, action_flow\n\t\t\n\t\t\tevent = InputSystem::ButtonEvent.new :right_click, callbacks\n\t\t\tevent.bind_to keys:[Gosu::MsRight], modifiers:[]\n\t\t\t\n\t\t\taction_flow.bindings[:existing][:drag] = :resize\n\t\t\n\t\t@actions << action_flow\n\t\t@buttons.register event\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\tcallbacks = ThoughtTrace::Events::PressEnter.new @space, @text_input\n\t\tevent = InputSystem::ButtonEvent.new :enter, callbacks\n\t\t\n\t\tevent.bind_to keys:[Gosu::KbReturn], modifiers:[]\n\t\t\n\t\t@buttons.register event\n\t\t\n\tend\n\t\n\tdef button_down(id)\n\t\t@buttons.button_down(id)\n\tend\n\t\n\tdef update\n\t\t@buttons.update\n\t\t@text_input.update\n\tend\n\t\n\t# draw things in world space\n\tdef draw\n\t\t@actions.each do |action|\n\t\t\taction.draw @mouse.position_in_space\n\t\tend\n\t\t\n\t\t@text_input.draw\n\tend\n\t\n\tdef button_up(id)\n\t\t@buttons.button_up(id)\n\tend\n\t\n\tdef shutdown\n\t\t\n\tend\nend\n\n\n\nend",
			"ThoughtTrace",
			"\n",
			"clerical"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 27,
			"sheets":
			[
				{
					"buffer": 0,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 116,
						"regions":
						{
						},
						"selection":
						[
							[
								116,
								116
							]
						],
						"settings":
						{
							"auto_name": "project file time ordering",
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 41,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": ".gitignore",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1446,
						"regions":
						{
						},
						"selection":
						[
							[
								987,
								987
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 1302.0,
						"zoom_level": 1.0
					},
					"stack_index": 33,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "ext/oF_apps/testApp/config.make",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6543,
						"regions":
						{
						},
						"selection":
						[
							[
								592,
								592
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/Makefile/Makefile.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 32,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "ext/oF_apps/testApp/addons.make",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7,
						"regions":
						{
						},
						"selection":
						[
							[
								7,
								7
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/Makefile/Makefile.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 38,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "common.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3085,
						"regions":
						{
						},
						"selection":
						[
							[
								813,
								813
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 341.0,
						"zoom_level": 1.0
					},
					"stack_index": 31,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "Rakefile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 27254,
						"regions":
						{
						},
						"selection":
						[
							[
								23226,
								23226
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										23566,
										23569
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/dot.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										23189,
										23191
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 26987.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"type": "text"
				},
				{
					"buffer": 6,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2028,
						"regions":
						{
						},
						"selection":
						[
							[
								750,
								750
							]
						],
						"settings":
						{
							"auto_name": "rake /home/ravenskrag/Desktop/gem_structure/ext/oF",
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 651.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "ext/oF_apps/testApp/Makefile.static_lib",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4473,
						"regions":
						{
						},
						"selection":
						[
							[
								502,
								502
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/Makefile/Makefile.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 35,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "ext/oF_apps/testApp/oF_build_variables.yaml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 77983,
						"regions":
						{
						},
						"selection":
						[
							[
								14855,
								14855
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										14941,
										14942
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/double_quote.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										14835,
										14836
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/YAML/YAML.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 9286.0,
						"zoom_level": 1.0
					},
					"stack_index": 36,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "ext/rubyOF/extconf.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7825,
						"regions":
						{
						},
						"selection":
						[
							[
								3796,
								3796
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										3796,
										3797
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/single_quote.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										3784,
										3785
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4403.0,
						"zoom_level": 1.0
					},
					"stack_index": 39,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "ext/rubyOF/Makefile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12484,
						"regions":
						{
						},
						"selection":
						[
							[
								159,
								159
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"git_gutter_is_enabled": false,
							"rainbowth.lispy": false,
							"syntax": "Packages/Makefile/Makefile.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 37,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "compile_commands.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 25577,
						"regions":
						{
						},
						"selection":
						[
							[
								14625,
								14625
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										16894,
										16895
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/double_quote.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										12819,
										12820
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"git_gutter_is_enabled": false,
							"rainbowth.lispy": false,
							"syntax": "Packages/JavaScript/JSON.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6758.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 12,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3,
						"regions":
						{
						},
						"selection":
						[
							[
								3,
								3
							]
						],
						"settings":
						{
							"auto_name": "---",
							"bracket_highlighter.busy": false,
							"rainbowth.lispy": false,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 49,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "ext/openFrameworks/examples/gl/pointsAsTexturesExample/src/ofApp.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4523,
						"regions":
						{
						},
						"selection":
						[
							[
								339,
								339
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1027,
										1028
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										105,
										106
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 45,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "ext/openFrameworks/libs/openFrameworks/graphics/ofImage.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 28280,
						"regions":
						{
						},
						"selection":
						[
							[
								4668,
								4668
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										4735,
										4736
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										4624,
										4625
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3566.0,
						"zoom_level": 1.0
					},
					"stack_index": 44,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "ext/openFrameworks/examples/input_output/imageLoaderExample/src/ofApp.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3109,
						"regions":
						{
						},
						"selection":
						[
							[
								787,
								787
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1882,
										1883
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										704,
										705
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "ext/openFrameworks/examples/input_output/imageLoaderExample/src/ofApp.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 664,
						"regions":
						{
						},
						"selection":
						[
							[
								595,
								595
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										660,
										661
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										66,
										67
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "ext/openFrameworks/examples/input_output/imageLoaderExample/src/main.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 344,
						"regions":
						{
						},
						"selection":
						[
							[
								344,
								344
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 43,
					"type": "text"
				},
				{
					"buffer": 18,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3,
						"regions":
						{
						},
						"selection":
						[
							[
								3,
								3
							]
						],
						"settings":
						{
							"auto_name": "---",
							"bracket_highlighter.busy": false,
							"rainbowth.lispy": false,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 50,
					"type": "text"
				},
				{
					"buffer": 19,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 267,
						"regions":
						{
						},
						"selection":
						[
							[
								267,
								267
							]
						],
						"settings":
						{
							"auto_name": "want to move over code from old oF app / ruby wrap",
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "ext/rubyOF/launcher.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3170,
						"regions":
						{
						},
						"selection":
						[
							[
								374,
								374
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1227,
										1228
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										176,
										177
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "ext/rubyOF/launcher.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1580,
						"regions":
						{
						},
						"selection":
						[
							[
								863,
								863
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1576,
										1577
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										728,
										729
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "ext/oF_apps/testApp/src/ofApp.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2038,
						"regions":
						{
						},
						"selection":
						[
							[
								794,
								794
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										810,
										811
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										643,
										644
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "ext/oF_apps/testApp/src/ofApp.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 574,
						"regions":
						{
						},
						"selection":
						[
							[
								562,
								562
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										571,
										572
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										65,
										66
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "ext/rubyOF/rb_app.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9913,
						"regions":
						{
						},
						"selection":
						[
							[
								6864,
								6864
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										6894,
										6895
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										5070,
										5071
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 7254.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "ext/rubyOF/rb_app.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1333,
						"regions":
						{
						},
						"selection":
						[
							[
								1195,
								1195
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1330,
										1331
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										386,
										387
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 125.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "lib/rubyOF.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9543,
						"regions":
						{
						},
						"selection":
						[
							[
								7727,
								7727
							],
							[
								8643,
								8643
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										9229,
										9232
									],
									"2":
									[
										9229,
										9232
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/dot.png",
										"brackethighlighter.default"
									],
									"2":
									[
										"Packages/BracketHighlighter/icons/dot.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										7710,
										7715
									],
									"2":
									[
										7710,
										7715
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 12060.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "bin/projects/template/lib/main.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10483,
						"regions":
						{
						},
						"selection":
						[
							[
								3382,
								3382
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										3386,
										3389
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/dot.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										3053,
										3055
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1116.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "/home/ravenskrag/.rvm/gems/ruby-2.4.0/gems/rice-2.1.1/rice/protect.ipp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 46919,
						"regions":
						{
						},
						"selection":
						[
							[
								2988,
								2988
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										3055,
										3056
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										2987,
										2988
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3627.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 29,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3,
						"regions":
						{
						},
						"selection":
						[
							[
								3,
								3
							]
						],
						"settings":
						{
							"auto_name": "---",
							"bracket_highlighter.busy": false,
							"rainbowth.lispy": false,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 30,
					"file": "ext/rubyOF/rice.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 129,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 30,
					"type": "text"
				},
				{
					"buffer": 31,
					"file": "ext/rubyOF/rubyOF.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10957,
						"regions":
						{
						},
						"selection":
						[
							[
								1757,
								1757
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1793,
										1794
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										1739,
										1740
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1055.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 32,
					"file": "ext/rubyOF/rubyOF.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 933,
						"regions":
						{
						},
						"selection":
						[
							[
								373,
								373
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 33,
					"file": "ext/rubyOF/Graphics.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5329,
						"regions":
						{
						},
						"selection":
						[
							[
								4118,
								4118
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
									"1":
									[
										5327,
										5328
									]
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2791.0,
						"zoom_level": 1.0
					},
					"stack_index": 40,
					"type": "text"
				},
				{
					"buffer": 34,
					"file": "ext/rubyOF/Graphics.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 136,
						"regions":
						{
						},
						"selection":
						[
							[
								136,
								136
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 51,
					"type": "text"
				},
				{
					"buffer": 35,
					"file": "ext/rubyOF/Fbo.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6629,
						"regions":
						{
						},
						"selection":
						[
							[
								2778,
								2778
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
									"1":
									[
										1923,
										1924
									]
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 28,
					"type": "text"
				},
				{
					"buffer": 36,
					"file": "ext/rubyOF/Fbo.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 87,
						"regions":
						{
						},
						"selection":
						[
							[
								87,
								87
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 29,
					"type": "text"
				},
				{
					"buffer": 37,
					"file": "ext/rubyOF/TrueTypeFont.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4391,
						"regions":
						{
						},
						"selection":
						[
							[
								2290,
								2290
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										2290,
										2291
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/double_quote.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										2277,
										2278
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 279.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 38,
					"file": "ext/rubyOF/TrueTypeFont.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2406,
						"regions":
						{
						},
						"selection":
						[
							[
								483,
								483
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 27,
					"type": "text"
				},
				{
					"buffer": 39,
					"file": "ext/openFrameworks/libs/openFrameworks/graphics/ofTrueTypeFont.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 45571,
						"regions":
						{
						},
						"selection":
						[
							[
								23303,
								23303
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										23381,
										23382
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										23261,
										23262
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 23081.0,
						"zoom_level": 1.0
					},
					"stack_index": 25,
					"type": "text"
				},
				{
					"buffer": 40,
					"file": "ext/openFrameworks/libs/openFrameworks/graphics/ofTrueTypeFont.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14304,
						"regions":
						{
						},
						"selection":
						[
							[
								13156,
								13156
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										13166,
										13167
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										13124,
										13125
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 12618.0,
						"zoom_level": 1.0
					},
					"stack_index": 26,
					"type": "text"
				},
				{
					"buffer": 41,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 27172,
						"regions":
						{
						},
						"selection":
						[
							[
								19836,
								19836
							]
						],
						"settings":
						{
							"auto_name": "",
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 10727.0,
						"zoom_level": 1.0
					},
					"stack_index": 22,
					"type": "text"
				},
				{
					"buffer": 42,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2549,
						"regions":
						{
						},
						"selection":
						[
							[
								609,
								609
							]
						],
						"settings":
						{
							"auto_name": "(gdb) info args",
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 23,
					"type": "text"
				},
				{
					"buffer": 43,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 333,
						"regions":
						{
						},
						"selection":
						[
							[
								333,
								333
							]
						],
						"settings":
						{
							"auto_name": "",
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
									"1":
									[
										332,
										333
									]
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 24,
					"type": "text"
				},
				{
					"buffer": 44,
					"file": "ext/openFrameworks/libs/openFrameworks/utils/ofUtils.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 35429,
						"regions":
						{
						},
						"selection":
						[
							[
								14686,
								14686
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										14843,
										14844
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										14580,
										14581
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 16446.0,
						"zoom_level": 1.0
					},
					"stack_index": 34,
					"type": "text"
				},
				{
					"buffer": 45,
					"file": "ext/openFrameworks/libs/openFrameworks/utils/ofUtils.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 33920,
						"regions":
						{
						},
						"selection":
						[
							[
								18747,
								18747
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										18746,
										18747
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										18690,
										18691
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 15686.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 46,
					"file": "ext/openFrameworks/libs/openFrameworks/ofMain.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2392,
						"regions":
						{
						},
						"selection":
						[
							[
								621,
								621
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										620,
										621
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/double_quote.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										611,
										612
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1674.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"type": "text"
				},
				{
					"buffer": 47,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3,
						"regions":
						{
						},
						"selection":
						[
							[
								3,
								3
							]
						],
						"settings":
						{
							"auto_name": "---",
							"bracket_highlighter.busy": false,
							"rainbowth.lispy": false,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 42,
					"type": "text"
				},
				{
					"buffer": 48,
					"file": "lib/rubyOF/freezable.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 837,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										833,
										836
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/dot.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										0,
										6
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 47,
					"type": "text"
				},
				{
					"buffer": 49,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 208,
						"regions":
						{
						},
						"selection":
						[
							[
								208,
								208
							]
						],
						"settings":
						{
							"auto_name": "NOTE: getting segfault when ruby code throws excep",
							"bracket_highlighter.busy": false,
							"rainbowth.lispy": false,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 46,
					"type": "text"
				},
				{
					"buffer": 50,
					"file": "/home/ravenskrag/Projects/2_Personal/Current/RubyCPP/Oni/lib/projects/Scope/bin/main.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10738,
						"regions":
						{
						},
						"selection":
						[
							[
								2383,
								2383
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										2398,
										2401
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/dot.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										1783,
										1785
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 48,
					"type": "text"
				},
				{
					"buffer": 51,
					"file": "ext/openFrameworks/libs/openFrameworks/app/ofAppGLFWWindow.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 49487,
						"regions":
						{
						},
						"selection":
						[
							[
								12308,
								12308
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										12532,
										12533
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										12279,
										12280
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 12183.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 39.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 323.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 96.0
	},
	"pinned_build_system": "qbs debug",
	"project": "cpp_wrapper.sublime-project",
	"replace":
	{
		"height": 74.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"protectipp",
				"rice-2.1.1/rice/protect.ipp"
			],
			[
				"rake",
				"Rakefile"
			],
			[
				"ofappglf",
				"ext/openFrameworks/libs/openFrameworks/app/ofAppGLFWWindow.cpp"
			],
			[
				"rice.h",
				"ext/rubyOF/rice.h"
			],
			[
				"rice",
				"ext/rubyOF/rice.h"
			],
			[
				"oflog",
				"ext/openFrameworks/libs/openFrameworks/utils/ofLog.cpp"
			],
			[
				".yaml",
				"ext/oF_apps/testApp/oF_build_variables.yaml"
			],
			[
				"ofbaseap",
				"ext/openFrameworks/libs/openFrameworks/app/ofBaseApp.h"
			],
			[
				"ext",
				"ext/rubyOF/extconf.rb"
			],
			[
				"staticlib",
				"ext/oF_apps/testApp/Makefile.static_lib"
			],
			[
				"static",
				"ext/oF_apps/testApp/Makefile.static_lib"
			],
			[
				"ofmain",
				"ext/openFrameworks/libs/openFrameworks/ofMain.h"
			],
			[
				"ofttf",
				"ext/openFrameworks/libs/openFrameworks/graphics/ofTrueTypeFont.cpp"
			],
			[
				"example",
				"ext/openFrameworks/examples/events/advancedEventsExample/src/eventsObject.h"
			],
			[
				"ofapp",
				"ext/oF_apps/testApp/src/ofApp.cpp"
			],
			[
				"compile",
				"compile_commands.json"
			],
			[
				".gi",
				".gitignore"
			],
			[
				"imageloaderexample",
				"ext/openFrameworks/examples/input_output/imageLoaderExample/src/main.cpp"
			],
			[
				"main",
				"bin/projects/template/lib/main.rb"
			],
			[
				"glm",
				"ext/openFrameworks/libs/glm/include/glm/glm.hpp"
			],
			[
				"offbo",
				"ext/openFrameworks/libs/openFrameworks/gl/ofFbo.cpp"
			],
			[
				"rubyof.rb",
				"lib/rubyOF.rb"
			],
			[
				"config",
				"ext/oF_apps/testApp/config.make"
			],
			[
				"commo",
				"common.rb"
			],
			[
				".git",
				".gitignore"
			],
			[
				"giti",
				".gitignore"
			],
			[
				"make",
				"ext/oF_apps/testApp/Makefile"
			],
			[
				"ex",
				"ext/rubyOF/extconf.rb"
			],
			[
				"makefilecommonconfigshared",
				"ext/openFrameworks/libs/openFrameworksCompiled/project/makefileCommon/config.shared.mk"
			],
			[
				"openframeworkscompiledprojectmake",
				"ext/openFrameworks/libs/openFrameworksCompiled/project/Makefile"
			],
			[
				"linuxof",
				"ext/openFrameworks/scripts/linux/compileOF.sh"
			],
			[
				"linuxdownlib",
				"ext/openFrameworks/scripts/linux/download_libs.sh"
			],
			[
				"downl",
				"ext/openFrameworks/scripts/android/download_libs.sh"
			],
			[
				"compilof",
				"ext/openFrameworks/scripts/linux/compileOF.sh"
			],
			[
				"rakefil",
				"Rakefile"
			],
			[
				"comm",
				"common.rb"
			],
			[
				"extc",
				"ext/rubyOF/extconf.rb"
			],
			[
				"gitmo",
				".gitmodules"
			],
			[
				"common.rb",
				"build/common.rb"
			],
			[
				"compilepg",
				"ext/openFrameworks/scripts/linux/compilePG.sh"
			],
			[
				"commandlinemakefile",
				"ext/openFrameworks/apps/projectGenerator/commandLine/Makefile"
			],
			[
				"linuxbuildpg",
				"ext/openFrameworks/apps/projectGenerator/scripts/linux/buildPG.sh"
			],
			[
				"openframereadme",
				"ext/openFrameworks/README.md"
			],
			[
				"projgencommreadm",
				"ext/openFrameworks/apps/projectGenerator/commandLine/readme.md"
			],
			[
				"rakefile",
				"build/Rakefile"
			],
			[
				"readm",
				"README.md"
			],
			[
				"rubof",
				"lib/rubyOF.rb"
			],
			[
				"ver",
				"lib/rubyOF/version.rb"
			],
			[
				"configu",
				"configurator.rb"
			],
			[
				"con",
				"config.yaml"
			],
			[
				"projecgenerscriptsbuil",
				"ext/openFrameworks/apps/projectGenerator/scripts/linux/buildPG.sh"
			],
			[
				"openframeworksreadme",
				"ext/openFrameworks/README.md"
			],
			[
				"read",
				"README.md"
			],
			[
				"rubyof",
				"lib/ruby_of.rb"
			],
			[
				"gitig",
				".gitignore"
			],
			[
				"ofxgui",
				"addons/ofxGui/src/ofxGui.h"
			],
			[
				"pocorulescompile",
				"of_v0.9.3_libs/custom/poco/poco-1.7.4-all/build/rules/compile"
			],
			[
				"custompocolinux",
				"of_v0.9.3_libs/custom/poco/poco-1.7.4-all/build/config/Linux"
			],
			[
				"custompocomakefile",
				"of_v0.9.3_libs/custom/poco/poco-1.7.4-all/Makefile"
			],
			[
				"compileprojectmk",
				"of_v0.9.3_linux64_release/libs/openFrameworksCompiled/project/makefileCommon/compile.project.mk"
			],
			[
				"configproject",
				"of_v0.9.3_linux64_release/libs/openFrameworksCompiled/project/makefileCommon/config.project.mk"
			],
			[
				"configsharedmk",
				"of_v0.9.3_linux64_release/libs/openFrameworksCompiled/project/makefileCommon/config.shared.mk"
			],
			[
				"comple",
				"of_v0.9.3_linux64_release/scripts/linux/compileOF.sh"
			],
			[
				"configlinux6",
				"of_v0.9.3_linux64_release/libs/openFrameworksCompiled/project/linux64/config.linux64.default.mk"
			],
			[
				"compiledmakefilecommcompile",
				"of_v0.9.3_linux64_release/libs/openFrameworksCompiled/project/makefileCommon/compile.core.mk"
			],
			[
				"openframeworksmakefile",
				"of_v0.9.3_linux64_release/libs/openFrameworksCompiled/project/Makefile"
			],
			[
				"install",
				"of_v0.9.3_linux64_release/INSTALL.md"
			],
			[
				"releasecompile",
				"of_v0.9.3_linux64_release/addons/obj/linux64/Release/.compiler_flags"
			],
			[
				"compilerflags",
				"of_v0.9.3_linux64_release/addons/obj/linux64/Debug/.compiler_flags"
			],
			[
				"sketchstatic",
				"RubyCPP/Oni/ext/oni/cpp/mySketch/Makefile.static_lib"
			],
			[
				"sketchaddons",
				"RubyCPP/Oni/ext/oni/cpp/mySketch/addons.make"
			],
			[
				"ofbuildvaria",
				"RubyCPP/Oni/ext/oni/cpp/mySketch/oF_build_variables.yaml"
			],
			[
				"of_testadd",
				"~/Experiments/RubyCPP/Oni/ext/oni/cpp/oF_Test/mySketch/addons.make"
			],
			[
				"addons",
				"of_v0.9.3_linux64_release/addons/ofxAbletonLive/AbletonOSC/addons.make"
			],
			[
				"ofbuild",
				"RubyCPP/Oni/oF_build_variables.yaml"
			],
			[
				"variables",
				"RubyCPP/Oni/ext/oni/of_build_variables.yaml"
			],
			[
				"extvar",
				"RubyCPP/Oni/ext/oni/extconf_variables.rb"
			],
			[
				".",
				".gitignore"
			],
			[
				"event.h",
				"poco-1.7.4-all/Foundation/include/Poco/Event.h"
			],
			[
				"event",
				"poco-1.7.4-all/Foundation/src/Event.cpp"
			],
			[
				"thread",
				"poco-1.7.4-all/Foundation/src/Thread.cpp"
			],
			[
				"test",
				"Oni/lib/test.rb"
			],
			[
				"xt",
				"Oni/ext/oni/extconf.rb"
			],
			[
				"mysketchmake",
				"Oni/ext/oni/cpp/oF_Test/mySketch/Makefile"
			],
			[
				"gem",
				"Oni/oni.gemspec"
			],
			[
				"log",
				"Oni/ext/oni/mkmf.log"
			],
			[
				"extco",
				"Oni/ext/oni/extconf.deploy.rb"
			],
			[
				"compileco",
				"~/Experiments/OpenFrameworks/of_v0.9.3_linux64_release/libs/openFrameworksCompiled/project/makefileCommon/compile.core.mk"
			],
			[
				"config.m",
				"Oni/ext/oni/cpp/oF_Test/mySketch/config.make"
			],
			[
				"link",
				"~/Experiments/OpenFrameworks/of_v0.9.3_linux64_release/libs/openFrameworksCompiled/project/linux64/config.linux64.default.mk"
			],
			[
				"compileof",
				"of_v0.9.3_linux64_release/scripts/linux/compileOF.sh"
			],
			[
				"git",
				"~/Experiments/RubyCPP/.gitignore"
			],
			[
				"e",
				"~/Experiments/RubyCPP/Oni/ext/oni/extconf.rb"
			],
			[
				"confp",
				"~/Experiments/OpenFrameworks/of_v0.9.3_linux64_release/libs/openFrameworksCompiled/project/makefileCommon/config.project.mk"
			],
			[
				"rubycppofmake",
				"RubyCPP/Oni/ext/oni/cpp/oF_Test/mySketch/Makefile"
			],
			[
				"rubycpprake",
				"RubyCPP/Oni/Rakefile"
			],
			[
				"rubycppext",
				"RubyCPP/Oni/ext/oni/extconf.rb"
			],
			[
				"makefile",
				"Oni/ext/oni/Makefile"
			],
			[
				"extconf",
				"Oni/ext/oni/extconf.rb"
			],
			[
				"trutype",
				"libs/openFrameworks/graphics/ofTrueTypeFont.cpp"
			],
			[
				"color",
				"libs/openFrameworks/types/ofColor.cpp"
			],
			[
				"freeim",
				"libs/FreeImage/include/FreeImage.h"
			],
			[
				"ofimage",
				"libs/openFrameworks/graphics/ofImage.cpp"
			],
			[
				"mainh",
				"libs/openFrameworks/ofMain.h"
			],
			[
				"project",
				"libs/openFrameworksCompiled/project/makefileCommon/compile.project.mk"
			],
			[
				"rubymain",
				"SublimeREPL/config/Ruby/Main.sublime-menu"
			],
			[
				"pythonmain",
				"SublimeREPL/config/Python/Main.sublime-menu"
			],
			[
				"rep",
				"*REPL* [octave]"
			],
			[
				"plat",
				"ex1/plotData.m"
			],
			[
				"ex1m",
				"ex1/ex1_multi.m"
			],
			[
				"warm",
				"warmUpExercise.m"
			],
			[
				"locking",
				"locking things in place"
			],
			[
				"groupedi",
				"TODO: group edit and resize"
			],
			[
				"styecompo",
				"all classes using Style Component should define de"
			],
			[
				"empyt",
				"rewrite 'empty space actions' as 'zero target acti"
			],
			[
				"back",
				"TODO: background coloring"
			],
			[
				"spawn",
				"spawn action - prototype factory - nested document"
			],
			[
				"manysp",
				"many spawn actions"
			],
			[
				"groure",
				"group resize"
			],
			[
				"resize",
				"group resize"
			],
			[
				"querysb",
				"TODO: track system - query style binding"
			],
			[
				"visandg",
				"NOTE: constraint Visualizations and Groups now bot"
			],
			[
				"put",
				"TODO: put the style data on the Constraint maybe?"
			],
			[
				"how",
				"how are Queries shown visually?"
			],
			[
				"visua",
				"Visualizations need to save Style component data"
			],
			[
				"styda",
				"NOTE: style data not currently duplicated when Ent"
			],
			[
				"stylcomp",
				"NOTE: can't save multiple Style Components with id"
			],
			[
				"text",
				"is Text Box a new type?"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 1000.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Experiments/oF_Test/oF_Test.sublime-project"
			],
			[
				"th",
				"/home/ravenskrag/Documents/Sublime/ThoughtTrace.sublime-project"
			],
			[
				"ete",
				"/home/ravenskrag/Documents/Projects/Eternity.sublime-project"
			],
			[
				"e",
				"/home/ravenskrag/Documents/Projects/Eternity.sublime-project"
			],
			[
				"et",
				"/home/ravenskrag/Documents/Projects/Eternity.sublime-project"
			],
			[
				"gamn",
				"/home/ravenskrag/Documents/Projects/GameDesignNotes.sublime-project"
			],
			[
				"oni",
				"/home/ravenskrag/Documents/Projects/Oni.sublime-project"
			],
			[
				"on",
				"/home/ravenskrag/Documents/Projects/Oni.sublime-project"
			],
			[
				"321",
				"/home/ravenskrag/Documents/Projects/CS321_Project.sublime-project"
			],
			[
				"go",
				"/home/ravenskrag/Documents/Projects/Gosu.sublime-project"
			],
			[
				"42",
				"/home/ravenskrag/Documents/Projects/CS425_OgreProject.sublime-project"
			]
		],
		"width": 760.0
	},
	"select_symbol":
	{
		"height": 488.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"wrap",
				"wrap"
			],
			[
				"keyboard",
				"keyboard_cb"
			],
			[
				"key",
				"keys"
			],
			[
				"setupopeng",
				"ofSetupOpenGL"
			],
			[
				"ofsetupop",
				"ofSetupOpenGL"
			]
		],
		"width": 492.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": false,
	"side_bar_visible": true,
	"side_bar_width": 364.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
