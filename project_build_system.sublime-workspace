{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"exis",
				"exists"
			],
			[
				"patt",
				"path_to_root"
			],
			[
				"gem_root",
				"GEM_ROOT"
			],
			[
				"start",
				"start_with"
			],
			[
				"Path",
				"Pathname"
			],
			[
				"Pn",
				"Pathname"
			],
			[
				"proj",
				"projects"
			],
			[
				"path",
				"pathname"
			],
			[
				"project_",
				"project_name"
			],
			[
				"dl",
				"dynamic_lib_install_location"
			],
			[
				"fip",
				"filepath"
			],
			[
				"PROJECTNA",
				"RUBYOF_PROJECT_NAME"
			],
			[
				"RUBOFPR",
				"RUBYOF_PROJECT_NAME"
			],
			[
				"yam",
				"yaml"
			],
			[
				"rbap",
				"rb_app"
			],
			[
				"build_cpp",
				"build_cpp_wrapper"
			],
			[
				"foocl",
				"foo_clean"
			],
			[
				"fl",
				"final_link"
			],
			[
				"cm",
				"cmd1"
			],
			[
				"out",
				"output"
			],
			[
				"GEMR",
				"GEM_ROOT"
			],
			[
				"instan",
				"instance_variable_set"
			],
			[
				"flg",
				"flag_name"
			],
			[
				"attr",
				"attr_accessor"
			],
			[
				"consta",
				"constants"
			],
			[
				"file",
				"filename"
			],
			[
				"ofPop",
				"ofPopStyle"
			],
			[
				"list",
				"alphabet_list"
			],
			[
				"alph",
				"alphabets"
			],
			[
				"exc",
				"exception"
			],
			[
				"bat",
				"bad_termination"
			],
			[
				"pixels",
				"setFromPixels\tvoid setFromPixels(const ofPixels_<unsigned char> &pixels)"
			],
			[
				"load",
				"load\tbool load(const std::filesystem::path &fileName, const ofImageLoadSettings &settings)"
			],
			[
				"exp",
				"export_build_variables"
			],
			[
				"downlo",
				"download_libs"
			],
			[
				"ts",
				"target_string"
			],
			[
				"open",
				"openFrameworks"
			],
			[
				"pro",
				"project"
			],
			[
				"nam",
				"name"
			],
			[
				"conf",
				"config"
			],
			[
				"OFB",
				"OF_BUILD_VARIABLE_FILE"
			],
			[
				"root",
				"REPO_ROOT"
			],
			[
				"Fil",
				"File\tFile.open(\"..\") { |file| .. }"
			],
			[
				"exten",
				"ofx_extension_name"
			],
			[
				"repo",
				"REPO_ROOT"
			],
			[
				"expand",
				"expand_path"
			],
			[
				"onl",
				"only_so"
			],
			[
				"sketch",
				"sketch_dump"
			],
			[
				"dump",
				"dump_so"
			],
			[
				"cate",
				"category_dir"
			],
			[
				"trail",
				"trail_dt"
			],
			[
				"es",
				"exit_status"
			],
			[
				"have_",
				"have_library"
			],
			[
				"gstream",
				"gstreamer"
			],
			[
				"polib",
				"poco_libs_dir"
			],
			[
				"build_",
				"build_tess2"
			],
			[
				"depe",
				"dependencies"
			],
			[
				"ext",
				"extconf"
			],
			[
				"oF",
				"oF_project"
			],
			[
				"clb",
				"c_library"
			],
			[
				"work",
				"work_dir"
			],
			[
				"temp",
				"temp_ext"
			],
			[
				"mk",
				"mySketch"
			],
			[
				"make",
				"Makefile"
			],
			[
				"bu",
				"build"
			],
			[
				"bur",
				"build_library"
			],
			[
				"clib",
				"clean_library"
			],
			[
				"ce",
				"1.coerce"
			],
			[
				"visua",
				"visualizations"
			],
			[
				"test_",
				"test_package"
			],
			[
				"prev",
				"prev_tick"
			],
			[
				"poss",
				"possible_targets"
			],
			[
				"const",
				"constraint_target"
			],
			[
				"data",
				"data_dump"
			],
			[
				"rec",
				"resources"
			],
			[
				"Hash",
				"HashWrapper"
			],
			[
				"remo",
				"removal_flag"
			],
			[
				"con",
				"constraint"
			],
			[
				"paramet",
				"parameterization"
			],
			[
				"visu",
				"visualization"
			],
			[
				"vis",
				"visualization"
			],
			[
				"necessary",
				"necessary_pairs"
			],
			[
				"cont",
				"constraint_type"
			],
			[
				"nece",
				"necessary_pairs"
			],
			[
				"entit",
				"entities"
			],
			[
				"inti",
				"initialize"
			],
			[
				"ent",
				"entities"
			],
			[
				"segment",
				"segment_query"
			],
			[
				"compo",
				"components"
			],
			[
				"query",
				"query_data"
			],
			[
				"origi",
				"original_color"
			],
			[
				"active",
				"active_cascade"
			],
			[
				"var",
				"var_name"
			],
			[
				"projec",
				"project_directory"
			],
			[
				"other",
				"other_stuff"
			],
			[
				"unpa",
				"unpack_with_class_name"
			],
			[
				"compon",
				"component"
			],
			[
				"qu",
				"query_components"
			],
			[
				"styl",
				"style_components"
			],
			[
				"names",
				"named_styles"
			],
			[
				"comp",
				"component"
			],
			[
				"full",
				"full_path"
			],
			[
				"sc",
				"style_component"
			],
			[
				"primary",
				"primary_style"
			],
			[
				"casc",
				"cascade_list"
			],
			[
				"enti",
				"entity_id"
			],
			[
				"component",
				"component_data"
			],
			[
				"componen",
				"component"
			],
			[
				"collec",
				"collection"
			],
			[
				"activ",
				"active_list"
			],
			[
				"write",
				"write_data"
			],
			[
				"wri",
				"write_data"
			],
			[
				"par",
				"packed_array"
			],
			[
				"compd",
				"component_data"
			],
			[
				"each_",
				"each_with_index"
			],
			[
				"all",
				"all_style_objects"
			],
			[
				"style",
				"style_component"
			],
			[
				"righc",
				"right_callbacks"
			],
			[
				"lftc",
				"left_callbacks"
			],
			[
				"butt",
				"mouse_button"
			],
			[
				"actt",
				"active_action"
			],
			[
				"ti",
				"text_input"
			],
			[
				"acc",
				"active_action"
			],
			[
				"acti",
				"active_action"
			],
			[
				"mous",
				"mouse_button"
			],
			[
				"button",
				"button_phase"
			],
			[
				"hit",
				"hitbox_color"
			],
			[
				"clone",
				"clone_factory"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/home/ravenskrag/Projects/2_Personal/Current/ruby_of_cpp_combination/RubyCPP/Oni/ext/oni/extconf.rb",
			"settings":
			{
				"buffer_size": 13853,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/ravenskrag/Projects/2_Personal/Current/ruby_of_cpp_combination/RubyCPP/Oni/Rakefile",
			"settings":
			{
				"buffer_size": 18653,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "---",
			"settings":
			{
				"buffer_size": 3,
				"line_ending": "Unix",
				"name": "---"
			}
		},
		{
			"file": "Gemfile",
			"settings":
			{
				"buffer_size": 1035,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/rubyOF.rb",
			"settings":
			{
				"buffer_size": 8957,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "---",
			"settings":
			{
				"buffer_size": 3,
				"line_ending": "Unix",
				"name": "---"
			}
		},
		{
			"file": ".gitignore",
			"settings":
			{
				"buffer_size": 1867,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "configurator.rb",
			"settings":
			{
				"buffer_size": 1782,
				"line_ending": "Unix"
			}
		},
		{
			"file": "common.rb",
			"settings":
			{
				"buffer_size": 4704,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "build/build.rb",
			"settings":
			{
				"buffer_size": 3792,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "build/project_generator.rb",
			"settings":
			{
				"buffer_size": 3708,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 5379 files for \"find_and_replace\"\n\n/home/ravenskrag/Desktop/gem_structure/configurator.rb:\n   34  end\n   35  \n   36: def find_and_replace(filepath, target, replacement)\n   37  \ttext = File.read(filepath)\n   38  \t\n   ..\n   66  \ttarget_string = \"NAME = '#{name}'\"\n   67  \treplacement   = \"NAME = '#{new_name}'\"\n   68: \tfind_and_replace(filepath, target_string, replacement)\n   69  end\n   70  \n\n2 matches in 1 file\n",
			"settings":
			{
				"buffer_size": 422,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "Rakefile",
			"settings":
			{
				"buffer_size": 47312,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Package Control Messages\n========================\n\nEasyClangComplete\n-----------------\n\n  Version 4.1.1\n  =============\n  \n  Urgent bug fix:\n  ---------------\n  - allowing all sublime variables in plugin settings broke proper variable\n    expansion. Revert this commit.\n\n  Version 4.1.0\n  =============\n  \n  Fixes and improvements:\n  -------------\n  - removed a couple of threads related memoty leaks\n  - change debug and info logging style\n  - disambiguate between apple clang and general clang (@rwols)\n  - allow using all variables of sublime's window in settings (@rwols)\n  - fix disappearing param tag in Doxygen comments (@papadokolos)\n  \n  Thansk!\n  -------\n  Huge thanks go to the contributors: @rwols and @papadokolos\n  \n  I need your support!\n  --------------------\n  üíú this plugin? Please consider buying me a üçµ\n  https://github.com/niosus/EasyClangComplete#support-it\n",
			"settings":
			{
				"buffer_size": 880,
				"line_ending": "Unix",
				"name": "Package Control Messages",
				"read_only": true,
				"scratch": true
			}
		},
		{
			"file": "ext/oF_apps/testApp/oF_build_variables.yaml",
			"settings":
			{
				"buffer_size": 77468,
				"line_ending": "Unix"
			}
		},
		{
			"file": "ext/rubyOF/extconf.rb",
			"settings":
			{
				"buffer_size": 582,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "ext/rubyOF/extconf_common.rb",
			"settings":
			{
				"buffer_size": 5650,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "ext/rubyOF/extconf_printer.rb",
			"settings":
			{
				"buffer_size": 2533,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "ext/rubyOF/extconf_variables.yaml",
			"settings":
			{
				"buffer_size": 10021,
				"line_ending": "Unix"
			}
		},
		{
			"file": "ext/rubyOF/Makefile",
			"settings":
			{
				"buffer_size": 12383,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "l---",
			"settings":
			{
				"buffer_size": 4,
				"line_ending": "Unix",
				"name": "l---"
			}
		},
		{
			"file": "build/extension_loader.rb",
			"settings":
			{
				"buffer_size": 1226,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "build/window_guard.rb",
			"settings":
			{
				"buffer_size": 795,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "build/runtime_loader.rb",
			"settings":
			{
				"buffer_size": 2,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "---",
			"settings":
			{
				"buffer_size": 3,
				"line_ending": "Unix",
				"name": "---"
			}
		},
		{
			"file": "ext/oF_apps/testApp/src/ofApp.h",
			"settings":
			{
				"buffer_size": 577,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "ext/oF_apps/testApp/src/ofApp.cpp",
			"settings":
			{
				"buffer_size": 2071,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "ext/rubyOF/launcher.h",
			"settings":
			{
				"buffer_size": 1065,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "ext/rubyOF/launcher.cpp",
			"settings":
			{
				"buffer_size": 3949,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "ext/openFrameworks/libs/openFrameworks/app/ofAppRunner.h",
			"settings":
			{
				"buffer_size": 4317,
				"line_ending": "Unix"
			}
		},
		{
			"file": "ext/openFrameworks/libs/openFrameworks/app/ofBaseApp.h",
			"settings":
			{
				"buffer_size": 4154,
				"line_ending": "Unix"
			}
		},
		{
			"file": "ext/rubyOF/app_factory.h",
			"settings":
			{
				"buffer_size": 237,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "--- Boilerplate",
			"settings":
			{
				"buffer_size": 15,
				"line_ending": "Unix",
				"name": "--- Boilerplate"
			}
		},
		{
			"file": "bin/projects/boilerplate/config/build_variables.rb",
			"settings":
			{
				"buffer_size": 266,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "\nSHELL = /bin/sh\n\n# V=0 quiet, V=1 verbose.  other values don't work.\nV = 0\nQ1 = $(V:1=)\nQ = $(Q1:0=@)\nECHO1 = $(V:1=@ :)\nECHO = $(ECHO1:0=@ echo)\nNULLCMD = :\n\n#### Start of system configuration section. ####\n\nsrcdir = .\ntopdir = /home/ravenskrag/.rvm/rubies/ruby-2.4.0/include/ruby-2.4.0\nhdrdir = $(topdir)\narch_hdrdir = /home/ravenskrag/.rvm/rubies/ruby-2.4.0/include/ruby-2.4.0/x86_64-linux\nPATH_SEPARATOR = :\nVPATH = $(srcdir):$(arch_hdrdir)/ruby:$(hdrdir)/ruby\n\nprefix = $(DESTDIR)/home/ravenskrag/.rvm/rubies/ruby-2.4.0\n\nrubysitearchprefix = $(rubylibprefix)/$(sitearch)\n\nrubyarchprefix = $(rubylibprefix)/$(arch)\n\nrubylibprefix = $(libdir)/$(RUBY_BASE_NAME)\n\nexec_prefix = $(prefix)\n\nvendorarchhdrdir = $(vendorhdrdir)/$(sitearch)\n\nsitearchhdrdir = $(sitehdrdir)/$(sitearch)\n\nrubyarchhdrdir = $(rubyhdrdir)/$(arch)\n\nvendorhdrdir = $(rubyhdrdir)/vendor_ruby\n\nsitehdrdir = $(rubyhdrdir)/site_ruby\n\nrubyhdrdir = $(includedir)/$(RUBY_VERSION_NAME)\n\nvendorarchdir = $(vendorlibdir)/$(sitearch)\n\nvendorlibdir = $(vendordir)/$(ruby_version)\n\nvendordir = $(rubylibprefix)/vendor_ruby\n\nsitearchdir = $(sitelibdir)/$(sitearch)\n\nsitelibdir = $(sitedir)/$(ruby_version)\n\nsitedir = $(rubylibprefix)/site_ruby\n\nrubyarchdir = $(rubylibdir)/$(arch)\n\nrubylibdir = $(rubylibprefix)/$(ruby_version)\n\nsitearchincludedir = $(includedir)/$(sitearch)\n\narchincludedir = $(includedir)/$(arch)\n\nsitearchlibdir = $(libdir)/$(sitearch)\n\narchlibdir = $(libdir)/$(arch)\n\nridir = $(datarootdir)/$(RI_BASE_NAME)\n\nmandir = $(datarootdir)/man\n\nlocaledir = $(datarootdir)/locale\n\nlibdir = $(exec_prefix)/lib\n\npsdir = $(docdir)\n\npdfdir = $(docdir)\n\ndvidir = $(docdir)\n\nhtmldir = $(docdir)\n\ninfodir = $(datarootdir)/info\n\ndocdir = $(datarootdir)/doc/$(PACKAGE)\n\noldincludedir = $(DESTDIR)/usr/include\n\nincludedir = $(prefix)/include\n\nlocalstatedir = $(prefix)/var\n\nsharedstatedir = $(prefix)/com\n\nsysconfdir = $(DESTDIR)/etc\n\ndatadir = $(datarootdir)\n\ndatarootdir = $(prefix)/share\n\nlibexecdir = $(exec_prefix)/libexec\n\nsbindir = $(exec_prefix)/sbin\n\nbindir = $(exec_prefix)/bin\n\narchdir = $(rubyarchdir)\n\n\n\nCC = gcc\nCXX = g++\nLIBRUBY = $(LIBRUBY_SO)\nLIBRUBY_A = lib$(RUBY_SO_NAME)-static.a\nLIBRUBYARG_SHARED = -Wl,-rpath,'$${ORIGIN}/../lib' -Wl,-R'$${ORIGIN}/../lib' -l$(RUBY_SO_NAME)\nLIBRUBYARG_STATIC = -Wl,-rpath,'${ORIGIN}/../lib' -Wl,-R'${ORIGIN}/../lib' -lruby-static\nempty =\nOUTFLAG = -o $(empty)\nCOUTFLAG = -o $(empty)\nCSRCFLAG = $(empty)\n\nRUBY_EXTCONF_H = \ncflags   = $(optflags) $(debugflags) $(warnflags)\ncxxflags = $(optflags) $(debugflags) $(warnflags)\noptflags = -O3 -fno-fast-math\ndebugflags = -ggdb3\nwarnflags = -Wall -Wextra -Wno-unused-parameter -Wno-parentheses -Wno-long-long -Wno-missing-field-initializers -Wunused-variable -Wpointer-arith -Wwrite-strings -Wdeprecated-declarations -Wno-packed-bitfield-compat -Wsuggest-attribute=noreturn -Wsuggest-attribute=format -Wno-maybe-uninitialized\nCCDLFLAGS = -fPIC\nCFLAGS   = $(CCDLFLAGS) $(cflags)  -fPIC -fdiagnostics-color=always $(ARCH_FLAG)\nINCFLAGS = -I. -I$(arch_hdrdir) -I$(hdrdir)/ruby/backward -I$(hdrdir) -I$(srcdir)\nDEFS     = \nCPPFLAGS =   $(DEFS) $(cppflags)  -I/home/ravenskrag/.rvm/gems/ruby-2.4.0/gems/rice-2.1.1/ruby/lib/include -D_REENTRANT -pthread -I/usr/include/gstreamer-1.0 -I/usr/lib/x86_64-linux-gnu/gstreamer-1.0/include -I/usr/include/AL -I/usr/include/alsa -I/usr/include/libdrm -I/usr/include/gtk-3.0 -I/usr/include/at-spi2-atk/2.0 -I/usr/include/at-spi-2.0 -I/usr/include/dbus-1.0 -I/usr/lib/x86_64-linux-gnu/dbus-1.0/include -I/usr/include/gtk-3.0 -I/usr/include/gio-unix-2.0/ -I/usr/include/mirclient -I/usr/include/mircore -I/usr/include/mircookie -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/harfbuzz -I/usr/include/pango-1.0 -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12 -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/libpng12 -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/fmodex/include -I/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/glm/include -I/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/glm/include/glm -I/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/glm/include/glm/simd -I/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/glm/include/glm/gtx -I/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/glm/include/glm/detail -I/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/glm/include/glm/gtc -I/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/json/include -I/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/kiss/include -I/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/tess2/include -I/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/utf8/include -I/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/utf8/include/utf8 -I/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks -I/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/types -I/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/app -I/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/events -I/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/communication -I/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/graphics -I/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/video -I/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/3d -I/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/math -I/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/sound -I/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/utils -I/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl -I/home/ravenskrag/Desktop/gem_structure/ext/oF_apps/testApp/src -I/home/ravenskrag/Desktop/gem_structure/ext/oF_apps/testApp/lib -I/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxGui/src -I/home/ravenskrag/Desktop/gem_structure/ext/rubyOF\nCXXFLAGS = $(CFLAGS)  -Wall -g -O3 -march=native -mtune=native -Werror=return-type -std=c++14 -DGCC_HAS_REGEX -DOF_USING_GTK -DOF_USING_MPG123 -fdiagnostics-color=always\nldflags  = -L. -fstack-protector -rdynamic -Wl,-export-dynamic  -L/home/ravenskrag/.rvm/gems/ruby-2.4.0/gems/rice-2.1.1/ruby/lib/lib -lrice /home/ravenskrag/Desktop/gem_structure/ext/oF_apps/testApp/lib/libOFSketch.a   /home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworksCompiled/lib/linux64/libopenFrameworksDebug.a   -Wl,-rpath=.:.bin/lib:/home/ravenskrag/Desktop/gem_structure/bin/lib -Wl,--as-needed -Wl,--gc-sections   -lz -lgstapp-1.0 -lgstvideo-1.0 -lgstbase-1.0 -lgstreamer-1.0 -ludev -lfontconfig -lfreetype -lsndfile -lopenal -lssl -lcrypto -lcurl -lglfw -lpulse-simple -lpulse -lasound -lGLEW -lGLU -lGL -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0 -lmpg123 -lglut -lX11 -lXrandr -lXxf86vm -lXi -lXcursor -ldl -lpthread -lfreeimage -lboost_filesystem -lboost_system -lpugixml -luriparser -lXinerama -lrtaudio\ndldflags = -Wl,--compress-debug-sections=zlib \nARCH_FLAG = \nDLDFLAGS = $(ldflags) $(dldflags) $(ARCH_FLAG)\nLDSHARED = g++ -shared\nLDSHAREDXX = $(CXX) -shared\nAR = ar\nEXEEXT = \n\n\nRUBY_INSTALL_NAME = $(RUBY_BASE_NAME)\n\nRUBY_SO_NAME = ruby\n\nRUBYW_INSTALL_NAME = \n\nRUBY_VERSION_NAME = $(RUBY_BASE_NAME)-$(ruby_version)\n\nRUBYW_BASE_NAME = rubyw\n\nRUBY_BASE_NAME = ruby\n\n\narch = x86_64-linux\nsitearch = $(arch)\nruby_version = 2.4.0\nruby = $(bindir)/$(RUBY_BASE_NAME)\nRUBY = $(ruby)\nruby_headers = $(hdrdir)/ruby.h $(hdrdir)/ruby/backward.h $(hdrdir)/ruby/ruby.h $(hdrdir)/ruby/defines.h $(hdrdir)/ruby/missing.h $(hdrdir)/ruby/intern.h $(hdrdir)/ruby/st.h $(hdrdir)/ruby/subst.h $(arch_hdrdir)/ruby/config.h\n\nRM = rm -f\nRM_RF = $(RUBY) -run -e rm -- -rf\nRMDIRS = rmdir --ignore-fail-on-non-empty -p\nMAKEDIRS = /bin/mkdir -p\nINSTALL = /usr/bin/install\nINSTALL_PROG = $(INSTALL) -m 0755\nINSTALL_DATA = $(INSTALL) -m 644\nCOPY = cp\nTOUCH = exit >\n\n#### End of system configuration section. ####\n\npreload = \n\n\nCXX = g++\nlibpath = . $(libdir)\nLIBPATH =  -L. -L$(libdir) -Wl,-R$(libdir)\nDEFFILE = \n\nCLEANFILES = mkmf.log\nDISTCLEANFILES = \nDISTCLEANDIRS = \n\nextout = \nextout_prefix = \ntarget_prefix = /rubyOF\nLOCAL_LIBS = \nLIBS = -lstdc++ -Wl,-rpath,'${ORIGIN}/../lib' -Wl,-R'${ORIGIN}/../lib' -lruby -lpthread -lgmp -ldl -lcrypt -lm   -lc\nORIG_SRCS = app.cpp app_factory.cpp\nSRCS = $(ORIG_SRCS) \nOBJS = app.o app_factory.o\nHDRS = $(srcdir)/app.h\nLOCAL_HDRS = \nTARGET = rubyOF\nTARGET_NAME = rubyOF\nTARGET_ENTRY = Init_$(TARGET_NAME)\nDLLIB = $(TARGET).so\nEXTSTATIC = \nSTATIC_LIB = \n\nTIMESTAMP_DIR = .\n\nBINDIR        = $(bindir)\n\nRUBYCOMMONDIR = $(sitedir)$(target_prefix)\n\nRUBYLIBDIR    = $(sitelibdir)$(target_prefix)\n\nRUBYARCHDIR   = $(sitearchdir)$(target_prefix)\n\nHDRDIR        = $(rubyhdrdir)/ruby$(target_prefix)\n\nARCHHDRDIR    = $(rubyhdrdir)/$(arch)/ruby$(target_prefix)\n\nTARGET_SO_DIR =\nTARGET_SO     = $(TARGET_SO_DIR)$(DLLIB)\nCLEANLIBS     = $(TARGET_SO) \nCLEANOBJS     = *.o  *.bak\n\n\nall:    $(DLLIB)\nstatic: $(STATIC_LIB) install-rb\n.PHONY: all install static install-so install-rb\n.PHONY: clean clean-so clean-static clean-rb\n\nclean-static::\nclean-rb-default::\nclean-rb::\nclean-so::\nclean: clean-so clean-static clean-rb-default clean-rb\n\t\t-$(Q)$(RM) $(CLEANLIBS) $(CLEANOBJS) $(CLEANFILES) .*.time\n\ndistclean-rb-default::\ndistclean-rb::\ndistclean-so::\ndistclean-static::\ndistclean: clean distclean-so distclean-static distclean-rb-default distclean-rb\n\t\t-$(Q)$(RM) Makefile $(RUBY_EXTCONF_H) conftest.* mkmf.log\n\t\t-$(Q)$(RM) core ruby$(EXEEXT) *~ $(DISTCLEANFILES)\n\t\t-$(Q)$(RMDIRS) $(DISTCLEANDIRS) 2> /dev/null || true\n\nrealclean: distclean\ninstall: install-so install-rb\n\ninstall-so: $(DLLIB) $(TIMESTAMP_DIR)/.sitearchdir.-.rubyOF.time\n\t$(INSTALL_PROG) $(DLLIB) $(RUBYARCHDIR)\nclean-static::\n\t-$(Q)$(RM) $(STATIC_LIB)\ninstall-rb: pre-install-rb do-install-rb install-rb-default\ninstall-rb-default: pre-install-rb-default do-install-rb-default\npre-install-rb: Makefile\npre-install-rb-default: Makefile\ndo-install-rb:\ndo-install-rb-default:\npre-install-rb-default:\n\t@$(NULLCMD)\n$(TIMESTAMP_DIR)/.sitearchdir.-.rubyOF.time:\n\t$(Q) $(MAKEDIRS) $(@D) $(RUBYARCHDIR)\n\t$(Q) $(TOUCH) $@\n\nsite-install: site-install-so site-install-rb\nsite-install-so: install-so\nsite-install-rb: install-rb\n\n.SUFFIXES: .c .m .cc .mm .cxx .cpp .o .S\n\n.cc.o:\n\t$(ECHO) compiling $(<)\n\t$(Q) $(CXX) $(INCFLAGS) $(CPPFLAGS) $(CXXFLAGS) $(COUTFLAG)$@ -c $(CSRCFLAG)$<\n\n.cc.S:\n\t$(ECHO) translating $(<)\n\t$(Q) $(CXX) $(INCFLAGS) $(CPPFLAGS) $(CXXFLAGS) $(COUTFLAG)$@ -S $(CSRCFLAG)$<\n\n.mm.o:\n\t$(ECHO) compiling $(<)\n\t$(Q) $(CXX) $(INCFLAGS) $(CPPFLAGS) $(CXXFLAGS) $(COUTFLAG)$@ -c $(CSRCFLAG)$<\n\n.mm.S:\n\t$(ECHO) translating $(<)\n\t$(Q) $(CXX) $(INCFLAGS) $(CPPFLAGS) $(CXXFLAGS) $(COUTFLAG)$@ -S $(CSRCFLAG)$<\n\n.cxx.o:\n\t$(ECHO) compiling $(<)\n\t$(Q) $(CXX) $(INCFLAGS) $(CPPFLAGS) $(CXXFLAGS) $(COUTFLAG)$@ -c $(CSRCFLAG)$<\n\n.cxx.S:\n\t$(ECHO) translating $(<)\n\t$(Q) $(CXX) $(INCFLAGS) $(CPPFLAGS) $(CXXFLAGS) $(COUTFLAG)$@ -S $(CSRCFLAG)$<\n\n.cpp.o:\n\t$(ECHO) compiling $(<)\n\t$(Q) $(CXX) $(INCFLAGS) $(CPPFLAGS) $(CXXFLAGS) $(COUTFLAG)$@ -c $(CSRCFLAG)$<\n\n.cpp.S:\n\t$(ECHO) translating $(<)\n\t$(Q) $(CXX) $(INCFLAGS) $(CPPFLAGS) $(CXXFLAGS) $(COUTFLAG)$@ -S $(CSRCFLAG)$<\n\n.c.o:\n\t$(ECHO) compiling $(<)\n\t$(Q) $(CC) $(INCFLAGS) $(CPPFLAGS) $(CFLAGS) $(COUTFLAG)$@ -c $(CSRCFLAG)$<\n\n.c.S:\n\t$(ECHO) translating $(<)\n\t$(Q) $(CC) $(INCFLAGS) $(CPPFLAGS) $(CFLAGS) $(COUTFLAG)$@ -S $(CSRCFLAG)$<\n\n.m.o:\n\t$(ECHO) compiling $(<)\n\t$(Q) $(CC) $(INCFLAGS) $(CPPFLAGS) $(CFLAGS) $(COUTFLAG)$@ -c $(CSRCFLAG)$<\n\n.m.S:\n\t$(ECHO) translating $(<)\n\t$(Q) $(CC) $(INCFLAGS) $(CPPFLAGS) $(CFLAGS) $(COUTFLAG)$@ -S $(CSRCFLAG)$<\n\n$(TARGET_SO): $(OBJS) Makefile\n\t$(ECHO) linking shared-object rubyOF/$(DLLIB)\n\t-$(Q)$(RM) $(@)\n\t$(Q) $(LDSHAREDXX) -o $@ $(OBJS) $(LIBPATH) $(DLDFLAGS) $(LOCAL_LIBS) $(LIBS)\n\n\n\n$(OBJS): $(HDRS) $(ruby_headers)\n",
			"file": "bin/projects/boilerplate/ext/window/Makefile",
			"file_size": 12202,
			"file_write_time": 131461978390950112,
			"settings":
			{
				"buffer_size": 12202,
				"line_ending": "Unix"
			}
		},
		{
			"file": "bin/projects/boilerplate/ext/window/app_factory.cpp",
			"settings":
			{
				"buffer_size": 140,
				"line_ending": "Unix"
			}
		},
		{
			"file": "bin/projects/boilerplate/ext/window/app.cpp",
			"settings":
			{
				"buffer_size": 4651,
				"line_ending": "Unix"
			}
		},
		{
			"file": "bin/projects/boilerplate/ext/window/app.h",
			"settings":
			{
				"buffer_size": 1127,
				"line_ending": "Unix"
			}
		},
		{
			"file": "bin/projects/boilerplate/ext/window/extconf.rb",
			"settings":
			{
				"buffer_size": 991,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "bin/projects/boilerplate/ext/callbacks/extconf.rb",
			"settings":
			{
				"buffer_size": 692,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "bin/projects/boilerplate/lib/main.rb",
			"settings":
			{
				"buffer_size": 1416,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "bin/projects/boilerplate/Gemfile",
			"settings":
			{
				"buffer_size": 262,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "--- Example",
			"settings":
			{
				"buffer_size": 11,
				"line_ending": "Unix",
				"name": "--- Example"
			}
		},
		{
			"file": "bin/projects/example/ext/window/Makefile",
			"settings":
			{
				"buffer_size": 12202,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "\n\n# \n# want to make sure the symbols from the new .a are making it into the new .so\n# \n\n\nravenskrag@ravensnest:~/Desktop/gem_structure/ext/rubyOF$\n\tar cr lib/libwrapper.a Fbo.o Graphics.o image.o launcher.o rubyOF.o TrueTypeFont.o \n\n\nravenskrag@ravensnest:~/Desktop/gem_structure/bin/projects/example/ext$\n\tmake clean\n\truby extconf.rb && make\n\tnm -C rubyOF.so | grep Launcher\n\n\n\n(if grep finds \"Launcher\" , then everything is working)\n\n\n\n\n\nravenskrag@ravensnest:~/Desktop/gem_structure/ext/rubyOF$\n\tnm -C rubyOF.so | grep Launcher\n\n=> \n\t00000000005cf1c0 W void ruby_mark<Launcher>(Launcher*)\n\t0000000000aa6648 u guard variable for Rice::Data_Type<Launcher>::caster_\n\t0000000000aa6750 u guard variable for Rice::Data_Type<Launcher>::unbound_instances()::unbound_instances\n\n\t[... truncated for brevity ...]\n\n\n\n\n# \n# just to be sure, you can check to make sure the symbols are in the .a too\n# (they are certainly in there)\n# \nravenskrag@ravensnest:~/Desktop/gem_structure/ext/rubyOF$\n\tnm -C lib/libwrapper.a  | grep Launcher\n",
			"settings":
			{
				"buffer_size": 1022,
				"line_ending": "Unix"
			}
		},
		{
			"file": "bin/projects/example/ext/window/app_factory.cpp",
			"settings":
			{
				"buffer_size": 140,
				"line_ending": "Unix"
			}
		},
		{
			"file": "bin/projects/example/ext/window/app.cpp",
			"settings":
			{
				"buffer_size": 8025,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "bin/projects/example/ext/window/app.h",
			"settings":
			{
				"buffer_size": 1446,
				"line_ending": "Unix"
			}
		},
		{
			"file": "bin/projects/example/ext/window/extconf.rb",
			"settings":
			{
				"buffer_size": 991,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "bin/projects/example/ext/callbacks/extconf.rb",
			"settings":
			{
				"buffer_size": 692,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "bin/projects/example/lib/main.rb",
			"settings":
			{
				"buffer_size": 1416,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "bin/projects/example/Gemfile",
			"settings":
			{
				"buffer_size": 291,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "---round_tripping",
			"settings":
			{
				"buffer_size": 17,
				"line_ending": "Unix",
				"name": "---round_tripping"
			}
		},
		{
			"file": "bin/projects/round_tripping/ext/window/app.cpp",
			"settings":
			{
				"buffer_size": 5138,
				"line_ending": "Unix"
			}
		},
		{
			"file": "bin/projects/round_tripping/ext/window/app.h",
			"settings":
			{
				"buffer_size": 1127,
				"line_ending": "Unix"
			}
		},
		{
			"file": "bin/projects/round_tripping/lib/window.rb",
			"settings":
			{
				"buffer_size": 1997,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "bin/projects/round_tripping/ext/callbacks/callbacks.cpp",
			"settings":
			{
				"buffer_size": 2685,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "bin/projects/round_tripping/ext/callbacks/callbacks.h",
			"settings":
			{
				"buffer_size": 497,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "bin/projects/round_tripping/ext/window/extconf.rb",
			"settings":
			{
				"buffer_size": 991,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "bin/projects/round_tripping/ext/callbacks/extconf.rb",
			"settings":
			{
				"buffer_size": 692,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "bin/projects/round_tripping/lib/main.rb",
			"settings":
			{
				"buffer_size": 1416,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "---",
			"settings":
			{
				"buffer_size": 3,
				"line_ending": "Unix",
				"name": "---"
			}
		},
		{
			"contents": "require 'mkmf-rice'\nrequire 'pathname'\n\npath_to_file = File.absolute_path(File.dirname(__FILE__))\n\ngem_root =\n\tPathname.new(__FILE__).expand_path.ascend.find do |path|\n\t\t(path + 'common.rb').exist?\n\tend\n\nraise \"ERROR: Could not find the gem's root directory. Assuming 'common.rb' is stored in the top level of the gem.\" if gem_root.nil?\n\n\nrequire File.expand_path('./common', gem_root)\n# ^ this file declares GEM_ROOT constant, other constants, and a some functions\n\n# ^--- changed that part (needed to update the 'gem_root' path)\n\n\nrequire File.join(GEM_ROOT, 'ext', NAME, 'extconf_common.rb')\n\n\n# ========================================\n# ========== add new stuff here ==========\n\n\n# have_library(\"stdc++\")\n\n\n\n# ========================================\n# ========================================\n\n\n\ncreate_makefile('rubyOF/rubyOF_project')\n",
			"file": "bin/projects/container/foo/ext/callbacks/extconf.rb",
			"file_size": 843,
			"file_write_time": 131461262385883624,
			"settings":
			{
				"buffer_size": 843,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "require 'mkmf-rice'\nrequire 'pathname'\n\npath_to_file = File.absolute_path(File.dirname(__FILE__))\n\ngem_root =\n\tPathname.new(__FILE__).expand_path.ascend.find do |path|\n\t\t(path + 'common.rb').exist?\n\tend\n\nraise \"ERROR: Could not find the gem's root directory. Assuming 'common.rb' is stored in the top level of the gem.\" if gem_root.nil?\n\n\nrequire File.expand_path('./common', gem_root)\n# ^ this file declares GEM_ROOT constant, other constants, and a some functions\n\n# ^--- changed that part (needed to update the 'gem_root' path)\n\n\nrequire File.join(GEM_ROOT, 'ext', NAME, 'extconf_common.rb')\n\n\n# Need this to load 'app_factory.h'\npath = File.join(GEM_ROOT, 'ext', NAME)\n$CPPFLAGS += \" -I#{path}\"\n\n# ========================================\n# ========== add new stuff here ==========\n\n\n\n\n\n# ========================================\n# ========================================\n\n\n\ncreate_makefile('rubyOF/rubyOF')\n\n\n\nrequire File.join(GEM_ROOT, 'ext', NAME, 'extconf_printer.rb')\n\nfilepath = File.join(path_to_file, 'extconf_variables.yaml')\nwrite_extconf_variables_to_file(filepath)\n\n",
			"file": "bin/projects/container/foo/ext/window/extconf.rb",
			"file_size": 1084,
			"file_write_time": 131461260036724577,
			"settings":
			{
				"buffer_size": 1084,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "require 'pathname'\n\npathname = Pathname.new(__FILE__)\n\n\npathname.expand_path.ascend do |path|\n\tputs path\n\t\n\tif (path + 'common.rb').exist?\n\t\tputs \"STOP. found the root!\"\n\t\tbreak\n\tend \nend\n\n\nrequire 'irb'\nbinding.irb\n",
			"file": "bin/projects/container/foo/ext/window/constants/scratch.rb",
			"file_size": 216,
			"file_write_time": 131461251471411299,
			"settings":
			{
				"buffer_size": 216,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 750.0,
		"last_filter": "com",
		"selected_items":
		[
			[
				"com",
				"Git: Commit"
			],
			[
				"gig",
				"Git GUI Clients: Gitg"
			],
			[
				"comm",
				"Git: Commit"
			],
			[
				"case",
				"Convert Case: Upper Case"
			],
			[
				"convertu",
				"Convert Case: Upper Case"
			],
			[
				"gcig",
				"Git GUI Clients: Gitg"
			],
			[
				"ruby",
				"Set Syntax: Ruby"
			],
			[
				"commi",
				"Git: Commit"
			],
			[
				"make",
				"Set Syntax: Makefile"
			],
			[
				"commit",
				"Git: Commit"
			],
			[
				"yaml",
				"Set Syntax: YAML"
			],
			[
				"amke",
				"Set Syntax: Makefile"
			],
			[
				"disa",
				"Package Control: Disable Package"
			],
			[
				"package",
				"Package Control: Enable Package"
			],
			[
				"gitg",
				"Git GUI Clients: Gitg"
			],
			[
				"add",
				"Git: Add Current File"
			],
			[
				"git comm",
				"Git: Commit"
			],
			[
				"git add",
				"Git: Add Current File"
			],
			[
				"kra",
				"Git GUI Clients: GitKraken"
			],
			[
				"kr",
				"Git GUI Clients: GitKraken"
			],
			[
				"kraken",
				"Git GUI Clients: GitKraken"
			],
			[
				"makefil",
				"Set Syntax: Makefile"
			],
			[
				"ging",
				"Git GUI Clients: Gitg"
			],
			[
				"rub",
				"SublimeREPL: Ruby"
			],
			[
				"yam",
				"Set Syntax: YAML"
			],
			[
				"pacage",
				"Package Control: Enable Package"
			],
			[
				"g",
				"Git GUI Clients: Gitg"
			],
			[
				"makefile",
				"Set Syntax: Makefile"
			],
			[
				"c++",
				"Set Syntax: Objective-C++"
			],
			[
				"objec",
				"Set Syntax: Objective-C"
			],
			[
				"lua",
				"Set Syntax: Lua"
			],
			[
				"pyth",
				"Set Syntax: Python"
			],
			[
				"makef",
				"Set Syntax: Makefile"
			],
			[
				"packag",
				"Package Control: Install Package"
			],
			[
				"irb",
				"SublimeREPL: Ruby IRB (deprecated)"
			],
			[
				"ruby ",
				"SublimeREPL: Ruby"
			],
			[
				"python",
				"SublimeREPL: Python"
			],
			[
				"r oc",
				"SublimeREPL: Octave"
			],
			[
				"repl o",
				"SublimeREPL: Octave"
			],
			[
				"octav",
				"SublimeREPL: Octave"
			],
			[
				"repl ruby",
				"SublimeREPL: Ruby"
			],
			[
				"repl ru",
				"SublimeREPL: Ruby"
			],
			[
				"repl",
				"SublimeREPL: Octave"
			],
			[
				"repl rub",
				"SublimeREPL: Ruby"
			],
			[
				"repl j",
				"SublimeREPL: Clojure"
			],
			[
				"mal",
				"Set Syntax: MATLAB"
			],
			[
				"matl",
				"Set Syntax: MATLAB"
			],
			[
				"keyb",
				"Preferences: Key Bindings - User"
			],
			[
				"mat",
				"Set Syntax: MATLAB"
			],
			[
				"package en",
				"Package Control: Upgrade Package"
			],
			[
				"package dis",
				"Package Control: Disable Package"
			],
			[
				"matlab",
				"Set Syntax: MATLAB"
			],
			[
				"repl oca",
				"SublimeREPL: Octave"
			],
			[
				"repl octa",
				"SublimeREPL: Octave"
			],
			[
				"install p",
				"Package Control: Install Package"
			],
			[
				"package in",
				"Package Control: Install Package"
			],
			[
				"text",
				"Set Syntax: Plain Text"
			],
			[
				"mark",
				"Set Syntax: Markdown"
			],
			[
				"todo",
				"Show TODOs: Project and open files"
			],
			[
				"wra",
				"Word Wrap: Toggle"
			],
			[
				"pla",
				"Set Syntax: Plain Text"
			],
			[
				"pack",
				"Package Control: Disable Package"
			],
			[
				"tod",
				"Show TODOs: Project and open files"
			],
			[
				"to",
				"Show TODOs: Project and open files"
			],
			[
				"",
				"About"
			],
			[
				"pac",
				"Package Control: List Packages"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"log",
				"Git: Log Current File"
			],
			[
				"st",
				"Git: Status"
			],
			[
				"stat",
				"Git: Status"
			],
			[
				"pre",
				"Markdown Preview: preview in Browser"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"pr",
				"Markdown Preview: preview in Browser"
			],
			[
				"previe",
				"Markdown Preview: preview in Browser"
			],
			[
				"snipp",
				"Snippet: if ‚Ä¶ end"
			],
			[
				"snip",
				"Snippet: YAML.load(file)"
			],
			[
				"prefer",
				"Preferences: Settings - User"
			],
			[
				"key",
				"Preferences: Key Bindings - User"
			],
			[
				"vie",
				"Markdown Preview: preview in Browser"
			],
			[
				"pa",
				"Package Control: List Packages"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"reve",
				"File: Revert"
			],
			[
				"markdown",
				"Markdown Preview: preview in Sublime Text"
			],
			[
				"view",
				"Markdown Preview: preview in Browser"
			],
			[
				"prev",
				"Markdown Preview: preview in Browser"
			],
			[
				"smark",
				"Set Syntax: Markdown"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"brow",
				"Preferences: Browse Packages"
			],
			[
				"bro",
				"Preferences: Browse Packages"
			],
			[
				"git pu",
				"Git: Push"
			],
			[
				"fet",
				"Git: Fetch"
			],
			[
				"syntax te",
				"Set Syntax: Textile"
			],
			[
				"lo",
				"Git: Log All"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"oto",
				"Show TODOs: Open files only"
			],
			[
				"show",
				"Show TODOs: Project and open files"
			],
			[
				"list",
				"Package Control: List Packages"
			],
			[
				"pcaka",
				"Package Control: Install Package"
			],
			[
				"pcak",
				"Package Control: Discover Packages"
			],
			[
				"anno",
				"Git: Toggle Annotations"
			]
		],
		"width": 1032.0
	},
	"console":
	{
		"height": 259.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
	],
	"file_history":
	[
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/container/foo/Gemfile",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/example/config/build_variables.rb",
		"/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/build/extension_builder.rb",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/boilerplate/ext/callbacks/extconf.rb",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/container/foo/ext/callbacks/extconf.rb",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/container/foo/ext/window/extconf.rb",
		"/home/ravenskrag/.rvm/gems/ruby-2.4.0/gems/rice-2.1.1/rice/Array.hpp",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/example/ext/app_factory.cpp",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/example/ext/app.h",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/example/ext/app.cpp",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/example/ext/constants/data_path.h",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/example/ext/Makefile",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/example/ext/extconf.rb",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/boilerplate/ext/app.h",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/boilerplate/ext/app.cpp",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/boilerplate/ext/app_factory.cpp",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/boilerplate/ext/Makefile",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/boilerplate/ext/extconf.rb",
		"/home/ravenskrag/.rvm/gems/ruby-2.4.0/gems/rice-2.1.1/post-automake.rb",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/input_output/imageLoaderExample/src/main.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/input_output/imageLoaderExample/src/ofApp.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/input_output/imageLoaderExample/src/ofApp.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/gl/pointsAsTexturesExample/src/ofApp.cpp",
		"/home/ravenskrag/Projects/1_Sketchbook/Current/safe_pty.rb",
		"/home/ravenskrag/.rvm/gems/ruby-2.4.0/gems/bundler-1.15.3/lib/bundler/cli.rb",
		"/home/ravenskrag/.rvm/gems/ruby-2.4.0/gems/bundler-1.15.3/Rakefile",
		"/home/ravenskrag/Projects/2_Personal/Current/ruby_of_cpp_combination/RubyCPP/Oni/lib/projects/ThoughtTrace/Gemfile",
		"/home/ravenskrag/Desktop/gem_structure/ext/oF_apps/testApp/Makefile.static_lib",
		"/home/ravenskrag/Desktop/gem_structure/lib/rubyOF.rb",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/example/ext/extconf_variables.yaml",
		"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/extconf_variables.rb",
		"/home/ravenskrag/Desktop/gem_structure/ext/extconf_common.rb",
		"/home/ravenskrag/Desktop/gem_structure/ext/extconf_printer.rb",
		"/home/ravenskrag/Desktop/gem_structure/ext/oF_apps/testApp/src/main.cpp",
		"/home/ravenskrag/.rvm/gems/ruby-2.4.0/gems/rice-2.1.1/rice/Data_Type.cpp",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/boilerplate/ext/constants/data_path.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/oF_apps/testApp/raw_oF_variables.yaml",
		"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/rb_app.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/rb_app.cpp",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/template/ext/app.h",
		"/home/ravenskrag/Desktop/gem_structure/bin/projects/template/ext/app.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/ofMain.h",
		"/home/ravenskrag/.rvm/gems/ruby-2.4.0/gems/rice-2.1.1/extconf.rb",
		"/home/ravenskrag/Desktop/gem_structure/examine2.txt",
		"/home/ravenskrag/Desktop/gem_structure/examine.txt",
		"/home/ravenskrag/Projects/2_Personal/Current/RubyCPP/Oni/lib/projects/Scope/bin/main.rb",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/graphics/ofImage.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/graphics/ofImage.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/constants/data_path.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/graphics/ofGraphics.cpp",
		"/home/ravenskrag/Desktop/gem_structure/bin/data/box.jpg",
		"/home/ravenskrag/.rvm/gems/ruby-2.4.0/gems/rice-2.1.1/rice/protect.ipp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/app/ofAppRunner.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/oF_apps/testApp/Makefile.static_lib.debug",
		"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/rice.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/addons/ofxEmscripten/src/ofxEmscriptenSoundPlayer.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/utils/ofLog.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/utils/ofLog.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/oF_apps/testApp/Makefile",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/app/ofBaseApp.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/oF_apps/testApp/oF_build_variables.yaml",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/.gitignore",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/input_output/clipboardExample/src/ofApp.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/input_output/clipboardExample/src/ofApp.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/strings/stdRegulaExpressionExample/src/ofApp.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/strings/sortingExample/src/ofApp.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/strings/stdRegulaExpressionExample/src/ofApp.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/strings/sortingExample/src/ofApp.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/strings/regularExpressionExample/src/ofApp.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/strings/regularExpressionExample/src/ofApp.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/strings/ofLogExample/src/ofApp.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/strings/ofLogExample/src/ofApp.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/strings/conversionExample/src/ofApp.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/strings/conversionExample/src/ofApp.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/events/advancedEventsExample/src/eventsObject.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/compile_commands.json",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/graphics/ofTrueTypeFont.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofTexture.h",
		"/home/ravenskrag/Desktop/gem_structure/compile_commands.json",
		"/home/ravenskrag/Projects/2_Personal/Current/RubyCPP/Oni/lib/projects/template/main.rb",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/examples/gl/pointsAsTexturesExample/src/ofApp.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/utils/ofFileUtils.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/utils/ofFileUtils.h",
		"/home/ravenskrag/Projects/2_Personal/Current/RubyCPP/Oni/lib/projects/ThoughtTrace/bin/main.rb",
		"/home/ravenskrag/Projects/2_Personal/Current/RubyCPP/Oni/ext/oni/cpp/lib/Graphics.cpp",
		"/home/ravenskrag/Projects/2_Personal/Current/RubyCPP/Oni/ext/oni/cpp/lib/Graphics.h",
		"/home/ravenskrag/Projects/2_Personal/Current/RubyCPP/Oni/ext/oni/cpp/lib/TrueTypeFont.cpp",
		"/home/ravenskrag/Projects/2_Personal/Current/RubyCPP/Oni/ext/oni/cpp/lib/TrueTypeFont.h",
		"/home/ravenskrag/Projects/2_Personal/Current/RubyCPP/Oni/ext/oni/cpp/lib/Fbo.h",
		"/home/ravenskrag/Projects/2_Personal/Current/RubyCPP/Oni/ext/oni/cpp/lib/Fbo.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/glm/include/glm/glm.hpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofFbo.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworks/gl/ofFbo.h",
		"/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/freezable.rb",
		"/home/ravenskrag/Desktop/gem_structure/lib/rubyOF/version.rb",
		"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/extconf.rb",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/apps/projectGenerator/scripts/linux/buildPG.sh",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/apps/projectGenerator/commandLine/Makefile",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworksCompiled/project/Makefile",
		"/home/ravenskrag/Projects/2_Personal/Current/RubyCPP/Oni/ext/oni/cpp/testApp/Makefile.static_lib",
		"/home/ravenskrag/Desktop/gem_structure/ext/oF_apps/testApp/config.make",
		"/home/ravenskrag/Desktop/gem_structure/ext/oF_apps/testApp/obj/linux64/Release/src/main.d",
		"/home/ravenskrag/Desktop/gem_structure/README.md",
		"/home/ravenskrag/Desktop/gem_structure/ext/of_apps/README.txt",
		"/home/ravenskrag/Desktop/gem_structure/ext/oF_apps/README.txt",
		"/home/ravenskrag/Projects/2_Personal/Current/RubyCPP/Oni/build_libs/common.rb",
		"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/app.h",
		"/home/ravenskrag/Projects/2_Personal/Current/RubyCPP/Oni/ext/oni/cpp/testApp/src/ofApp.h",
		"/home/ravenskrag/Projects/2_Personal/Current/RubyCPP/Oni/ext/oni/cpp/testApp/src/ofApp.cpp",
		"/home/ravenskrag/Desktop/gem_structure/ext/rubyOF/Fbo.h",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/libs/openFrameworksCompiled/project/makefileCommon/config.shared.mk",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/scripts/linux/download_libs.sh",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/scripts/dev/download_libs.sh",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/scripts/android/download_libs.sh",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/scripts/linux/compileOF.sh",
		"/home/ravenskrag/Desktop/gem_structure/build/common.rb",
		"/home/ravenskrag/Desktop/gem_structure/build/Rakefile",
		"/home/ravenskrag/Desktop/gem structure/.gitignore",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/.gitmodules",
		"/home/ravenskrag/Desktop/gem_structure/.gitmodules",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/.git",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/scripts/apothecary/.git",
		"/home/ravenskrag/Desktop/gem_structure/ext/openFrameworks/apps/projectGenerator/.git",
		"/home/ravenskrag/Desktop/gem_structure/.git/index",
		"/home/ravenskrag/Desktop/gem structure/ext/openFrameworks/apps/projectGenerator/commandLine/Makefile",
		"/home/ravenskrag/Desktop/gem structure/ext/openFrameworks/apps/projectGenerator/scripts/linux/buildPG.sh",
		"/home/ravenskrag/Desktop/gem structure/ext/openFrameworks/README.md",
		"/home/ravenskrag/Desktop/gem structure/ext/openFrameworks/apps/projectGenerator/commandLine/readme.md"
	],
	"find":
	{
		"height": 64.0
	},
	"find_in_files":
	{
		"height": 170.0,
		"where_history":
		[
			"",
			"<open files>",
			"<open folders>",
			"",
			"<open files>",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"ruby:de",
			":clobber",
			"filepath",
			"def update",
			"update",
			"clean",
			"@so_paths[:install]",
			":install",
			"build",
			"/",
			"path_to_file",
			"this_dir",
			"path_or_name",
			"project_generator",
			"relative",
			"name ==",
			"GEM_ROOT = ",
			"find_and_replace",
			"readline",
			"RubyOF::Build.load_project",
			"path_to_file",
			"CUSTOM_GEM_ROOT",
			"custom_gem_root",
			"custom_gem_root.call",
			"custom_gem_root",
			"path",
			".cp",
			"cp",
			"cp_r",
			"File.",
			"RubyBundlerAutomation",
			"@project_name",
			"create_project",
			"[]",
			"bindir",
			":clean",
			"cpp_wrapper_code",
			":static_lib",
			"static_lib",
			"oF_project:static_lib",
			"*/ext",
			"cpp_callbacks",
			"nothing to clean",
			"make clean",
			"#",
			"cpp_wrapper_code",
			"task :clobber =>",
			"project_name",
			"@project_path, 'ext'",
			"extconf.rb",
			"create_project",
			"'example'",
			"load_project",
			"=",
			"Build.parse_project_path",
			"parse_project_path",
			"parse_",
			"run_task",
			"project_generator",
			"parse_project_path",
			"path_or_name",
			"inject",
			"install_oF_dynamic",
			"install_of_dynamic",
			"cpp_project",
			"cpp_glue_code",
			":debug",
			"ruby:",
			"project_name",
			"rubyOF_project_name",
			"RUBYOF_PROJECT_NAME",
			"rubyOF_project_name",
			"\t\t",
			"core",
			"bundle_",
			":deps:core",
			"core:install",
			":install",
			"Foo::Configuration",
			"export_build_variables",
			"of_build_vari",
			"rubyof_project_name",
			"oF_project",
			"oF_project:build",
			", [:rubyOF_project_name]",
			":name",
			"name",
			"rubyOF_project_name",
			":final",
			"       'tmp', ",
			"app_path",
			"project",
			":intermediate",
			"intermediate",
			"[:intermediate",
			":intermediate",
			"dynamic_lib_install_location",
			"dynamic_lib_build_location",
			"@dynamic_lib",
			"dynamic_lib_install_path",
			"dynamic_lib_build_path",
			"test_foo",
			"RUBYOF_DATA_PATH",
			"project_var_file",
			"main_var_file",
			"extconf_variables.yaml",
			".yaml",
			"EXTCONF",
			"clobber",
			"extconf_variables.yaml",
			"RUBYOF_EXTCONF_VARIABLE_FILE",
			"'ext', NAME",
			"# NOTE: ",
			"vars",
			"patched_objs",
			"patched_obj_paths",
			"b",
			"@path",
			"@name",
			"@project_",
			"project_",
			"RUBYOF_EXTCONF_VARIABLE_FILE",
			"extconf_variables.yaml",
			"extconf",
			"|t, ",
			"t.",
			"rubyof_",
			"RUBYOF_"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			" \n",
			"module ThoughtTrace\n\n\n# Controls overall execution flow for all input systems.\n# Like a main method for the entire input system.\n# \n# As it is a \"main\", this class is more a portion of ThoughtTrace proper,\n# rather than something than can be externalized.\n# This is reflected in the module chosen to hold this class.\nclass InputManager\n\t# TODO: control mouseover effects from this class as well\n\t\n\tattr_reader :mouse, :buttons\n\t\n\tdef initialize(window, space, camera)\n\t\t@space = space\n\t\t@camera = camera\n\t\t\n\t\t\n\t\t# TODO: properly implement mouse.\n\t\t@mouse = InputSystem::Mouse.new window\n\t\t\n\t\t@selection = [] # TODO: create actual selection collection. Array is placeholder. May work, may not. Haven't actually thought about it at all.\n\t\t\n\t\t@text_input = ThoughtTrace::TextInput.new\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t# manages many input events\n\t\t# input events correspond to button presses\n\t\t# those buttons can be keyboard keys, mouse buttons, or gamepad buttons\n\t\t@buttons = InputSystem::ButtonParser.new\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t# hold actions flow controllers, so that input manager can direct action UI drawing\n\t\t# need to draw actions so that they can show polymorphic interface information\n\t\t# NOTE: storing actions this way means that the button parser doesn't have to know anything about the input system.\n\t\t@actions = Array.new\n\t\t\n\t\t# NOTE: Action names and Event names may not necessarily have the same requirements.\n\t\t\t# Action names\n\t\t\t\t# Control what sort of action will be fired\n\t\t\t\t# Like methods, specifics are resolved with polymorphism\n\t\t\t# Event names\n\t\t\t\t# unique ID for this specific Event\n\t\t\t\t# must be distinct among keyboard, mouse, joystick etc events\n\t\t\t\t# each Event is one combination of (name, binding, callback)\n\t\t\t\t# thus, it is possible for many events to trigger one Action\n\t\t\t\t# because you want multiple bindings on one Action\n\t\t\t\t# (thing mouse bindings vs keyboard, rather than multiple keyboard shortcuts)\n\t\t\n\t\t\n\t\t# action_flow = ThoughtTrace::ActionFlowController.new(@space, @selection, @stash)\n\t\t# # TODO: register action names in action flow controller\n\t\t# action_flow.bindings[categorization][phase] = action_name\n\t\t# # NOTE: There's no warning if you try to assign an action name to a phase that does not exist. This is really dangerous, and had me hunting bugs in a bunch of the wrong places.\n\t\t\n\t\t# \tevent_name = :click\n\t\t# \tcallbacks = InputSystem::MouseActionController.new @mouse, action_flow\n\t\t# event = InputSystem::ButtonEvent.new event_name, callbacks\n\t\t# event.bind_to keys:[Gosu::MsLeft], modifiers:[]\n\t\t\n\t\t# @buttons.register event\n\t\t\n\t\t\n\t\t\n\t\t\n\t\taction_flow = ThoughtTrace::ActionFlowController.new(@space, @selection, @text_input)\n\t\tcallbacks = InputSystem::MouseActionController.new @mouse, action_flow\n\t\t\n\t\t\tevent = InputSystem::ButtonEvent.new :click, callbacks\n\t\t\tevent.bind_to keys:[Gosu::MsLeft], modifiers:[]\n\t\t\t\n\t\t\taction_flow.bindings[:existing][:click] = :edit\n\t\t\taction_flow.bindings[:existing][:drag] = :move\n\t\t\t\n\t\t\taction_flow.bindings[:empty][:click] = :spawn_text \n\t\t\t# action_flow.bindings[:empty][:drag] = :move\n\t\t\n\t\t@actions << action_flow\n\t\t@buttons.register event\n\t\t\n\t\t\n\t\t\n\t\taction_flow = ThoughtTrace::ActionFlowController.new(@space, @selection, @text_input)\n\t\tcallbacks = InputSystem::MouseActionController.new @mouse, action_flow\n\t\t\n\t\t\tevent = InputSystem::ButtonEvent.new :right_click, callbacks\n\t\t\tevent.bind_to keys:[Gosu::MsRight], modifiers:[]\n\t\t\t\n\t\t\taction_flow.bindings[:existing][:drag] = :resize\n\t\t\n\t\t@actions << action_flow\n\t\t@buttons.register event\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\tcallbacks = ThoughtTrace::Events::PressEnter.new @space, @text_input\n\t\tevent = InputSystem::ButtonEvent.new :enter, callbacks\n\t\t\n\t\tevent.bind_to keys:[Gosu::KbReturn], modifiers:[]\n\t\t\n\t\t@buttons.register event\n\t\t\n\tend\n\t\n\tdef button_down(id)\n\t\t@buttons.button_down(id)\n\tend\n\t\n\tdef update\n\t\t@buttons.update\n\t\t@text_input.update\n\tend\n\t\n\t# draw things in world space\n\tdef draw\n\t\t@actions.each do |action|\n\t\t\taction.draw @mouse.position_in_space\n\t\tend\n\t\t\n\t\t@text_input.draw\n\tend\n\t\n\tdef button_up(id)\n\t\t@buttons.button_up(id)\n\tend\n\t\n\tdef shutdown\n\t\t\n\tend\nend\n\n\n\nend",
			"ThoughtTrace",
			"\n",
			"clerical"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 51,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/home/ravenskrag/Projects/2_Personal/Current/ruby_of_cpp_combination/RubyCPP/Oni/ext/oni/extconf.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13853,
						"regions":
						{
						},
						"selection":
						[
							[
								1842,
								1842
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1023.0,
						"zoom_level": 1.0
					},
					"stack_index": 63,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/home/ravenskrag/Projects/2_Personal/Current/ruby_of_cpp_combination/RubyCPP/Oni/Rakefile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 18653,
						"regions":
						{
						},
						"selection":
						[
							[
								154,
								154
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 32,
					"type": "text"
				},
				{
					"buffer": 2,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3,
						"regions":
						{
						},
						"selection":
						[
							[
								3,
								3
							]
						],
						"settings":
						{
							"auto_name": "---",
							"bracket_highlighter.busy": false,
							"rainbowth.lispy": false,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 64,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "Gemfile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1035,
						"regions":
						{
						},
						"selection":
						[
							[
								90,
								90
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "lib/rubyOF.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8957,
						"regions":
						{
						},
						"selection":
						[
							[
								417,
								417
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
									"1":
									[
										406,
										412
									]
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 52,
					"type": "text"
				},
				{
					"buffer": 5,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3,
						"regions":
						{
						},
						"selection":
						[
							[
								3,
								3
							]
						],
						"settings":
						{
							"auto_name": "---",
							"bracket_highlighter.busy": false,
							"rainbowth.lispy": false,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 61,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": ".gitignore",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1867,
						"regions":
						{
						},
						"selection":
						[
							[
								1003,
								1003
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 1500.0,
						"zoom_level": 1.0
					},
					"stack_index": 51,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "configurator.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1782,
						"regions":
						{
						},
						"selection":
						[
							[
								971,
								971
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										968,
										971
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/dot.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										945,
										947
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 279.0,
						"zoom_level": 1.0
					},
					"stack_index": 26,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "common.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4704,
						"regions":
						{
						},
						"selection":
						[
							[
								2924,
								2924
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										3085,
										3088
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/dot.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										2825,
										2830
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1674.0,
						"zoom_level": 1.0
					},
					"stack_index": 27,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "build/build.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3792,
						"regions":
						{
						},
						"selection":
						[
							[
								1847,
								1847
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										3778,
										3781
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/dot.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										30,
										35
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "build/project_generator.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3708,
						"regions":
						{
						},
						"selection":
						[
							[
								2494,
								2494
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										3556,
										3559
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/dot.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										2084,
										2087
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 2046.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 11,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 422,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										131,
										147
									],
									[
										327,
										343
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								83,
								83
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 1,
							"rainbowth.lispy": false,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 31,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "Rakefile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 47312,
						"regions":
						{
						},
						"selection":
						[
							[
								41206,
								41206
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 49869.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 13,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 880,
						"regions":
						{
						},
						"selection":
						[
							[
								286,
								286
							]
						],
						"settings":
						{
							"auto_indent": false,
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_width": 2,
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 30,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "ext/oF_apps/testApp/oF_build_variables.yaml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 77468,
						"regions":
						{
						},
						"selection":
						[
							[
								73455,
								73455
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										73470,
										73471
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/double_quote.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										73454,
										73455
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/YAML/YAML.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 72376.0,
						"zoom_level": 1.0
					},
					"stack_index": 60,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "ext/rubyOF/extconf.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 582,
						"regions":
						{
						},
						"selection":
						[
							[
								411,
								411
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										410,
										411
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										394,
										395
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 53,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "ext/rubyOF/extconf_common.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5650,
						"regions":
						{
						},
						"selection":
						[
							[
								2646,
								2646
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3506.0,
						"zoom_level": 1.0
					},
					"stack_index": 29,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "ext/rubyOF/extconf_printer.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2533,
						"regions":
						{
						},
						"selection":
						[
							[
								2172,
								2172
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										2289,
										2290
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										2061,
										2062
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 59,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "ext/rubyOF/extconf_variables.yaml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10021,
						"regions":
						{
						},
						"selection":
						[
							[
								6527,
								6527
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										6607,
										6608
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/double_quote.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										6454,
										6455
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/YAML/YAML.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3804.0,
						"zoom_level": 1.0
					},
					"stack_index": 39,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "ext/rubyOF/Makefile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12383,
						"regions":
						{
						},
						"selection":
						[
							[
								677,
								677
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/Makefile/Makefile.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 28,
					"type": "text"
				},
				{
					"buffer": 20,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4,
						"regions":
						{
						},
						"selection":
						[
							[
								4,
								4
							]
						],
						"settings":
						{
							"auto_name": "l---",
							"bracket_highlighter.busy": false,
							"rainbowth.lispy": false,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "build/extension_loader.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1226,
						"regions":
						{
						},
						"selection":
						[
							[
								233,
								233
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										247,
										248
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										233,
										234
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "build/window_guard.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 795,
						"regions":
						{
						},
						"selection":
						[
							[
								398,
								398
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										791,
										794
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/dot.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										199,
										204
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 22,
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "build/runtime_loader.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2,
						"regions":
						{
						},
						"selection":
						[
							[
								2,
								2
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"type": "text"
				},
				{
					"buffer": 24,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3,
						"regions":
						{
						},
						"selection":
						[
							[
								3,
								3
							]
						],
						"settings":
						{
							"auto_name": "---",
							"bracket_highlighter.busy": false,
							"rainbowth.lispy": false,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 62,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "ext/oF_apps/testApp/src/ofApp.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 577,
						"regions":
						{
						},
						"selection":
						[
							[
								560,
								560
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										574,
										575
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										65,
										66
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 58,
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "ext/oF_apps/testApp/src/ofApp.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2071,
						"regions":
						{
						},
						"selection":
						[
							[
								683,
								683
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										843,
										844
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										661,
										662
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 25,
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "ext/rubyOF/launcher.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1065,
						"regions":
						{
						},
						"selection":
						[
							[
								1026,
								1026
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1061,
										1062
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										205,
										206
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 57,
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "ext/rubyOF/launcher.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3949,
						"regions":
						{
						},
						"selection":
						[
							[
								1522,
								1522
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										2048,
										2049
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										1263,
										1264
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1488.0,
						"zoom_level": 1.0
					},
					"stack_index": 56,
					"type": "text"
				},
				{
					"buffer": 29,
					"file": "ext/openFrameworks/libs/openFrameworks/app/ofAppRunner.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4317,
						"regions":
						{
						},
						"selection":
						[
							[
								1563,
								1563
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1617,
										1618
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										1552,
										1553
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 766.0,
						"zoom_level": 1.0
					},
					"stack_index": 55,
					"type": "text"
				},
				{
					"buffer": 30,
					"file": "ext/openFrameworks/libs/openFrameworks/app/ofBaseApp.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4154,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 54,
					"type": "text"
				},
				{
					"buffer": 31,
					"file": "ext/rubyOF/app_factory.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 237,
						"regions":
						{
						},
						"selection":
						[
							[
								237,
								237
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 93.0,
						"zoom_level": 1.0
					},
					"stack_index": 43,
					"type": "text"
				},
				{
					"buffer": 32,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15,
						"regions":
						{
						},
						"selection":
						[
							[
								15,
								15
							]
						],
						"settings":
						{
							"auto_name": "--- Boilerplate",
							"bracket_highlighter.busy": false,
							"rainbowth.lispy": false,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 50,
					"type": "text"
				},
				{
					"buffer": 33,
					"file": "bin/projects/boilerplate/config/build_variables.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 266,
						"regions":
						{
						},
						"selection":
						[
							[
								122,
								122
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										262,
										265
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/dot.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										175,
										177
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 34,
					"file": "bin/projects/boilerplate/ext/window/Makefile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12202,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/Makefile/Makefile.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 10738.0,
						"zoom_level": 1.0
					},
					"stack_index": 24,
					"type": "text"
				},
				{
					"buffer": 35,
					"file": "bin/projects/boilerplate/ext/window/app_factory.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 140,
						"regions":
						{
						},
						"selection":
						[
							[
								140,
								140
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 33,
					"type": "text"
				},
				{
					"buffer": 36,
					"file": "bin/projects/boilerplate/ext/window/app.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4651,
						"regions":
						{
						},
						"selection":
						[
							[
								410,
								410
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										725,
										726
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										274,
										275
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4743.0,
						"zoom_level": 1.0
					},
					"stack_index": 49,
					"type": "text"
				},
				{
					"buffer": 37,
					"file": "bin/projects/boilerplate/ext/window/app.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1127,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 48,
					"type": "text"
				},
				{
					"buffer": 38,
					"file": "bin/projects/boilerplate/ext/window/extconf.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 991,
						"regions":
						{
						},
						"selection":
						[
							[
								991,
								991
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 39,
					"file": "bin/projects/boilerplate/ext/callbacks/extconf.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 692,
						"regions":
						{
						},
						"selection":
						[
							[
								692,
								692
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 40,
					"file": "bin/projects/boilerplate/lib/main.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1416,
						"regions":
						{
						},
						"selection":
						[
							[
								1416,
								1416
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 41,
					"file": "bin/projects/boilerplate/Gemfile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 262,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 42,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11,
						"regions":
						{
						},
						"selection":
						[
							[
								11,
								11
							]
						],
						"settings":
						{
							"auto_name": "--- Example",
							"bracket_highlighter.busy": false,
							"rainbowth.lispy": false,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 23,
					"type": "text"
				},
				{
					"buffer": 43,
					"file": "bin/projects/example/ext/window/Makefile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12202,
						"regions":
						{
						},
						"selection":
						[
							[
								8906,
								8906
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/Makefile/Makefile.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 7245.0,
						"zoom_level": 1.0
					},
					"stack_index": 47,
					"type": "text"
				},
				{
					"buffer": 44,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1022,
						"regions":
						{
						},
						"selection":
						[
							[
								437,
								437
							]
						],
						"settings":
						{
							"auto_name": "",
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 45,
					"type": "text"
				},
				{
					"buffer": 45,
					"file": "bin/projects/example/ext/window/app_factory.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 140,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 37,
					"type": "text"
				},
				{
					"buffer": 46,
					"file": "bin/projects/example/ext/window/app.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8025,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 36,
					"type": "text"
				},
				{
					"buffer": 47,
					"file": "bin/projects/example/ext/window/app.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1446,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 46,
					"type": "text"
				},
				{
					"buffer": 48,
					"file": "bin/projects/example/ext/window/extconf.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 991,
						"regions":
						{
						},
						"selection":
						[
							[
								991,
								991
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 49,
					"file": "bin/projects/example/ext/callbacks/extconf.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 692,
						"regions":
						{
						},
						"selection":
						[
							[
								692,
								692
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"type": "text"
				},
				{
					"buffer": 50,
					"file": "bin/projects/example/lib/main.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1416,
						"regions":
						{
						},
						"selection":
						[
							[
								1416,
								1416
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 51,
					"file": "bin/projects/example/Gemfile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 291,
						"regions":
						{
						},
						"selection":
						[
							[
								261,
								261
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 52,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17,
						"regions":
						{
						},
						"selection":
						[
							[
								17,
								17
							]
						],
						"settings":
						{
							"auto_name": "---round_tripping",
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"rainbowth.lispy": false,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 44,
					"type": "text"
				},
				{
					"buffer": 53,
					"file": "bin/projects/round_tripping/ext/window/app.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5138,
						"regions":
						{
						},
						"selection":
						[
							[
								404,
								404
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1212,
										1213
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										274,
										275
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 35,
					"type": "text"
				},
				{
					"buffer": 54,
					"file": "bin/projects/round_tripping/ext/window/app.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1127,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 42,
					"type": "text"
				},
				{
					"buffer": 55,
					"file": "bin/projects/round_tripping/lib/window.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1997,
						"regions":
						{
						},
						"selection":
						[
							[
								286,
								286
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										484,
										485
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/square_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										476,
										477
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 40,
					"type": "text"
				},
				{
					"buffer": 56,
					"file": "bin/projects/round_tripping/ext/callbacks/callbacks.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2685,
						"regions":
						{
						},
						"selection":
						[
							[
								426,
								426
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										425,
										426
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										126,
										127
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 38,
					"type": "text"
				},
				{
					"buffer": 57,
					"file": "bin/projects/round_tripping/ext/callbacks/callbacks.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 497,
						"regions":
						{
						},
						"selection":
						[
							[
								497,
								497
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 41,
					"type": "text"
				},
				{
					"buffer": 58,
					"file": "bin/projects/round_tripping/ext/window/extconf.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 991,
						"regions":
						{
						},
						"selection":
						[
							[
								991,
								991
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"type": "text"
				},
				{
					"buffer": 59,
					"file": "bin/projects/round_tripping/ext/callbacks/extconf.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 692,
						"regions":
						{
						},
						"selection":
						[
							[
								692,
								692
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"type": "text"
				},
				{
					"buffer": 60,
					"file": "bin/projects/round_tripping/lib/main.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1416,
						"regions":
						{
						},
						"selection":
						[
							[
								1416,
								1416
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"git_gutter_is_enabled": true,
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 61,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3,
						"regions":
						{
						},
						"selection":
						[
							[
								3,
								3
							]
						],
						"settings":
						{
							"auto_name": "---",
							"bracket_highlighter.busy": false,
							"rainbowth.lispy": false,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 34,
					"type": "text"
				},
				{
					"buffer": 62,
					"file": "bin/projects/container/foo/ext/callbacks/extconf.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 843,
						"regions":
						{
						},
						"selection":
						[
							[
								565,
								565
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										565,
										566
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/single_quote.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										561,
										562
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"git_gutter_is_enabled": false,
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 63,
					"file": "bin/projects/container/foo/ext/window/extconf.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1084,
						"regions":
						{
						},
						"selection":
						[
							[
								338,
								338
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"git_gutter_is_enabled": false,
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 64,
					"file": "bin/projects/container/foo/ext/window/constants/scratch.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 216,
						"regions":
						{
						},
						"selection":
						[
							[
								20,
								20
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"git_gutter_is_enabled": false,
							"rainbowth.lispy": false,
							"syntax": "Packages/User/Ruby.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 39.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 323.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 96.0
	},
	"pinned_build_system": "qbs debug",
	"project": "project_build_system.sublime-project",
	"replace":
	{
		"height": 74.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"rake",
				"gem_structure/Rakefile"
			],
			[
				"project",
				"gem_structure/build/project_generator.rb"
			],
			[
				"proge",
				"gem_structure/build/project_generator.rb"
			],
			[
				"extload",
				"gem_structure/build/extension_loader.rb"
			],
			[
				"generato",
				"gem_structure/build/project_generator.rb"
			],
			[
				"ricearray",
				"rice-2.1.1/rice/Array.hpp"
			],
			[
				"rak.e",
				"rice-2.1.1/post-automake.rb"
			],
			[
				"extconfcomm",
				"gem_structure/ext/rubyOF/extconf_common.rb"
			],
			[
				"roundwindext",
				"gem_structure/bin/projects/round_tripping/ext/window/extconf.rb"
			],
			[
				"callback",
				"gem_structure/bin/projects/round_tripping/ext/callbacks/callbacks.cpp"
			],
			[
				"triex",
				"gem_structure/bin/projects/round_tripping/ext/callbacks/extconf.rb"
			],
			[
				"routrwi",
				"gem_structure/bin/projects/round_tripping/lib/window.rb"
			],
			[
				"routrimain.rb",
				"gem_structure/bin/projects/round_tripping/lib/main.rb"
			],
			[
				"rountrapp",
				"gem_structure/bin/projects/round_tripping/ext/window/app.cpp"
			],
			[
				"rubyof",
				"gem_structure/lib/rubyOF.rb"
			],
			[
				"rubyof.rb",
				"gem_structure/lib/rubyOF.rb"
			],
			[
				"makefilestatic",
				"gem_structure/ext/oF_apps/testApp/Makefile.static_lib"
			],
			[
				"ricedatatype",
				"rice-2.1.1/rice/Data_Type.cpp"
			],
			[
				"appfact",
				"gem_structure/ext/rubyOF/app_factory.h"
			],
			[
				".git",
				"gem_structure/.gitignore"
			],
			[
				"commo",
				"gem_structure/common.rb"
			],
			[
				".yaml",
				"gem_structure/ext/oF_apps/testApp/raw_oF_variables.yaml"
			],
			[
				"extconfvar",
				"gem_structure/ext/rubyOF/extconf_variables.rb"
			],
			[
				"ext",
				"gem_structure/ext/rubyOF/extconf.rb"
			],
			[
				"buildvar",
				"gem_structure/ext/oF_apps/testApp/oF_build_variables.yaml"
			],
			[
				"rakefile",
				"gem_structure/Rakefile"
			],
			[
				"ofappsapp.cpp",
				"gem_structure/ext/oF_apps/testApp/src/ofApp.cpp"
			],
			[
				"templapp.",
				"gem_structure/bin/projects/template/ext/app.cpp"
			],
			[
				"rbapp",
				"gem_structure/ext/rubyOF/rb_app.cpp"
			],
			[
				"ofbaseap",
				"gem_structure/ext/openFrameworks/libs/openFrameworks/app/ofBaseApp.h"
			],
			[
				"launcher",
				"gem_structure/ext/rubyOF/launcher.cpp"
			],
			[
				"ofmain.h",
				"gem_structure/ext/openFrameworks/libs/openFrameworks/ofMain.h"
			],
			[
				"ofbaseapp",
				"gem_structure/ext/openFrameworks/libs/openFrameworks/app/ofBaseApp.h"
			],
			[
				"comm",
				"gem_structure/common.rb"
			],
			[
				"output.xm",
				"gem_structure/ext/rubyOF/output.xml"
			],
			[
				"trace.txt",
				"gem_structure/ext/rubyOF/trace.txt"
			],
			[
				"ex",
				"gem_structure/examine2.txt"
			],
			[
				"ofbasea",
				"gem_structure/ext/openFrameworks/libs/openFrameworks/app/ofBaseApp.h"
			],
			[
				"ofima",
				"gem_structure/ext/openFrameworks/libs/openFrameworks/graphics/ofImage.cpp"
			],
			[
				".json",
				"gem_structure/compile_commands.json"
			],
			[
				"variables",
				"gem_structure/ext/rubyOF/extconf_variables.rb"
			],
			[
				"image",
				"gem_structure/ext/openFrameworks/libs/openFrameworks/graphics/ofImage.cpp"
			],
			[
				"datapa",
				"gem_structure/ext/rubyOF/constants/data_path.h"
			],
			[
				"protectipp",
				"rice-2.1.1/rice/protect.ipp"
			],
			[
				"ofappglf",
				"ext/openFrameworks/libs/openFrameworks/app/ofAppGLFWWindow.cpp"
			],
			[
				"rice.h",
				"ext/rubyOF/rice.h"
			],
			[
				"rice",
				"ext/rubyOF/rice.h"
			],
			[
				"oflog",
				"ext/openFrameworks/libs/openFrameworks/utils/ofLog.cpp"
			],
			[
				"staticlib",
				"ext/oF_apps/testApp/Makefile.static_lib"
			],
			[
				"static",
				"ext/oF_apps/testApp/Makefile.static_lib"
			],
			[
				"ofmain",
				"ext/openFrameworks/libs/openFrameworks/ofMain.h"
			],
			[
				"ofttf",
				"ext/openFrameworks/libs/openFrameworks/graphics/ofTrueTypeFont.cpp"
			],
			[
				"example",
				"ext/openFrameworks/examples/events/advancedEventsExample/src/eventsObject.h"
			],
			[
				"ofapp",
				"ext/oF_apps/testApp/src/ofApp.cpp"
			],
			[
				"compile",
				"compile_commands.json"
			],
			[
				".gi",
				".gitignore"
			],
			[
				"imageloaderexample",
				"ext/openFrameworks/examples/input_output/imageLoaderExample/src/main.cpp"
			],
			[
				"main",
				"bin/projects/template/lib/main.rb"
			],
			[
				"glm",
				"ext/openFrameworks/libs/glm/include/glm/glm.hpp"
			],
			[
				"offbo",
				"ext/openFrameworks/libs/openFrameworks/gl/ofFbo.cpp"
			],
			[
				"config",
				"ext/oF_apps/testApp/config.make"
			],
			[
				"giti",
				".gitignore"
			],
			[
				"make",
				"ext/oF_apps/testApp/Makefile"
			],
			[
				"makefilecommonconfigshared",
				"ext/openFrameworks/libs/openFrameworksCompiled/project/makefileCommon/config.shared.mk"
			],
			[
				"openframeworkscompiledprojectmake",
				"ext/openFrameworks/libs/openFrameworksCompiled/project/Makefile"
			],
			[
				"linuxof",
				"ext/openFrameworks/scripts/linux/compileOF.sh"
			],
			[
				"linuxdownlib",
				"ext/openFrameworks/scripts/linux/download_libs.sh"
			],
			[
				"downl",
				"ext/openFrameworks/scripts/android/download_libs.sh"
			],
			[
				"compilof",
				"ext/openFrameworks/scripts/linux/compileOF.sh"
			],
			[
				"rakefil",
				"Rakefile"
			],
			[
				"extc",
				"ext/rubyOF/extconf.rb"
			],
			[
				"gitmo",
				".gitmodules"
			],
			[
				"common.rb",
				"build/common.rb"
			],
			[
				"compilepg",
				"ext/openFrameworks/scripts/linux/compilePG.sh"
			],
			[
				"commandlinemakefile",
				"ext/openFrameworks/apps/projectGenerator/commandLine/Makefile"
			],
			[
				"linuxbuildpg",
				"ext/openFrameworks/apps/projectGenerator/scripts/linux/buildPG.sh"
			],
			[
				"openframereadme",
				"ext/openFrameworks/README.md"
			],
			[
				"projgencommreadm",
				"ext/openFrameworks/apps/projectGenerator/commandLine/readme.md"
			],
			[
				"readm",
				"README.md"
			],
			[
				"rubof",
				"lib/rubyOF.rb"
			],
			[
				"ver",
				"lib/rubyOF/version.rb"
			],
			[
				"configu",
				"configurator.rb"
			],
			[
				"con",
				"config.yaml"
			],
			[
				"projecgenerscriptsbuil",
				"ext/openFrameworks/apps/projectGenerator/scripts/linux/buildPG.sh"
			],
			[
				"openframeworksreadme",
				"ext/openFrameworks/README.md"
			],
			[
				"read",
				"README.md"
			],
			[
				"gitig",
				".gitignore"
			],
			[
				"ofxgui",
				"addons/ofxGui/src/ofxGui.h"
			],
			[
				"pocorulescompile",
				"of_v0.9.3_libs/custom/poco/poco-1.7.4-all/build/rules/compile"
			],
			[
				"custompocolinux",
				"of_v0.9.3_libs/custom/poco/poco-1.7.4-all/build/config/Linux"
			],
			[
				"custompocomakefile",
				"of_v0.9.3_libs/custom/poco/poco-1.7.4-all/Makefile"
			],
			[
				"compileprojectmk",
				"of_v0.9.3_linux64_release/libs/openFrameworksCompiled/project/makefileCommon/compile.project.mk"
			],
			[
				"configproject",
				"of_v0.9.3_linux64_release/libs/openFrameworksCompiled/project/makefileCommon/config.project.mk"
			],
			[
				"configsharedmk",
				"of_v0.9.3_linux64_release/libs/openFrameworksCompiled/project/makefileCommon/config.shared.mk"
			],
			[
				"comple",
				"of_v0.9.3_linux64_release/scripts/linux/compileOF.sh"
			],
			[
				"configlinux6",
				"of_v0.9.3_linux64_release/libs/openFrameworksCompiled/project/linux64/config.linux64.default.mk"
			],
			[
				"compiledmakefilecommcompile",
				"of_v0.9.3_linux64_release/libs/openFrameworksCompiled/project/makefileCommon/compile.core.mk"
			],
			[
				"openframeworksmakefile",
				"of_v0.9.3_linux64_release/libs/openFrameworksCompiled/project/Makefile"
			],
			[
				"install",
				"of_v0.9.3_linux64_release/INSTALL.md"
			],
			[
				"releasecompile",
				"of_v0.9.3_linux64_release/addons/obj/linux64/Release/.compiler_flags"
			],
			[
				"compilerflags",
				"of_v0.9.3_linux64_release/addons/obj/linux64/Debug/.compiler_flags"
			],
			[
				"sketchstatic",
				"RubyCPP/Oni/ext/oni/cpp/mySketch/Makefile.static_lib"
			],
			[
				"sketchaddons",
				"RubyCPP/Oni/ext/oni/cpp/mySketch/addons.make"
			],
			[
				"ofbuildvaria",
				"RubyCPP/Oni/ext/oni/cpp/mySketch/oF_build_variables.yaml"
			],
			[
				"of_testadd",
				"~/Experiments/RubyCPP/Oni/ext/oni/cpp/oF_Test/mySketch/addons.make"
			],
			[
				"addons",
				"of_v0.9.3_linux64_release/addons/ofxAbletonLive/AbletonOSC/addons.make"
			],
			[
				"ofbuild",
				"RubyCPP/Oni/oF_build_variables.yaml"
			],
			[
				"extvar",
				"RubyCPP/Oni/ext/oni/extconf_variables.rb"
			],
			[
				".",
				".gitignore"
			],
			[
				"event.h",
				"poco-1.7.4-all/Foundation/include/Poco/Event.h"
			],
			[
				"event",
				"poco-1.7.4-all/Foundation/src/Event.cpp"
			],
			[
				"thread",
				"poco-1.7.4-all/Foundation/src/Thread.cpp"
			],
			[
				"test",
				"Oni/lib/test.rb"
			],
			[
				"xt",
				"Oni/ext/oni/extconf.rb"
			],
			[
				"mysketchmake",
				"Oni/ext/oni/cpp/oF_Test/mySketch/Makefile"
			],
			[
				"gem",
				"Oni/oni.gemspec"
			],
			[
				"log",
				"Oni/ext/oni/mkmf.log"
			],
			[
				"extco",
				"Oni/ext/oni/extconf.deploy.rb"
			],
			[
				"compileco",
				"~/Experiments/OpenFrameworks/of_v0.9.3_linux64_release/libs/openFrameworksCompiled/project/makefileCommon/compile.core.mk"
			],
			[
				"config.m",
				"Oni/ext/oni/cpp/oF_Test/mySketch/config.make"
			],
			[
				"link",
				"~/Experiments/OpenFrameworks/of_v0.9.3_linux64_release/libs/openFrameworksCompiled/project/linux64/config.linux64.default.mk"
			],
			[
				"compileof",
				"of_v0.9.3_linux64_release/scripts/linux/compileOF.sh"
			],
			[
				"git",
				"~/Experiments/RubyCPP/.gitignore"
			],
			[
				"e",
				"~/Experiments/RubyCPP/Oni/ext/oni/extconf.rb"
			],
			[
				"confp",
				"~/Experiments/OpenFrameworks/of_v0.9.3_linux64_release/libs/openFrameworksCompiled/project/makefileCommon/config.project.mk"
			],
			[
				"rubycppofmake",
				"RubyCPP/Oni/ext/oni/cpp/oF_Test/mySketch/Makefile"
			],
			[
				"rubycpprake",
				"RubyCPP/Oni/Rakefile"
			],
			[
				"rubycppext",
				"RubyCPP/Oni/ext/oni/extconf.rb"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 1000.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Desktop/gem_structure/example_project.sublime-project"
			],
			[
				"th",
				"/home/ravenskrag/Documents/Sublime/ThoughtTrace.sublime-project"
			],
			[
				"ete",
				"/home/ravenskrag/Documents/Projects/Eternity.sublime-project"
			],
			[
				"e",
				"/home/ravenskrag/Documents/Projects/Eternity.sublime-project"
			],
			[
				"et",
				"/home/ravenskrag/Documents/Projects/Eternity.sublime-project"
			],
			[
				"gamn",
				"/home/ravenskrag/Documents/Projects/GameDesignNotes.sublime-project"
			],
			[
				"oni",
				"/home/ravenskrag/Documents/Projects/Oni.sublime-project"
			],
			[
				"on",
				"/home/ravenskrag/Documents/Projects/Oni.sublime-project"
			],
			[
				"321",
				"/home/ravenskrag/Documents/Projects/CS321_Project.sublime-project"
			],
			[
				"go",
				"/home/ravenskrag/Documents/Projects/Gosu.sublime-project"
			],
			[
				"42",
				"/home/ravenskrag/Documents/Projects/CS425_OgreProject.sublime-project"
			]
		],
		"width": 760.0
	},
	"select_symbol":
	{
		"height": 488.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"wrap",
				"wrap"
			],
			[
				"keyboard",
				"keyboard_cb"
			],
			[
				"key",
				"keys"
			],
			[
				"setupopeng",
				"ofSetupOpenGL"
			],
			[
				"ofsetupop",
				"ofSetupOpenGL"
			]
		],
		"width": 492.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": false,
	"side_bar_visible": true,
	"side_bar_width": 364.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
